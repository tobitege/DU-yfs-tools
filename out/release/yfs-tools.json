{"slots":{"-5":{"name":"library","type":{"events":[],"methods":[]}},"-4":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"player","type":{"events":[],"methods":[]}},"-2":{"name":"construct","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}}},"handlers":[{"key":1,"filter":{"slotKey":-5,"signature":"onStart()","args":[]},"code":";(function()\nlocal a={}local b=0;function library.addEventHandlers(c)if not c or c.onEvent and c.triggerEvent then return false end;b=b+1;a[b]=c;local d,e,f='table','function','thread'if d~=type(c)then error('You can only add event handlers to table objects!')end;local g={}local function h(c)local i=type(c)return e==i or d==i and h(getmetatable(c).__call)or f==i end;c.onEvent=function(self,j,k,l)if not h(k)then error('Event handler must be a function, a callable object or a thread!')end;l=l or self;if d~=type(l)then error('The value of self must be a table!')end;if not g[j]then g[j]={_=0}end;local m=f==type(k)and function(...)coroutine.resume(k,...)end or k;local k=g[j]local n=k._+1;k[n]={m,l}k._=n;return n end;c.clearEvent=function(self,j,o)if g[j]and g[j][o]then g[j][o]=nil end end;c.clearAllEvents=function(self)g={}end;c.triggerEvent=function(self,j,...)local p=g[j]if p then for q=1,p._ do local k=p[q]if k then k[1](k[2],...)end end end end;return true end;function library.clearAllEventHandlers()for q=1,b do local c=a[q]if c and c.clearAllEvents then c:clearAllEvents()end end end\nend)()"},{"key":2,"filter":{"slotKey":-5,"signature":"onStart()","args":[]},"code":";(function()\nlocal a=DULibrary or{}function a.getLinks(b,c)local d={}if not b then b={}end;for e,f in pairs(unit.getOutPlugs())do local g=unit[f.name]if'table'==type(g)and'function'==type(g.getClass)then local h=true;for i,j in pairs(b)do if not('function'==type(g[i])and j==g[i]():sub(1,#j))then h=false;break end end;if h then if c then table.insert(d,g)else d[f.name]=g end end end end;return d end;function a.getLinksByClass(k,c)return a.getLinks({getClass=k},c)end;function a.getLinkByClass(k)return a.getLinksByClass(k,true)[1]end;function a.getCoreUnit()return a.getLinkByClass('CoreUnit')end;function a.getLinkByName(l)local m=a.getCoreUnit()if not m then error('getLinkByName requires a linked CoreUnit to work')end;local d=a.getLinks()for n,o in pairs(d)do if l==m.getElementNameById(o.getLocalId())then return o end end end\nend)()"},{"key":3,"filter":{"slotKey":-5,"signature":"onStart()","args":[]},"code":"package.preload['YFS-Tools:globals.lua']=(function()\nConfig={core=nil,databanks={},screens={}}DetectedArch=0;DetectedYFS=false;YFSDB=nil;YFS_NAMED_POINTS=\"NamedPoints\"YFS_ROUTES=\"NamedRoutes\"ARCH_SAVED_LOCATIONS=\"SavedLocations\"DEBUG=false;ScriptStartTime=0;INGAME=system~=nil;if not INGAME then else ScriptStartTime=system.getArkTime()print=system.print end;projector=nil;clicked=false;WP_EG_ENABLED=false;WP_WOLF_ENABLED=false;CNID=construct.getId()\nend)\npackage.preload['YFS-Tools:../util/SU.lua']=(function()\nlocal a={}local b,c,d=string.match,string.len,tonumber;function a.Trim(e)if c(e)==0 then return\"\"end;return a.Ltrim(a.Rtrim(e))end;function a.Ltrim(e)local f,g=string.gsub(e,\"^%s+\",\"\")return f end;function a.Rtrim(e)local f,g=string.gsub(e,\"%s+$\",\"\")return f end;function a.Pad(e,h,i)if not e or not i or not h or d(i)<1 then return e end;return string.rep(h,i-e:len())..e end;function a.StartsWith(e,j)if not e or not j then return false end;return string.sub(e,1,#j)==j end;function a.EndsWith(e,k)if not e or not k then return false end;return string.sub(e,-#k)==k end;function a.RtrimChar(e,l)if not e or not l then return e end;while#e>0 and a.EndsWith(e,l)do e=string.sub(e,1,#e-#l)end;return e end;function a.SplitQuoted(e)local function m(n)return n=='\"'or n==\"'\"end;local function o(n)return n==\" \"end;local function p(q,r)r=a.Trim(r)if r:len()>0 then table.insert(q,#q+1,r)end end;local s=false;local t={}if type(e)~=\"string\"or e==\"\"then return t end;local u=\"\"for n in string.gmatch(e,\".\")do if o(n)and not s then p(t,u)u=\"\"elseif m(n)then if s then p(t,u)u=\"\"s=false else p(t,u)u=\"\"s=true end else u=u..n end end;p(t,u)return t end;function a.If(v,w,x)if v then return tostring(w or\"\")end;return tostring(x or\"\")end;function a.isPrintable(l)return b(l,\"[%g%s]\")~=nil end;function a.SplitAndCapitalize(y,z)if not y or not a.isPrintable(z)then return y end;local t={}for A in y:gmatch(\"[^\"..z..\"]+\")do table.insert(t,A)end;for B=1,#t do t[B]=t[B]:sub(1,1):upper()..t[B]:sub(2)end;return table.concat(t)end;return a\nend)\npackage.preload['YFS-Tools:../util/out.lua']=(function()\nlocal a={}function a.PrettyDistance(b)if b<10000 then return Round(b,2)..\" m\"end;if b<200000 then return Round(b/1000,2)..\" km\"end;return Round(b/200000,2)..\" SU\"end;function a.PrettyMass(c)if c>1000000 then return Round(c/1000000,2)..\" KT\"end;if c>1000 then return Round(c/1000,2)..\" tons\"end;return Round(c,2)..\" kg\"end;function a.PrintLines(d)if not d then return end;if type(d)~=\"string\"then d=tostring(d)end;for e in d:gmatch(\"([^\\n]+)\")do print(e)end end;function a.Error(f)a.PrintLines(f)return false end;function a.DeepPrint(g,h)if IsTable(g)then local i=0;h=h or 0;for j,k in pairs(g)do if IsTable(k)then P(\"-> \"..j)a.DeepPrint(k,h)elseif type(k)==\"boolean\"then P(j..\": \"..BoolStr(k))elseif type(k)==\"function\"then P(j..\"()\")elseif k==nil then P(j..\" (\"..type(k)..\")\")else P(j..\": \"..tostring(k))end;i=i+1;if h>0 and i>=h then P(\"^:^:^:^: cutoff reached :^:^:^:^\")return end end elseif type(g)==\"boolean\"then P(BoolStr(g))else P(g)end end;function a.DumpVar(l)local m={}local n=\"\"local o=\" \"local function p(q,r)local s=type(q)local e=tostring(q)if s==\"table\"then if m[e]then n=n..\"<\"..e..\">\\n\"else m[e]=(m[e]or 0)+1;n=n..\"(\"..e..\") {\\n\"for j,k in pairs(q)do n=n..string.rep(o,r+1)..\"[\"..j..\"] => \"p(k,r+1)end;n=n..string.rep(o,r)..\"}\\n\"end elseif s==\"boolean\"then n=n..\"(\"..BoolStr(s)..\")\\n\"elseif s==\"number\"then n=n..\"(\"..s..\") \"..e..\"\\n\"else n=n..\"(\"..s..\") \\\"\"..e..\"\\\"\\n\"end end;p(l,0)return n end;return a\nend)\npackage.preload['YFS-Tools:../util/Dtbk.lua']=(function()\nDtbk={}Dtbk.__index=Dtbk;function Dtbk.new(a)local self=setmetatable({},Dtbk)self.DB=a;self.concat=table.concat;return self end;function Dtbk.hasKey(self,b)return self.DB.hasKey(b)end;function Dtbk.getString(self,b)return self.DB.getStringValue(b)end;function Dtbk.setString(self,b,c)self.DB.setStringValue(b,c)end;function Dtbk.setData(self,b,c)local d=json.encode(c)self.DB.setStringValue(b,d)end;function Dtbk.getData(self,b)local e=self.DB.getStringValue(b)if e==nil then return nil end;local d=json.decode(e)return d end;function Dtbk.remove(self,f)self.DB.clearValue(f)end;function Dtbk.ResetAll(self)self.DB.clear()end\nend)\npackage.preload['YFS-Tools:libutils.lua']=(function()\nlocal a,b=tonumber,string.match;function IsTable(c)return c~=nil and type(c)==\"table\"end;function GetSortedAssocKeys(d)local e={}if not IsTable(d)then E(\"[E] Invalid object for GetSortedKeys()!\")return e end;for f,g in pairs(d)do table.insert(e,f)end;table.sort(e)return e end;function Round(h,i)local j=10^(i or 0)return(h*j+2^52+2^51-(2^52+2^51))/j end;function TableLen(d)if not IsTable(d)then return 0 end;local k=0;for g in pairs(d)do k=k+1 end;return k end;function GetIndex(d,l)if not IsTable(d)then return-1 end;for f,m in pairs(d)do if l==m then return f end end;return-1 end;function GetParamValue(n,o,p,q)local r=\"[E] Parameter value missing for \"..o;if n==nil or not IsTable(n)then if q==true then P(r)end;return nil end;for f,m in ipairs(n)do if m==o then local s=f+1;if#n<s then if q==true then P(r)end;return nil end;local t=n[s]if not p or p==\"string\"or p==\"s\"then if t=='\"\"'or t==\"''\"then return nil end;return t elseif(p==\"int\"or p==\"i\")and not b(t,\"%D\")then return a(t)elseif p==\"number\"or p==\"n\"then return a(t)elseif p==\"bool\"or p==\"b\"then if t then return true else return false end end;return nil end end;if q==true then E(r)end;return nil end;function PairsByKeys(u,v)local w={}for x in pairs(u)do table.insert(w,x)end;table.sort(w,v)local y=0;local z=function()y=y+1;if w[y]==nil then return nil else return w[y],u[w[y]]end end;return z end;function BoolState(A)if A then return\"enabled\"else return\"disabled\"end end;function BoolStr(B)if B==true then return\"true\"else return\"false\"end end;function ScreenOutput(C,D)local F=\"Point at screen, CTRL+L, then copy text!\"if#Config.screens>0 then local G=OutputFont or\"FiraMono\"local H=\"local text = [[\\n\"..C..\"\\n]]\\n\"..[[\nlocal rslib = require('rslib')\nlocal layer = createLayer()\nlocal rx, ry = getResolution()\nlocal fontSize = 15\nlocal font = loadFont(\"]]..G..[[\", fontSize)\nlocal line = 1\nfor str in text:gmatch(\"([^\\n]+)\") do addText(layer, font, str, 20, line*(fontSize+4)) line = line + 1\nend ]]Config.screens[1].setRenderScript(H)if D and D:len()then F=D..\"\\n\"..F end else F=\"Hint: link a screen to PB to easily copy text from it!\"end;P(F)return true end\nend)\npackage.preload['YFS-Tools:commands.lua']=(function()\nlocal a={}local b,c,d=string.match,string.format,string.len;local e,f,g,h,i,j=tonumber,utils.clamp,math.abs,math.max,math.floor,math.ceil;local function k(l,m,altitude,n)local o=0;local p={}local q=#m;for r,s in ipairs(m)do local t=l.v[s]if t~=nil then o=o+1;local u=s..n;if o>1 then table.insert(p,u)end;table.insert(p,s)if o<q then table.insert(p,u)end;local v=PM.ReplaceAltitudeInPos(t.pos,altitude)if l.v[u]~=nil then l.v[u].pos=v else l.v[u]={pos=v}P(u..\" \"..v)end end end;if o==0 then P(\"[E] No waypoints processed!\")return nil,nil end;P(\"[I] \"..o..\" waypoints at \"..altitude..\"m added (or changed)!\")return l,p end;local function w(x,y)if not DetectedYFS or not x then return false end;YFSDB:setData(x,y)return true end;local function z(x)if not DetectedYFS or not x then return false end;local y=YFSDB:getData(x)if y==nil or not IsTable(y.v)then return false end;return y end;local function A(y)w(YFS_NAMED_POINTS,y)end;local function B(y)w(YFS_ROUTES,y)end;function a.GetYFSNamedWaypoints(C)if not DetectedYFS then return E(\"[E] Linked YFS databank required!\")end;local D=z(YFS_NAMED_POINTS)if not D and not C then P(\"[I] No named waypoints\")end;return D end;function a.GetYFSRoutes()if not DetectedYFS then return E(\"[E] Linked YFS databank required!\")end;local y=z(YFS_ROUTES)if not y then return E('[I] No YFS routes found.')end;return y end;function a.PlanetInfoCmd(F)PM.PlanetInfo(F)end;function a.PrintAltitudeCmd(F)P(Out.PrettyDistance(PM.Altitude()))end;function a.PrintPosCmd(F)P(PM.GetCurrentPosString())end;function a.PrintWorldPosCmd(F)P(PM.Vec3ToPosString(PM.WorldPosVec3()))end;function a.WarpCostCmd(F)CalcWarpCost(F)end;function a.WpSaveNamedCmd(F,G)if not WM or not WM:hasPoints()then return E(\"[E] No waypoints to export.\")end;local H=\"\"for r,t in ipairs(WM:getSorted())do local I=t:AsString()if G then I=\"pos-save-as '\"..t:getName()..\"' -pos \"..I else I=\"/addlocation \"..t:getName()..\" \"..I end;H=H..I..\"\\n\"P(I)end;ScreenOutput(H)end;function a.ArchSaveNamedCmd(F)a.WpSaveNamedCmd(F,false)end;function a.WpExportCmd(F)if not WM or not WM:hasPoints()then return E(\"[E] No waypoints to export.\")end;local H=\"\"local J=WM:getSorted()for r,t in ipairs(J)do local K=t:getName()..\"\\n\"..t:AsString()..\"\\n\"H=H..K end;P(H)ScreenOutput(H)end;function a.WpAltitudeCeilingCmd(F)local m=a.GetYFSNamedWaypoints()if not m then return end;local L=SU.SplitQuoted(F)if#L~=2 then P(\"[E] Parameter(s) missing: 'name 1' 'name 2'\")return E(\"Example: /wp-altitude-ceiling 'Base 1' 'Base 2'\")end;local M=L[1]local N=L[2]local O,Q=true,true;if m.v[M]==nil or m.v[M]==\"\"then P(\"[E] Waypoint '\"..M..\"' not found.\")O=false end;if m.v[N]==nil or m.v[N]==\"\"then P(\"[E] Waypoint '\"..N..\"' not found.\")Q=false end;if not O or not Q then return end;if m.v[M]==m.v[N]then return E(\"[E] Parameters invalid (same names).\")end;local R=PM.GetAltitudeFromPos(m.v[M].pos)local S=PM.GetAltitudeFromPos(m.v[N].pos)if R==S then P(\"[I] Waypoints had same altitude, no changes applied.\")return end;local T,U=\"\",0;if R>S then T=N;U=R else T=M;U=S end;local v=PM.ReplaceAltitudeInPos(m.v[T].pos,U)m.v[T].pos=v;P(\"[I] Waypoint '\"..T..\"' changed to:\")P(v)A(m)return true end;function a.GetStoredLocations(V)if not V or not IsTable(V)then return end;for r,W in ipairs(V)do if W.name and W.position and W.position.x and W.position.y and W.position.z then P(\"[I] Location '\"..W.name..\"' found.\")local I='::pos{0,0,'..W.position.x..','..W.position.y..','..W.position.z..'}'PM.CreateWaypoint(I,W.name)end end end;function a.YfsAddAltitudeWpCmd(F)local l=a.GetYFSNamedWaypoints()if not l or not IsTable(l.v)or TableLen(l.v)==0 then return E(\"[E] No waypoints.\")end;local X=\"\\nExample: /yfs-add-altitude-wp -altitude 450 -suffix 'F'\"local Y=SU.SplitQuoted(F)local Z=GetParamValue(Y,\"-wpStartsWith\",\"s\")if#Y<1 then return E(\"[E] Parameter missing: -altitude\"..X)end;local _=GetParamValue(Y,\"-altitude\",\"n\",true)local a0=GetParamValue(Y,\"-suffix\",\"s\")if not a0 or a0==\"\"then a0=\"F\"end;if _<-100 or _>20000 then return E(\"[E] -altitude value out of range (-100 .. 20000)\"..X)end;local J={}for s in PairsByKeys(l.v)do if not Z or s:find(Z)>0 then table.insert(J,s)end end;local a1,p=k(l,J,_,a0)if a1~=nil and p~=nil then A(a1)end;return true end;function a.YfsBuildRouteFromWpCmd(F)local l=a.GetYFSNamedWaypoints()if not l or not IsTable(l.v)or TableLen(l.v)==0 then return E(\"[E] No waypoints.\")end;local a2=a.GetYFSRoutes()if not a2 or not IsTable(a2.v)or TableLen(a2.v)==0 then a2={v={},t=\"table\"}else end;local X=\"\\nExample: /yfs-build-route-from-wp -name 'Route' -altitude 450 -wpStartsWith 'Chr' -suffix 'F'\\n-suffix is optional, default F (Flight)\"local Y=SU.SplitQuoted(F)if#Y<1 then return E(\"[E] Parameters missing!\"..X)end;local a3=GetParamValue(Y,\"-name\",\"s\",true)if not a3 then return end;local Z=GetParamValue(Y,\"-wpStartsWith\",\"s\")local _=GetParamValue(Y,\"-altitude\",\"n\",true)if not _ then return end;local a0=GetParamValue(Y,\"-prefix\",\"s\")local a4=GetParamValue(Y,\"-marginL\",\"n\")local a5=GetParamValue(Y,\"-marginF\",\"n\")local a6=GetParamValue(Y,\"-maxSpeed\",\"n\")local a7=GetParamValue(Y,\"-finalSpeedF\",\"n\")a4=f(a4 or 0.1,0.1,100)a5=f(a5 or 0.1,0.1,100)a6=f(a6 or 0,0,1200)a7=f(a7 or 0,0,1200)if a2.v[a3]~=nil then return E(\"[E] Route \"..a3 ..\"already exists, aborting!\")end;if not type(a0)==\"string\"or a0==\"\"then a0=\"F\"end;if d(a0)>3 then return E(\"[E] -suffix accepts max. 3 characters\"..X)end;if _<-100 or _>20000 then return E(\"[E] -altitude value out of range (-100 .. 20000)\"..X)end;local J={}for s in PairsByKeys(l.v)do if not Z or s:find(Z)>0 then table.insert(J,s)end end;local l,a8=k(l,J,_,a0)if l==nil or a8==nil then return E(\"[I] No waypoints processed: no changes made.\")end;a2.v[a3]={points={}}local o=0;for r,s in ipairs(a8)do local t=l.v[s]if t~=nil then o=o+1;local a9={margin=0.1,maxSpeed=0}local aa={opt=a9,pos=t.pos,waypointRef=s}if GetIndex(J,s)<1 then if a7 and a7>0 and GetIndex(J,s)<1 then aa.opt.finalSpeed=a7 end;if a6 and a6>0 then aa.opt.maxSpeed=a6 end;if a5 and a5>0.1 then aa.opt.margin=a5 end;aa.opt.selectable=false;aa.opt.skippable=false else if a4 and a4>0.1 then aa.opt.margin=a4 end;aa.opt.selectable=true;aa.opt.skippable=true end;table.insert(a2.v[a3].points,aa)end end;P(\"[I] \"..o..\" positions added to route '\"..a3 ..\"'\")A(l)B(a2)end;function a.YfsSaveRouteCmd(F)local ab=a.GetYFSRoutes()if not ab then return end;local L=SU.SplitQuoted(F)if#L<1 then return E(\"[E] Parameter(s) missing: routename\\nExample: /yfs-save-route 'Cryo' -onlySelectable -withOptions -prefix 'Cryo'\")end;local ac=GetParamValue(L,\"-prefix\",\"s\")if not ac then ac=\"WP\"end;local ad=GetIndex(L,\"-onlySelectable\")>0;local ae=GetIndex(L,\"-withOptions\")>0;local af=L[1]local ag=ab.v[af]if not ag or not IsTable(ag.points)or#ag.points==0 then return E(\"[E] Route '\"..af..\"' not found or empty\")end;local ah,ai=\"create-route '\"..af..\"'\\r\\n\",\"\"local l=a.GetYFSNamedWaypoints()local aj=1;local ak={}for r,al in ipairs(ag.points)do local am=\"\"local an=ac..\" \"..c(\"%03d\",aj)if al.waypointRef and l then an=al.waypointRef;am=l.v[an].pos else am=al.pos or\"<unknown>\"end;if GetIndex(ak,an)<0 then ak[#ak+1]=an;local ao=\"pos-save-as '\"..an..\"' -pos \"..am;ah=ah..ao..\"\\n\"end;if not ad or al.opt[\"selectable\"]~=false then local ao=\"route-add-named-pos '\"..an..\"'\"if ae then if al.opt[\"maxSpeed\"]and al.opt[\"maxSpeed\"]~=0 then ao=ao..\" -maxspeed \"..al.opt[\"maxSpeed\"]end;if al.opt[\"margin\"]and al.opt[\"margin\"]~=0.1 then ao=ao..\" -margin \"..al.opt[\"margin\"]end;local ap=false;local aq=\"\"if al.opt[\"skippable\"]==true then ap=true;aq=aq..\" -toggleSkippable\"end;if al.opt[\"selectable\"]==false then ap=true;aq=aq..\" -toggleSelectable\"end;if al.opt[\"finalSpeed\"]and al.opt[\"finalSpeed\"]~=0 then ap=true;aq=aq..\" -finalSpeed \"..al.opt[\"finalSpeed\"]end;if ap then ao=ao..\"\\nroute-set-pos-option -ix \"..aj..aq end end;ai=ai..ao..\"\\n\"aj=aj+1 end end;ai=ai..\"route-save\\r\\n\"P(ah..ai)ScreenOutput(ah..ai)end;function a.YfsReplaceWpCmd(F)local m=a.GetYFSNamedWaypoints()if not m then return end;local ar=\"\\r\\nExample: /yfs-replace-wp 'base 1'\"local as=SU.SplitQuoted(F)if#as<1 then return E(\"[E] Parameter(s) missing: -name 'point'\"..ar)end;local an=GetParamValue(as,\"-name\",\"s\",true)if not an then return end;if not m.v[an]or m.v[an]==\"\"then return E(\"[E] Waypoint '\"..an..\"' not found.\"..ar)end;local v=PM.GetCurrentPosString()local at=GetParamValue(as,\"-pos\",\"s\")if at then local ao=PM.SplitPos(at)if not ao then return E(\"[E] Invalid ::pos{} specified!\")end;v=at end;m.v[an].pos=v;P(\"[I] Waypoint '\"..an..\"' changed to:\")P(v)A(m)return true end;function a.YfsRouteAltitudeCmd(F)local ab=a.GetYFSRoutes()if not ab then return end;local D=a.GetYFSNamedWaypoints()if not D then return end;local X=\"\\nExample:\\n/yfs-route-altitude -route 'name' -ix 2 -endIx 3 -alt 330\\nThe -endIx is optional.\"local L=SU.SplitQuoted(F)local a3=GetParamValue(L,\"-route\",\"s\",true)if not a3 then return end;if not ab.v[a3]then return E(\"[E] Route '\"..a3 ..\"' not found.\"..X)end;if not ab.v[a3].points or#ab.v[a3].points==0 then return E(\"[E] Route '\"..a3 ..\"' empty.\")end;local Z=GetParamValue(L,\"-ix\",\"i\",true)local au=GetParamValue(L,\"-endIx\",\"i\")local _=GetParamValue(L,\"-alt\",\"n\",true)local av=not a3 or not Z or not _ or Z<1 or au and au<Z or _<-100 or _>10000;if av then return E(\"[E] Wrong number of parameters / invalid values!\"..X)end;if not au or au<Z then au=Z end;P(\"[I] Processing route '\"..a3 ..\"'\")local aw=0;local m={}for ax,al in ipairs(ab.v[a3].points)do if ax>=Z and ax<=au then local an=al.waypointRef;local t=D.v[an]if t~=nil then if GetIndex(m,an)<1 then table.insert(m,an)end;local v=PM.ReplaceAltitudeInPos(t.pos,_)ab.v[a3].points[ax].pos=v;P(\"[I] Route Waypoint '\"..an..\"' changed to:\\n\"..v)end end end;if#m==0 then return E(\"[I] No waypoints in route changed.\\n[*] Make sure that start (and end-index) are valid.\")end;B(ab)P(\"[I] Routes saved.\")aw=0;for r,ay in ipairs(m)do if D.v[ay]then aw=aw+1;local v=PM.ReplaceAltitudeInPos(D.v[ay].pos,altitude)D.v[ay].pos=v;P(\"[I] Named Waypoint '\"..ay..\"' changed to:\")P(v)else P(\"[E] '\"..ay..\"' not found!\")end end;if aw>0 then A(D)P(\"[I] Named waypoints saved.\")end end;function a.YfsWpAltitudeCmd(F)local m=a.GetYFSNamedWaypoints()if not m then return E(\"[E] No named waypoints.\")end;local L=SU.SplitQuoted(F)if#L~=2 then return E(\"[E] Wrong number of parameters!\\nExample: /yfs-wp-altitude 'Base 1' 324.12\")end;local a3=L[1]or\"\"if not a3 or not L[2]or not m.v[a3]or m.v[a3]==\"\"then return E(\"[E] Waypoint '\"..a3 ..\"' not found\")end;local _=e(L[2]or 0)local v=PM.ReplaceAltitudeInPos(m.v[a3].pos,_)m.v[a3].pos=v;P(\"[I] Waypoint '\"..a3 ..\"' changed to:\")P(v)P(\"[I] Note: routes' waypoints are updated on route activation, i.e. exporting route data before activation may still show old value!\")A(m)return true end;function a.YfsRouteNearestCmd(F)local ab=a.GetYFSRoutes()if not ab then return end;local as=SU.SplitQuoted(F)if#as==0 or#as>2 then P(\"[E] Wrong parameter count\\n[I] Example: /yfs-route-nearest 'Route 1'\")P(\"\\nOptional parameter:\\n\")P(\"-onlySelectable -> only show closest, selectable waypoints in route\")return false end;local az=as[1]local ag=ab.v[az]if not ag or not IsTable(ag.points)then return E(\"[E] Route '\"..az..\"' not found or empty\")end;P(\"[I] Route '\"..az..\"' found.\")local ad=GetIndex(as,\"-onlySelectable\")>0;local J=a.GetYFSNamedWaypoints(true)local aA=0;local aB=999999999;local aC,aD=\"\",\"\"local aE={}for s,al in ipairs(ag.points)do aA=aA+1;if not ad or al.opt and al.opt.selectable~=false then local aF=SU.Trim(c(\"%02d\",aA)..\": '\"..(al.waypointRef or\"\")..\"'\")local I=al.pos;if al.waypointRef and J then I=J.v[al.waypointRef].pos end;local aG=PM.GetDistance(I)if aG>0.1 then ag.points[s].distance=aG;aC=aF..\" = \"..c(\"%.4f\",aG)if aG<aB then aD=aC;aB=aG end;local aH=tostring(math.modf(aG*10000))local aI=('0'):rep(12-#aH)..aH;aE[aI]=aA end end end;if not aA then return E(\"[I] No selectable waypoints found.\")end;local H=\"Route-Idx / Name / Distance (m)\\n\"for r,aI in pairs(GetSortedAssocKeys(aE))do local aJ=aE[aI]local an=ag.points[aJ].waypointRef;local aK=ag.points[aJ].distance;H=H..c(\"%02d\",aJ)..\" / '\"..an..\"' / \"H=H..Out.PrettyDistance(aK)..\"\\n\"end;H=H..\"\\n[I] Nearest waypoint: \"..aD;Out.PrintLines(H)ScreenOutput(H)end;function a.YfsRouteToNamedCmd(F)local ab=a.GetYFSRoutes()if not ab then return end;local as=SU.SplitQuoted(F)if#as==0 or#as>6 then P(\"[E] Wrong parameter count\\n[I] Example: /yfs-route-to-named 'Route 1'\\nOptional parameters:\\n\")P(\"-onlySelectable -> only write waypoints marked as selectable in route\")P(\"-prefix Myprefix -> if unspecified, 'WP' is default\")P(\"-toScreen -> output JSON of list to optional screen if linked\")P(\"-toDB -> only if this is given, the changed list will be written to DB to avoid miscalls\")P(\"Important: command aborts if ANY waypoint's name starts with given prefix to avoid errors!\")return false end;local az=as[1]local ag=ab.v[az]if not ag or not IsTable(ag.points)then return E(\"[E] Route '\"..az..\"' not found or empty\")end;P(\"[I] Route '\"..az..\"' found.\")local aL=GetIndex(as,\"-toDB\")>0;local aM=GetIndex(as,\"-toScreen\")>0;local ad=GetIndex(as,\"-onlySelectable\")>0;local ac=GetParamValue(as,\"-prefix\",\"s\")if not ac then ac=\"WP\"end;local J=a.GetYFSNamedWaypoints(true)if not J or not J.v then J={v={}}else for s,r in pairs(J.v)do if string.find(s,ac)==1 then return E(\"[!] Waypoints with same prefix already exist!\\n[!] Command aborted.\")end end end;local aA=0;for r,al in ipairs(ag.points)do if not ad or al.opt and al.opt.selectable~=false then aA=aA+1;local aF=ac..\" \"..c(\"%02d\",aA)local t={pos=al.pos,opt=al.opt}J.v[aF]=t;P(aF..\" \"..al.pos)end end;if not aA then return E(\"[I] No changes to waypoints done\")end;if aL then A(J)P(\"[I] Waypoint changes saved to databank!\")else P(\"[I] -toDB not present, no changes saved to databank!\")end;if aM then ScreenOutput(json.encode(J.v))end end;function a.YFSLoadNamedWaypoints()local m=a.GetYFSNamedWaypoints()if not m then return end;for s,al in pairs(m.v)do PM.CreateWaypoint(al.pos,s)end end;function a.YFSLoadRoutepoints(aN,aO)local ab=a.GetYFSRoutes()if not ab then return false end;P('[I] Processing routes...')for s,al in pairs(ab.v)do if(aO==\"\"or aO==s)and IsTable(al)then for aP,aQ in ipairs(al.points)do if not aN or aQ.opt[\"selectable\"]~=false then local an=s..\" \"..aP;if aQ.waypointRef then an=aQ.waypointRef end;PM.CreateWaypoint(aQ[\"pos\"],an)end end;P(\"[I] Route '\"..s..\"' read.\")end end;return true end;function a.YfsSaveNamedCmd(F)a.WpSaveNamedCmd(F,true)end;function a.PosDataCmd()P(\"getCameraHorizontalFov: \"..system.getCameraHorizontalFov())P(\"getCameraVerticalFov: \"..system.getCameraVerticalFov())P(\"getCameraPos: \"..PM.Vec3String(system.getCameraPos()))P(\"getCameraForward: \"..PM.Vec3String(system.getCameraForward()))P(\"getCameraRight: \"..PM.Vec3String(system.getCameraRight()))P(\"getCameraUp: \"..PM.Vec3String(system.getCameraUp()))P(\"getCameraWorldPos: \"..PM.Vec3String(system.getCameraWorldPos()))P(\"getCameraWorldForward: \"..PM.Vec3String(system.getCameraWorldForward()))P(\"getCameraWorldRight: \"..PM.Vec3String(system.getCameraWorldRight()))P(\"getCameraWorldUp: \"..PM.Vec3String(system.getCameraWorldUp()))P(\"construct.getWorldPosition: \"..PM.Vec3String(construct.getWorldPosition(CNID)))P(\"construct.getOrientationForward: \"..PM.Vec3String(construct.getOrientationForward()))P(\"construct.getOrientationRight: \"..PM.Vec3String(construct.getOrientationRight()))P(\"construct.getOrientationUp: \"..PM.Vec3String(construct.getOrientationUp()))end;function a.DumpPointsCmd()if true then P(\"~=~=~=~=~=~=~= DUMP START ~=~=~=~=~=~=\")local ao=Out.DumpVar(WM:getWaypointsInst())P(ao)return ScreenOutput(ao or\"[I] No waypoints.\",\"\\n~=~=~=~=~=~=~= DUMP END ~=~=~=~=~=~=~=\")end end;function a.DumpRoutesCmd()if not DetectedYFS then return E(\"[I] No YFS databank.\")end;P(\"~=~=~=~=~=~=~= ROUTES DUMP START ~=~=~=~=~=~=\")local ao=YFSDB:getString(YFS_ROUTES)P(ao)ScreenOutput(ao or\"[I] No routes.\",\"\\n~=~=~=~=~=~=~= ROUTES DUMP END ~=~=~=~=~=~=~=\")end;function a.RoutesCmd()local ab=a.GetYFSRoutes()if not ab then return end;P(\"[I] Available routes:\")for s,r in pairs(ab.v)do P(s)end end;function a.YfsTestDataCmd(aR)if not(aR==\"TESTING\")then return end;P(\"[*] Creating YFS test data...\")YFSDB:remove(YFS_NAMED_POINTS)local y={}y[\"Chr 01\"]={pos=\"::pos{0,7,-20.7784,-153.7402,360.5184}\",opt={}}y[\"Chr 02\"]={pos=\"::pos{0,7,-21.3610,-152.3447,345.8787}\",opt={}}y[\"Chr 03\"]={pos=\"::pos{0,7,-23.0540,-152.8934,360.6677}\",opt={}}y[\"Chr 04\"]={pos=\"::pos{0,7,-22.4445,-154.3119,320.1029}\",opt={}}y[\"Chr 05\"]={pos=\"::pos{0,7,-20.5370,-154.7507,308.0151}\",opt={}}y[\"Chr 06\"]={pos=\"::pos{0,7,-21.6295,-155.1465,292.7660}\",opt={}}y[\"Chr Hub\"]={pos=\"::pos{0,7,-21.9903,-153.1008,391.4632}\",opt={}}local ao={v=y,t=type(y)}A(ao)YFSDB:remove(YFS_ROUTES)local aS={}B({v=aS,t=type(aS)})P(\"[*] YFS test data saved!\")a.DumpPointsCmd()a.DumpRoutesCmd()end;function a.ConversionTestCmd(aR)PM.ConversionTest()end;function a.XCmd()end;return a\nend)\npackage.preload['YFS-Tools:help.lua']=(function()\nlocal a={}function a.PrintHelpCmd()local b=\"~~~~~~~~~~~~~~~~~~~~\\nYFS-Tools Commands:\\n~~~~~~~~~~~~~~~~~~~~\\n\"..\"/arch-save-named\\n-> Builds list of chat commands for ArchHud to add locations for all named waypoints.\\n\"..\"/planetInfo (id or name)\\n-> Info about current planet or for passed planet id or name, e.g. 2 for Alioth).\\n\"..\"/printAltitude /printPos /printWorldPos\\n-> Prints info data.\\n\"..\"/warpCost -from name/::pos{}/planets -to name/::pos{}/planets -mass tons -moons\\n-> Flexible warp cell calculator.\\n\"..\"/wp-altitude-ceiling\\n-> Changes a waypoint to have the higher altitude of both.\\n\"..\"/wp-export\\n-> Outputs list of plain waypoints to chat and an optional screen. Source can include ArchHud locations, too, if databank linked.\\n\"..\"/yfs-add-altitude-wp\\n-> Adds waypoints for each existing WP at a specified altitude and name suffix.\\n\"..\"/yfs-build-route-from-wp\\n-> Powerful route-building command based on existing named waypoints.\\n\"..\"/yfs-route-altitude\\n-> Changes altitude for a range of waypoints of a specific YFS route.\\n\"..\"/yfs-route-nearest\\n-> Show list of route waypoints by distance from current location.\\n\"..\"/yfs-route-to-named\\n-> Converts a route's *unnamed* waypoints to named waypoints for YFS.\\n\"..\"/yfs-save-named\\n-> Builds list of YFS commands to recreate all named waypoints.\\n\"..\"/yfs-save-route\\n-> Builds list of YFS commands to recreate full route incl. named waypoints and their options.\\n\"..\"/yfs-wp-altitude\\n-> Changes altitude of a named waypoint to specified altitude.\\n\"..\"----------------------------------\\n\"..\"Important: Enclose names (as parameters) in single quotes if they contain blanks!\\n\"..\"*** DO NOT USE COMMANDS THAT CHANGE POINTS ***\\n*** OR ROUTES WHILE YFS IS RUNNING! ***\\n\"ScreenOutput(b)P(b)end;return a\nend)\npackage.preload['YFS-Tools:warpcost.lua']=(function()\nlocal a,b,c=string.match,string.format,string.len;local d,e,f,g,h,i=tonumber,utils.clamp,math.abs,math.max,math.floor,math.ceil;function CalcWarpCost(j)local k=\"\\nExample 1:\\n/warpCost -from Madis -to Alioth -mass 534\"..\"\\nExample 2:\\n/warpCost -from Alioth -to planets -moons\"..\"\\nOptional '-from x' with x being either 'here', a planet name, ::pos{} or 'planets' (multi-result).\"..\"\\nOptional '-to x' like -from, but for end location.\"..\"\\nOptional '-mass x' with x the total mass in tons. If not given, the current constructs' total mass is used.\"..\"\\nOptional '-cargo x' with x the cargo mass in tons. If specified, a cell count for a return trip is calculated, too.\"..\"\\nOptional '-moons' only together with 'planets' to also include moons in the list.\"..\"\\n- One of -from or -to can be left out, then the current construct's location (or planet) is used.\"..\"\\n- If construct is landed on a planet or moon, the Atlas specified warp altitude is the starting point.\"..\"\\n- Enclose names in single-quotes if they contain spaces!\"local l=construct.getMass;local m,n={},false;local o,p=\"~~~ WARP CELL CALCULATOR ~~~\",\"\"local function q(r,s,t)local u,v,w={},false,0;local x=GetParamValue(r,s,\"s\")if not x or x==\"\"or x==\"here\"then u=PM.WorldPosVec3()if n and m then w=2*m.radius;x=m.name[1]u=vec3(m.center)else w=12;x=PM.Vec3ToPosString(u)end elseif x==\"planets\"then v=true elseif x>\"\"then if SU.StartsWith(x,\"::pos{\")then w=12;u=PM.MapPosToWorldVec3(x)else local y=PM.PlanetByName(x)if y then w=2*y.radius;u=vec3(y.center)end end end;return{parm=x,v=u,isP=v,offset=w}end;local r=SU.SplitQuoted(j)if#r<1 then return E(\"[E] Parameter(s) missing!\"..k)end;local z=GetIndex(r,\"-moons\")>0;local A=0;m=PM.GetClosestPlanet(PM.WorldPosVec3())if m then A=2*m.radius;n=PM.Altitude()<A;if n then p=\"Current\"else p=\"Nearest\"end;o=o..\"\\n\"..p..\" planet: \"..m.name[1]else o=o..\"\\n[I] No planet nearby!\"end;local B=50000;local C=l(CNID)/1000;local D,F=0,false;if GetIndex(r,\"-cargo\")>0 then local G=GetParamValue(r,\"-cargo\",\"n\")G=G or 0;if G>0 then D=e(G,0,B)F=D>0 else return E(o..\"\\n[E] Invalid -cargo value, must be in range of 1-50000 tons!\")end end;local H=GetParamValue(r,\"-mass\",\"n\")p=\"Mass: \"if H then C=d(H)else p=\"Construct \"..p end;o=o..\"\\n\"..p..Out.PrettyMass(C*1000)if F then o=o..\" ~*~ Cargo: \"..Out.PrettyMass(D*1000)end;if C<100 then return E(o..\"\\n[E] Impossibly low mass for a warp ship! ;)\")elseif C>B then return E(o..\"\\n[E] I don't accept you're warping that heavy! ;)\")end;local I=q(r,\"-from\",true)if not I.isP and not I.v then return E(o..\"\\n[E] Invalid starting location!\")end;local J=q(r,\"-to\",false)if not J.isP and not J.v then return E(o..\"\\n[E] Invalid end location!\")end;if I.isP and J.isP then return E(o..\"\\n[E] Only one 'planets' option supported!\")end;if I.parm==J.parm or I.v==J.v then return E(o..\"\\n[E] Start and end locations must be different!\")end;local function K(L,M,N,O,Q)local R=\"\"if L>\"\"then R=R..L end;if L>\"\"and M>\"\"then R=R..\" to \"end;if M>\"\"then R=R..M end;R=R..\" (\"..Out.PrettyDistance(N)..\")\"if N<200000 then return R..\" -> too short!\"elseif N>100000000 then return R..\" -> too far!\"end;local S=PM.ComputeCells(N,O)R=R..\" = \"..S..\" cell\"..SU.If(S>1,\"s\")if F then local T=PM.ComputeCells(N,O-Q)R=R..\" / \"..T..\" cell\"..SU.If(S>1,\"s\")..\" = \"..S+T..\" total\"end;return R end;if not I.isP and not J.isP then local N=f(vec3(I.v-J.v):len())-I.offset-J.offset;local U=K(I.parm,J.parm,N,C,D)if type(U)==\"string\"then o=o..\"\\n\"..U;P(o)ScreenOutput(o)else E(\"[E] Sorry, something went wrong :(\")end;return end;local V,W=nil,nil;p=\" (Distance) / Cells\"..SU.If(F,\" / Return w/o cargo\")if I.isP then o=o..\"\\nTo: \"..J.parm..\"\\nFrom\"..p else o=o..\"\\nFrom: \"..I.parm..\"\\nTo\"..p end;for X,u in pairs(WaypointInfo[0])do if not u.isAsteroid and(z or not u.isMoon)then A=2*u.radius;if I.isP then I.parm=u.name[1]I.v=u.centerV3;A=A+J.offset else J.parm=u.name[1]J.v=u.centerV3;A=A+I.offset end;local N=f(vec3(I.v-J.v):len())-A;if N>100000 then o=o..\"\\n\"..K(SU.If(I.isP,I.parm),SU.If(J.isP,J.parm),N,C,D)end end end;P(o)ScreenOutput(o)end\nend)\npackage.preload['YFS-Tools:../util/wpoint.lua']=(function()\nlocal a,b,c=tonumber,string.len,string.match;Waypoint={mapPos={},name=\"\",parent=nil}Waypoint.new=function(d)local e=setmetatable({parent=d,name=\"\",mapPos={systemId=0,id=0,latitude=0.0,longitude=0.0,altitude=0.0}},{__index=Waypoint})return e end;Waypoint.get=function(self)return self.mapPos end;Waypoint.getPosPattern=function()local f=' *([+-]?%d+%.?%d*e?[+-]?%d*)'return'::pos{'..f..','..f..','..f..','..f..','..f..'}'end;Waypoint.set=function(self,g)if type(g)==\"string\"and b(g)<16 then print(\"[E] Invalid position: \"..g)return{}end;if type(g)==\"string\"then local h,i,j,k,l=c(g,self.getPosPattern())if h then self.mapPos.systemId=a(h)self.mapPos.id=a(i)self.mapPos.latitude=a(j)self.mapPos.longitude=a(k)self.mapPos.altitude=a(l)else print(g..\" - Invalid string format. Use '::pos{s, p, x, y, z}'.\")end elseif type(g)==\"table\"and#g==3 then self.mapPos.latitude=a(g[1])self.mapPos.longitude=a(g[2])self.mapPos.altitude=a(g[3])elseif type(g)==\"table\"and#g==5 then self.mapPos.systemId=a(g[1])self.mapPos.id=a(g[2])self.mapPos.latitude=a(g[3])self.mapPos.longitude=a(g[4])self.mapPos.altitude=a(g[5])elseif type(g)==\"table\"and g.x and g.y and g.z then self.mapPos.systemId=0;self.mapPos.id=0;self.mapPos.latitude=a(g.x)self.mapPos.longitude=a(g.y)self.mapPos.altitude=a(g.z)else print(\"Invalid input. Provide a ::pos{} string, vec3() or {s,p,x,y,z} table.\")end;return self end;Waypoint.setName=function(self,m)if m==nil then self.name=\"\"return end;if type(m)==\"string\"and m:gmatch(\"^%a[%w_- ]*$\")then self.name=m else print(tostring(m)..\"\\n[E] WP: Invalid name format. Should only contain printable characters.\")end;return self end;Waypoint.getName=function(self)return self.name end;Waypoint.getAltitude=function(self)return self.mapPos.altitude end;Waypoint.AsString=function(self)return string.format(\"::pos{%d, %d, %.4f, %.4f, %.4f}\",self.mapPos.systemId,self.mapPos.id,self.mapPos.latitude,self.mapPos.longitude,self.mapPos.altitude)end;Waypoint.__Waypoint=function(self)return true end\nend)\npackage.preload['YFS-Tools:../util/wpointmgr.lua']=(function()\nlocal a,b,c=tonumber,string.len,string.match;WaypointMgr={name=\"\",waypoints={}}WaypointMgr.add=function(self,d,e)if d.__Waypoint and d.__Waypoint()then if d.name and d.name~=\"\"then for f,g in ipairs(self.waypoints)do if g.name==d.name then return nil end end end;local h=1+#self.waypoints;if e then if e<1 or e>h then print(\"[E] Invalid index. Must be in the range 1 to \"..h)return nil end;d.parent=self;table.insert(self.waypoints,e,d)else d.parent=self;table.insert(self.waypoints,h,d)end;return d else print(\"[E] Invalid waypoint parameter!\")return nil end end;WaypointMgr.getWaypointsData=function(self)local i={}for j,g in ipairs(self.waypoints)do table.insert(i,j,g:get())end;return i end;WaypointMgr.getWaypointsInst=function(self)return self.waypoints end;WaypointMgr.getCount=function(self)return#self.waypoints end;WaypointMgr.getSorted=function(self)local k={}for f,g in pairs(self.waypoints)do table.insert(k,g)end;table.sort(k,function(l,m)return l.name<m.name end)return k end;WaypointMgr.moveUp=function(self,e)local n=#self.waypoints;if e and e>1 and e<=n then self.waypoints[e],self.waypoints[e-1]=self.waypoints[e-1],self.waypoints[e]end end;WaypointMgr.moveDown=function(self,e)local n=#self.waypoints;if e and e>=1 and e<n then self.waypoints[e],self.waypoints[e+1]=self.waypoints[e+1],self.waypoints[e]end end;WaypointMgr.removeByName=function(self,o)for p,d in ipairs(self.waypoints)do if d.name==o then local q=table.remove(self.waypoints,p)return q end end;return nil end;WaypointMgr.hasPoints=function(self,r)return#self.waypoints>0 end;WaypointMgr.exists=function(self,r)for f,g in ipairs(self.waypoints)do if type(r)==\"string\"and g.name==r then return g elseif r and r.__Waypoint and Waypoint.__Waypoint()then if g==r then return g end elseif type(r)==\"table\"and#r==5 then if g.mapPos.systemId==a(r[1])and g.mapPos.id==a(r[2])and g.mapPos.latitude==a(r[3])and g.mapPos.longitude==a(r[4])and g.mapPos.altitude==a(r[5])then return g end end end;return nil end;WaypointMgr.getName=function(self)return self.name end;WaypointMgr.new=function(s)local t=setmetatable({waypoints={},name=s or\"\"},{__index=WaypointMgr})return t end;return WaypointMgr\nend)\npackage.preload['YFS-Tools:libmain.lua']=(function()\nSU=require('YFS-Tools:../util/SU.lua')Out=require('YFS-Tools:../util/out.lua')P=Out.PrintLines;E=Out.Error;require('YFS-Tools:../util/Dtbk.lua')require('YFS-Tools:libutils.lua')Cmd=require('YFS-Tools:commands.lua')Help=require('YFS-Tools:help.lua')require('YFS-Tools:warpcost.lua')require('YFS-Tools:../util/wpoint.lua')WM=require('YFS-Tools:../util/wpointmgr.lua').new(\"MAIN\")WaypointInfo=require('atlas')WolfAR=nil\nend)\npackage.preload['YFS-Tools:../util/pos.lua']=(function()\nlocal a,b,c,d,e,f,g,h,i,j=math.max,math.cos,math.acos,math.deg,math.sin,math.abs,math.atan,math.ceil,math.floor,math.pi;local k,l,m,n=tonumber,string.len,string.match,string.format;local o,vec3=utils.clamp,vec3;local p={}p.__index=p;function p.New(q,r,s)local t={core=q,construct=r,Alioth1G=9.891,waypointNames={},waypointCount=0,planetNames={},p={},pIdx=0,wm=s}local function u(v,w)if v==0 then return f(w)<1e-09 elseif w==0 then return f(v)<1e-09 else return f(v-w)<math.max(f(v),f(w))*epsilon end end;local function x()return t.construct~=nil end;local function y()return t.core~=nil end;function p.ComputeCells(z,A)return h(a(i(A*i(z/1000/200)*0.00024),1))end;function p.GetPosPattern()local B=' *([+-]?%d+%.?%d*e?[+-]?%d*)'return'::pos{'..B..','..B..','..B..','..B..','..B..'}'end;function p.GetWaypointCount()return t.wm:getCount()end;function p.SplitPos(posStr)if type(posStr)~=\"string\"then P(\"[E] Invalid position: \"..type(posStr))return nil end;if l(posStr)<16 or not m(posStr,\"^::pos{\")then P(\"[E] Invalid position: \"..posStr)return nil end;local C,D,F,G,H=m(posStr,p.GetPosPattern())return{systemId=k(C),id=k(D),latitude=k(F),longitude=k(G),altitude=k(H)}end;function p.GetAltitudeFromPos(I)local J=p.SplitPos(posStr)if J and J.altitude then return J.altitude end;return 0 end;function p.GetPlanetFromPos(posStr)local J=p.SplitPos(posStr)if J and J.id and J.id>0 then return J.id end;return 0 end;function p.GetAtlasPlanet(K)if not K or not WaypointInfo[0]or not WaypointInfo[0][k(K)]then return nil end;return WaypointInfo[0][k(K)]end;function p.GetClosestPlanetId(L)local M,N=0,0;local O=math.huge;for Q,R in pairs(WaypointInfo[0])do N=(L-vec3(R.center)):len()if N<O then O=N;M=Q end end;return M end;function p.GetClosestPlanet(L)local K=p.GetClosestPlanetId(L)return p.GetAtlasPlanet(K)end;function p.GetCurrentPosString()local R=p.WorldPosVec3()return p.MapPos2String(p.WorldToMapPos(R))end;function p.MapPos2String(S)if type(S)~=\"table\"then return\"\"end;return'::pos{'..(S.systemId or 0)..','..(S.id or 0)..','..n(\"%.4f\",S.latitude or 0)..','..n(\"%.4f\",S.longitude or 0)..','..n(\"%.4f\",S.altitude or 0)..'}'end;function p.Vec3ToPosString(T)if type(T)~=\"table\"then return\"\"end;return'::pos{0,0,'..n(\"%.4f\",T.x or 0)..','..n(\"%.4f\",T.y or 0)..','..n(\"%.4f\",T.z or 0)..'}'end;function p.Vec3String(T)if type(T)~=\"table\"then return\"\"end;T=vec3(T)return n(\"%.4f\",T.x or 0)..', '..n(\"%.4f\",T.y or 0)..', '..n(\"%.4f\",T.z or 0)end;function p.ReplaceAltitudeInPos(posStr,U)local J=p.SplitPos(posStr)if not J or not J.altitude or not U then return posStr end;J.altitude=k(U)return p.MapPos2String(J)end;function p.PlanetId()if not y()then return 0 end;if not INGAME then return 2 end;return t.core.getCurrentPlanetId()end;function p.WorldPosVec3()if not INGAME then return{x=-25140.37011013,y=100812.26194182,z=-52412.710373821}end;if x()then return vec3(construct.getWorldPosition())end;if y()then return vec3(core.getWorldPosition())end;return nil end;function p.Altitude()local J=p.GetAtlasPlanet(p.PlanetId())if not J or not J.center then return 0 end;return(p.WorldPosVec3()-vec3(J.center)):len()-(J.radius or 0)end;function p.GetDistance(posStr,V)local W=p.WorldPosVec3()if type(V)==\"string\"then W=p.MapPosToWorldVec3(V)elseif type(V)==\"table\"then W=vec3(V)end;local X=p.MapPosToWorldVec3(posStr)local N=vec3(X-W):len()return N end;function p.World2local(Y,Z,_)local a0=t.construct.getWorldOrientationUp()local a1=t.construct.getWorldOrientationForward()local a2=t.construct.getWorldOrientationRight()local a3,a4,a5=a0[1],a0[2],a0[3]local a6,a7,a8=a1[1],a1[2],a1[3]local a9,aa,ab=a2[1],a2[2],a2[3]local R=library.systemResolution3({a9,aa,ab},{a6,a7,a8},{a3,a4,a5},{Y,Z,_})return R[1],R[2],R[3]end;function p.WorldToMapPos(R)local ac=p.GetClosestPlanet(R)if not ac or not ac.center or not ac.radius then return{systemId=0,id=0,latitude=R.x,longitude=R.y,altitude=R.z}end;local ad=R-vec3(ac.center)local N=ad:len()local H=N-ac.radius;local ae=0;local af=0;if not u(N,0)then local ag=g(ad.y,ad.x)af=ag or 2*j+ag;ae=j/2-c(ad.z/N)end;return{latitude=d(ae),longitude=d(af),altitude=H,id=ac.systemId,systemId=ac.id}end;function p.PlanetByName(ah)if type(ah)~=\"string\"or ah==\"\"then return nil end;ah=ah:lower()if t.planetNames[ah]then local K=k(t.planetNames[ah])return WaypointInfo[0][K]end;return nil end;function p.MapPosToWorldVec3(posStr)local J=p.SplitPos(posStr)if not J or not J.systemId then return nil end;if J.systemId==0 and J.id==0 then return vec3(J.latitude,J.longitude,J.altitude)end;if not WaypointInfo[J.systemId]then return nil end;local ai=WaypointInfo[J.systemId][J.id]local F=constants.deg2rad*o(J.latitude,-90,90)local aj=constants.deg2rad*(J.longitude%360)local ak=b(F)local al=vec3(ak*b(aj),ak*e(aj),e(F))return vec3(ai.center)+(ai.radius+J.altitude)*al end;function p.PlanetInfo(am)local K=nil;if type(am)==\"string\"and am:len()==0 then am=p.GetClosestPlanetId(p.WorldPosVec3())end;if type(am)==\"string\"and t.planetNames[am:lower()]then K=k(t.planetNames[am:lower()])elseif type(am)==\"number\"and k(am)>0 then K=k(am)end;if K==nil then return E(\"[E] No valid planet name or id specified!\")end;local J=p.GetAtlasPlanet(K)if not J or type(J.name)~=\"table\"then return E(\"[E] No planet found!\")end;P\"~~~~~~~~ PLANET INFO ~~~~~~~~\"if am==''then P(\"Hint: '/planetInfo 2' for Alioth\")end;P(\"Name: \"..J.name[1]..\" (Id: \"..J.id..\")\")P(\"Center: \"..J.center[1]..\" / \"..J.center[2]..\" / \"..J.center[3])P(\"Radius: \"..(J.radius or 0)..\"m\")local an=\"\"if J.gravity and J.gravity>0 then an=\" (\"..n(\"%.1f\",J.gravity/t.Alioth1G)..\" g)\"end;P(\"Gravity: \"..(J.gravity or 0)..an)if J.satellites and#J.satellites>0 then P(\"Has Moons: \"..#J.satellites)end;P(\"Surface Min Alt.: \"..(J.surfaceMinAltitude or 0)..\"m\")P(\"Surface Max Alt.: \"..(J.surfaceMaxAltitude or 0)..\"m\")P(\"Max Static Alt.: \"..(J.maxStaticAltitude or\"\")..\"m\")P(\"Has atmosphere: \"..BoolStr(J.hasAtmosphere))if J.hasAtmosphere then P(\"Atmo Thickness: \"..(J.atmosphereThickness or 0)..\"m\")P(\"Atmo altitude: \"..(J.atmoAltitude or 0)..\"m\")P(\"Atmo 10%: \"..(J.atmo10 or 0)..\"m\")end;P(\"Is in Safe Zone: \"..BoolStr(J.isInSafeZone))P\"~~~~~~~~~~~~~~~~~~~~~~~~~~~\"end;function p.CreateWaypoint(I,ao)if not t.wm or not ao or ao==''or t.waypointNames[ao]then return false end;local J=p.SplitPos(I)if not J or not J.systemId then return false end;if J.id==0 then local ap=p.WorldToMapPos(vec3{J.latitude,J.longitude,J.altitude})if ap and ap.id and ap.id>0 then J.latitude=ap.latitude;J.longitude=ap.longitude;J.altitude=ap.altitude;J.id=ap.id;J.systemId=ap.systemId;I=p.MapPos2String(J)end end;local aq=Waypoint:new(t.wm):setName(ao):set(I)if not aq or aq=={}then return false end;if t.wm:exists(aq)then return false end;return t.wm:add(aq)end;function p.ConversionTest()local ar=\"::pos{0,2,35.5118,104.0375,285.3076}\"local as=p.MapPosToWorldVec3(ar)P(\"HQ local to world:\\n\"..ar..\" =\")P(p.Vec3ToPosString(as))local at=p.WorldToMapPos(as)Out.DeepPrint(at)P(\"World to local (should show same as above):\")P(p.MapPos2String(at))local aq=\"::pos{0,0,-24955.2183,99771.5731,-52908.1353}\"if p.CreateWaypoint(aq,\"WorldPos\")then P(\"Added 'WorldPos' waypoint\")else P(\"Failed to add test waypoint!\")end end;local function au()t.pIdx=0;t.p=p.GetAtlasPlanet(p.PlanetId())if t.p then t.pIdx=t.p.id end;if not WaypointInfo[0]then return end;t.planetNames={}for Q,R in pairs(WaypointInfo[0])do t.planetNames[R.name[1]:lower()]=Q;WaypointInfo[0][Q].biosphere=nil;WaypointInfo[0][Q].classification=nil;WaypointInfo[0][Q].description=nil;WaypointInfo[0][Q].habitability=nil;WaypointInfo[0][Q].ores=nil;WaypointInfo[0][Q].centerV3=vec3(WaypointInfo[0][Q].centerVec)if R.hasAtmosphere then local av=R.atmosphereRadius-R.radius;WaypointInfo[0][Q].atmoAltitude=av;WaypointInfo[0][Q].atmo10=av*0.9 end;WaypointInfo[0][Q].isAsteroid=WaypointInfo[0][Q].type[1]==\"Asteroid\"WaypointInfo[0][Q].isMoon=WaypointInfo[0][Q].type[1]==\"Moon\"WaypointInfo[0][Q].isPlanet=WaypointInfo[0][Q].type[1]==\"Planet\"end;if t.wm then P(\"[I] WaypointMgr assigned: \"..t.wm:getName())else P(\"[E] NO WaypointMgr assigned!\")end end;au()return setmetatable(t,p)end;return p\nend)\npackage.preload['YFS-Tools:startup.lua']=(function()\n\nlocal onlyForRoute=\"\"--export: Load waypoints only for this route (enclosed in double quotes!)\n\nlocal onlySelectableWP=true--export: Check to only display custom route waypoints that are marked as selectable\n\nlocal loadWaypoints=true--export: Enable to load custom waypoints from databank\n\nlocal outputFont=\"FiraMono\"--export: Name of font used for screen output. Default: \"FiraMono\"\nonlyForRoute=onlyForRoute or\"\"OutputFont=outputFont or\"FiraMono\"P(\"=========================================\")P(\"YFS-Tools 1.6 (unofficial)\")P(\"created by tobitege (c) 2023\")P(\"Thanks to Yoarii (SVEA) for YFS and LUA help!\")P(\"YFS 1.4+ databank link required (Routes).\")P(\"=========================================\")P(\"* WARNING: do not run commands that change\")P(\"* waypoints/routes while YFS runs!\")P(\"=========================================\")P(\"LUA parameter(s):\")P(\"Load waypoints from databank: \"..BoolStr(loadWaypoints))P(\"Only waypoints for route: \"..onlyForRoute)P(\"Only selectable waypoints: \"..BoolStr(onlySelectableWP))P(\"Screen output font name: \"..OutputFont)P(\"=========================================\")local a,b=false,nil;if INGAME then a,b,_=xpcall(function()Config.core=library.getCoreUnit()Config.databanks=library.getLinksByClass('DataBank',true)Config.screens=library.getLinksByClass('Screen',true)end,Traceback)if not a then P(\"Error in Link Detection:\\n\"..b)unit.exit()return end else Config.core=unit.core;Config.databanks={unit.databank}Config.screens={unit.screen}end;if Config.core==nil then P(\"[E] No Core connected! Ending script.\")unit.exit()return end;PM=require('YFS-Tools:../util/pos.lua').New(Config.core,construct,WM)if#Config.databanks>0 then local c=\"\"if#Config.databanks>1 then c=\"s\"else c=\" '\"..Config.databanks[1].getName()..\"'\"end;P(#Config.databanks..\" databank\"..c..\" connected.\")else P(\"[E] DataBank not found.\")end;if#Config.screens>0 then local c=\"\"if#Config.screens>1 then c=\"s\"end;P(#Config.screens..\" screen\"..c..\" connected.\")end;if not INGAME then onlyForRoute=\"Garni\"end;if loadWaypoints~=true then P(\"[I] Waypoints loading is off.\")elseif#Config.databanks>0 then local d=0;for e=1,#Config.databanks,1 do local f=Config.databanks[e]P(\"===== Checking db '\"..f.getName()..\"' =====\")if f.hasKey(ARCH_SAVED_LOCATIONS)then P('ArchHud databank detected.')DetectedArch=e;local g=f.getStringValue(ARCH_SAVED_LOCATIONS)if g~=\"\"then P('Searching stored locations...')local h=json.decode(g)if IsTable(h)then Cmd.GetStoredLocations(h)end end end;if f.hasKey(YFS_ROUTES)or f.hasKey(YFS_NAMED_POINTS)then P('YFS databank detected.')YFSDB=Dtbk.new(f)DetectedYFS=true;if not onlySelectableWP then Cmd.YFSLoadNamedWaypoints()end;Cmd.YFSLoadRoutepoints(onlySelectableWP,onlyForRoute)end;local i=PM.GetWaypointCount()if i==d then P(\"[I] No waypoints loaded from db \"..e)else P(\"[I] \"..i-d..\" waypoints loaded from db \"..e)end;d=PM.GetWaypointCount()end;P(\"=======================\")if PM.GetWaypointCount()>0 then P(\"[I] Total \"..PM.GetWaypointCount()..\" waypoints loaded.\")else P(\"[I] No waypoints loaded.\")end;P(\"=======================\")end\nend)\npackage.preload['YFS-Tools:sys_onInputText.lua']=(function()\nlocal a={}function a.Run(b)if not SU.StartsWith(b,\"/\")then return end;if not Cmd then return E(\"[FATAL ERROR] Commands processor not assigned!\")end;local c={}c['arch-save-named']=1;c['conversionTest']=1;c['posData']=1;c['help']='Help'c['planetInfo']=1;c['printAltitude']=1;c['printPos']=1;c['printWorldPos']=1;c['warpCost']=1;c['wp-altitude-ceiling']=1;c['wp-export']=1;c['yfs-add-altitude-wp']=1;c['yfs-build-route-from-wp']=1;c['yfs-save-named']=1;c['yfs-save-route']=1;c['yfs-replace-wp']=1;c['yfs-route-altitude']=1;c['yfs-route-nearest']=1;c['yfs-route-to-named']=1;c['yfs-wp-altitude']=1;c['DumpRoutes']=1;c['DumpPoints']=1;c['routes']=1;if DEBUG then c['YfsTestData']=1;c['x']=1 end;for d,e in pairs(c)do if SU.StartsWith(b,\"/\"..d)then local f=b:sub(d:len()+2)or\"\"f=SU.Trim(f)if d=='help'then d=\"PrintHelp\"end;local g=SU.SplitAndCapitalize(d,'-')..\"Cmd\"local h=SU.If(type(e)==\"string\",e,\"Cmd\")P(\"Executing /\"..d..SU.If(f~=\"\",\" with: \"..f))if not _G[h]then return E(\"[FATAL ERROR] \"..h..\" not found!\")end;if _G[h][g]then return _G[h][g](f)end end end;P(\"~~~~~~~~~~~~~~~~~~~~~\")P(\"[E] Unknown command: \"..b)P(\"[I] Supported commands:\")for i,g in ipairs(GetSortedAssocKeys(c))do P(\"/\"..g)end end;return a\nend)"},{"key":4,"filter":{"slotKey":-5,"signature":"onStart()","args":[]},"code":"library.addEventHandlers(library)\nlibrary.addEventHandlers(system)\nlibrary.addEventHandlers(player)\nlibrary.addEventHandlers(construct)\nlibrary.addEventHandlers(unit)"},{"key":5,"filter":{"slotKey":-4,"signature":"onActionStart(action)","args":[{"variable":"*"}]},"code":"system:triggerEvent('onActionStart',action)"},{"key":6,"filter":{"slotKey":-4,"signature":"onActionLoop(action)","args":[{"variable":"*"}]},"code":"system:triggerEvent('onActionLoop',action)"},{"key":7,"filter":{"slotKey":-4,"signature":"onActionStop(action)","args":[{"variable":"*"}]},"code":"system:triggerEvent('onActionStop',action)"},{"key":8,"filter":{"slotKey":-4,"signature":"onUpdate()","args":[]},"code":"system:triggerEvent('onUpdate')"},{"key":9,"filter":{"slotKey":-4,"signature":"onFlush()","args":[]},"code":"system:triggerEvent('onFlush')"},{"key":10,"filter":{"slotKey":-4,"signature":"onInputText(text)","args":[{"variable":"*"}]},"code":"system:triggerEvent('onInputText',text)"},{"key":11,"filter":{"slotKey":-4,"signature":"onCameraChanged(mode)","args":[{"variable":"*"}]},"code":"system:triggerEvent('onCameraChanged',mode)"},{"key":12,"filter":{"slotKey":-3,"signature":"onParentChanged(oldId,newId)","args":[{"variable":"*"},{"variable":"*"}]},"code":"player:triggerEvent('onParentChanged',oldId,newId)"},{"key":13,"filter":{"slotKey":-2,"signature":"onDocked(id)","args":[{"variable":"*"}]},"code":"construct:triggerEvent('onDocked',id)"},{"key":14,"filter":{"slotKey":-2,"signature":"onUndocked(id)","args":[{"variable":"*"}]},"code":"construct:triggerEvent('onUndocked',id)"},{"key":15,"filter":{"slotKey":-2,"signature":"onPlayerBoarded(id)","args":[{"variable":"*"}]},"code":"construct:triggerEvent('onPlayerBoarded',id)"},{"key":16,"filter":{"slotKey":-2,"signature":"onVRStationEntered(id)","args":[{"variable":"*"}]},"code":"construct:triggerEvent('onVRStationEntered',id)"},{"key":17,"filter":{"slotKey":-2,"signature":"onConstructDocked(id)","args":[{"variable":"*"}]},"code":"construct:triggerEvent('onConstructDocked',id)"},{"key":18,"filter":{"slotKey":-2,"signature":"onPvPTimer(active)","args":[{"variable":"*"}]},"code":"construct:triggerEvent('onPvPTimer',active)"},{"key":19,"filter":{"slotKey":-1,"signature":"onStop()","args":[]},"code":"unit:triggerEvent('onStop')"},{"key":20,"filter":{"slotKey":-1,"signature":"onTimer(timerId)","args":[{"variable":"*"}]},"code":"unit:triggerEvent('onTimer',timerId)"},{"key":21,"filter":{"slotKey":-1,"signature":"onStart()","args":[]},"code":"package.path=\"lua/?.lua;util/wpointer/?.lua;\"..package.path;require('YFS-Tools:globals.lua')WP_WOLF_ENABLED=true;DEBUG=false;require('YFS-Tools:libmain.lua')if INGAME then local Traceback=traceback else function Traceback(a)if a then P(tostring(a))end end;require'mockaround'end;local b,c,d=xpcall(function()require('YFS-Tools:startup.lua')end,Traceback)if not b then P(\"[E] Error in startup!\")if c then P(c)end;unit.exit()return end;local e=require('YFS-Tools:sys_onInputText.lua')if e~=nil then system:onEvent('onInputText',function(self,f)e.Run(f)end)end;if not WP_EG_ENABLED and not WP_WOLF_ENABLED then P('[I] Waypointer module disabled.')else P('[I] Waypointer module enabled.')unit.setTimer(\"update\",1/120)system.showScreen(1)end;if INGAME then if DEBUGx then b,c,d=xpcall(function()PM.ConversionTest()end,Traceback)if not b then if c then P(\"[E] Error in test call:\\n\"..c)end;unit.exit()return end else unit.hideWidget()end;P(\"Type /help for available commands.\")end"}],"events":[],"methods":[]}