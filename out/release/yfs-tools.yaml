slots:
  "-5":
    name: library
    class: null
    select: null
    type:
      events: []
      methods: []
  "-4":
    name: system
    class: null
    select: null
    type:
      events: []
      methods: []
  "-3":
    name: player
    class: null
    select: null
    type:
      events: []
      methods: []
  "-2":
    name: construct
    class: null
    select: null
    type:
      events: []
      methods: []
  "-1":
    name: unit
    class: null
    select: null
    type:
      events: []
      methods: []
handlers:
  - key: 1
    filter:
      slotKey: -5
      signature: onStart()
      args: []
    code: >-
      ;(function()

      local a={}local b=0;function library.addEventHandlers(c)if not c or c.onEvent and c.triggerEvent then return false end;b=b+1;a[b]=c;local d,e,f='table','function','thread'if d~=type(c)then error('You can only add event handlers to table objects!')end;local g={}local function h(c)local i=type(c)return e==i or d==i and h(getmetatable(c).__call)or f==i end;c.onEvent=function(self,j,k,l)if not h(k)then error('Event handler must be a function, a callable object or a thread!')end;l=l or self;if d~=type(l)then error('The value of self must be a table!')end;if not g[j]then g[j]={_=0}end;local m=f==type(k)and function(...)coroutine.resume(k,...)end or k;local k=g[j]local n=k._+1;k[n]={m,l}k._=n;return n end;c.clearEvent=function(self,j,o)if g[j]and g[j][o]then g[j][o]=nil end end;c.clearAllEvents=function(self)g={}end;c.triggerEvent=function(self,j,...)local p=g[j]if p then for q=1,p._ do local k=p[q]if k then k[1](k[2],...)end end end end;return true end;function library.clearAllEventHandlers()for q=1,b do local c=a[q]if c and c.clearAllEvents then c:clearAllEvents()end end end

      end)()
  - key: 2
    filter:
      slotKey: -5
      signature: onStart()
      args: []
    code: >-
      ;(function()

      local a=DULibrary or{}function a.getLinks(b,c)local d={}if not b then b={}end;for e,f in pairs(unit.getOutPlugs())do local g=unit[f.name]if'table'==type(g)and'function'==type(g.getClass)then local h=true;for i,j in pairs(b)do if not('function'==type(g[i])and j==g[i]():sub(1,#j))then h=false;break end end;if h then if c then table.insert(d,g)else d[f.name]=g end end end end;return d end;function a.getLinksByClass(k,c)return a.getLinks({getClass=k},c)end;function a.getLinkByClass(k)return a.getLinksByClass(k,true)[1]end;function a.getCoreUnit()return a.getLinkByClass('CoreUnit')end;function a.getLinkByName(l)local m=a.getCoreUnit()if not m then error('getLinkByName requires a linked CoreUnit to work')end;local d=a.getLinks()for n,o in pairs(d)do if l==m.getElementNameById(o.getLocalId())then return o end end end

      end)()
  - key: 3
    filter:
      slotKey: -5
      signature: onStart()
      args: []
    code: >-
      package.preload['YFS-Tools:globals.lua']=(function()

      Config={core=nil,databanks={},screens={}}DetectedArch=0;DetectedYFS=false;YFSDB=nil;YFS_NAMED_POINTS="NamedPoints"YFS_ROUTES="NamedRoutes"ARCH_SAVED_LOCATIONS="SavedLocations"DEBUG=false;ScriptStartTime=0;INGAME=system~=nil;if not INGAME then else ScriptStartTime=system.getArkTime()print=system.print end;projector=nil;clicked=false;WP_EG_ENABLED=false;WP_WOLF_ENABLED=false;CNID=construct.getId()

      end)

      package.preload['YFS-Tools:../util/SU.lua']=(function()

      local a={}local b,c,d=string.match,string.len,tonumber;function a.Trim(e)if c(e)==0 then return""end;return a.Ltrim(a.Rtrim(e))end;function a.Ltrim(e)local f,g=string.gsub(e,"^%s+","")return f end;function a.Rtrim(e)local f,g=string.gsub(e,"%s+$","")return f end;function a.Pad(e,h,i)if not e or not i or not h or d(i)<1 then return e end;return string.rep(h,i-e:len())..e end;function a.StartsWith(e,j)if not e or not j then return false end;return string.sub(e,1,#j)==j end;function a.EndsWith(e,k)if not e or not k then return false end;return string.sub(e,-#k)==k end;function a.RtrimChar(e,l)if not e or not l then return e end;while#e>0 and a.EndsWith(e,l)do e=string.sub(e,1,#e-#l)end;return e end;function a.SplitQuoted(e)local function m(n)return n=='"'or n=="'"end;local function o(n)return n==" "end;local function p(q,r)r=a.Trim(r)if r:len()>0 then table.insert(q,#q+1,r)end end;local s=false;local t={}if type(e)~="string"or e==""then return t end;local u=""for n in string.gmatch(e,".")do if o(n)and not s then p(t,u)u=""elseif m(n)then if s then p(t,u)u=""s=false else p(t,u)u=""s=true end else u=u..n end end;p(t,u)return t end;function a.If(v,w,x)if v then return tostring(w or"")end;return tostring(x or"")end;function a.isPrintable(l)return b(l,"[%g%s]")~=nil end;function a.SplitAndCapitalize(y,z)if not y or not a.isPrintable(z)then return y end;local t={}for A in y:gmatch("[^"..z.."]+")do table.insert(t,A)end;for B=1,#t do t[B]=t[B]:sub(1,1):upper()..t[B]:sub(2)end;return table.concat(t)end;return a

      end)

      package.preload['YFS-Tools:../util/out.lua']=(function()

      local a={}function a.PrettyDistance(b)if b<10000 then return Round(b,2).." m"end;if b<200000 then return Round(b/1000,2).." km"end;return Round(b/200000,2).." SU"end;function a.PrettyMass(c)if c>1000000 then return Round(c/1000000,2).." KT"end;if c>1000 then return Round(c/1000,2).." tons"end;return Round(c,2).." kg"end;function a.PrintLines(d)if not d then return end;if type(d)~="string"then d=tostring(d)end;for e in d:gmatch("([^\n]+)")do print(e)end end;function a.Error(f)a.PrintLines(f)return false end;function a.DeepPrint(g,h)if IsTable(g)then local i=0;h=h or 0;for j,k in pairs(g)do if IsTable(k)then P("-> "..j)a.DeepPrint(k,h)elseif type(k)=="boolean"then P(j..": "..BoolStr(k))elseif type(k)=="function"then P(j.."()")elseif k==nil then P(j.." ("..type(k)..")")else P(j..": "..tostring(k))end;i=i+1;if h>0 and i>=h then P("^:^:^:^: cutoff reached :^:^:^:^")return end end elseif type(g)=="boolean"then P(BoolStr(g))else P(g)end end;function a.DumpVar(l)local m={}local n=""local o=" "local function p(q,r)local s=type(q)local e=tostring(q)if s=="table"then if m[e]then n=n.."<"..e..">\n"else m[e]=(m[e]or 0)+1;n=n.."("..e..") {\n"for j,k in pairs(q)do n=n..string.rep(o,r+1).."["..j.."] => "p(k,r+1)end;n=n..string.rep(o,r).."}\n"end elseif s=="boolean"then n=n.."("..BoolStr(s)..")\n"elseif s=="number"then n=n.."("..s..") "..e.."\n"else n=n.."("..s..") \""..e.."\"\n"end end;p(l,0)return n end;return a

      end)

      package.preload['YFS-Tools:../util/Dtbk.lua']=(function()

      Dtbk={}Dtbk.__index=Dtbk;function Dtbk.new(a)local self=setmetatable({},Dtbk)self.DB=a;self.concat=table.concat;return self end;function Dtbk.hasKey(self,b)return self.DB.hasKey(b)end;function Dtbk.getString(self,b)return self.DB.getStringValue(b)end;function Dtbk.setString(self,b,c)self.DB.setStringValue(b,c)end;function Dtbk.setData(self,b,c)local d=json.encode(c)self.DB.setStringValue(b,d)end;function Dtbk.getData(self,b)local e=self.DB.getStringValue(b)if e==nil then return nil end;local d=json.decode(e)return d end;function Dtbk.remove(self,f)self.DB.clearValue(f)end;function Dtbk.ResetAll(self)self.DB.clear()end

      end)

      package.preload['YFS-Tools:libutils.lua']=(function()

      local a,b=tonumber,string.match;function IsTable(c)return c~=nil and type(c)=="table"end;function GetSortedAssocKeys(d)local e={}if not IsTable(d)then E("[E] Invalid object for GetSortedKeys()!")return e end;for f,g in pairs(d)do table.insert(e,f)end;table.sort(e)return e end;function Round(h,i)local j=10^(i or 0)return(h*j+2^52+2^51-(2^52+2^51))/j end;function TableLen(d)if not IsTable(d)then return 0 end;local k=0;for g in pairs(d)do k=k+1 end;return k end;function GetIndex(d,l)if not IsTable(d)then return-1 end;for f,m in pairs(d)do if l==m then return f end end;return-1 end;function GetParamValue(n,o,p,q)local r="[E] Parameter value missing for "..o;if n==nil or not IsTable(n)then if q==true then P(r)end;return nil end;for f,m in ipairs(n)do if m==o then local s=f+1;if#n<s then if q==true then P(r)end;return nil end;local t=n[s]if not p or p=="string"or p=="s"then if t=='""'or t=="''"then return nil end;return t elseif(p=="int"or p=="i")and not b(t,"%D")then return a(t)elseif p=="number"or p=="n"then return a(t)elseif p=="bool"or p=="b"then if t then return true else return false end end;return nil end end;if q==true then E(r)end;return nil end;function PairsByKeys(u,v)local w={}for x in pairs(u)do table.insert(w,x)end;table.sort(w,v)local y=0;local z=function()y=y+1;if w[y]==nil then return nil else return w[y],u[w[y]]end end;return z end;function BoolState(A)if A then return"enabled"else return"disabled"end end;function BoolStr(B)if B==true then return"true"else return"false"end end;function ScreenOutput(C,D)local F="Point at screen, CTRL+L, then copy text!"if#Config.screens>0 then local G=OutputFont or"FiraMono"local H="local text = [[\n"..C.."\n]]\n"..[[

      local rslib = require('rslib')

      local layer = createLayer()

      local rx, ry = getResolution()

      local fontSize = 15

      local font = loadFont("]]..G..[[", fontSize)

      local line = 1

      for str in text:gmatch("([^\n]+)") do addText(layer, font, str, 20, line*(fontSize+4)) line = line + 1

      end ]]Config.screens[1].setRenderScript(H)if D and D:len()then F=D.."\n"..F end else F="Hint: link a screen to PB to easily copy text from it!"end;P(F)return true end

      end)

      package.preload['YFS-Tools:commands.lua']=(function()

      local a={}local b,c,d=string.match,string.format,string.len;local e,f,g,h,i,j=tonumber,utils.clamp,math.abs,math.max,math.floor,math.ceil;local function k(l,m,n,o)local p=0;local q={}local r=#m;for s,t in ipairs(m)do local u=l.v[t]if u~=nil then p=p+1;local v=t..o;if p>1 then table.insert(q,v)end;table.insert(q,t)if p<r then table.insert(q,v)end;local w=PM.ReplaceAltitudeInPos(u.pos,n)if l.v[v]~=nil then l.v[v].pos=w else l.v[v]={pos=w}P(v.." "..w)end end end;if p==0 then P("[E] No waypoints processed!")return nil,nil end;P("[I] "..p.." waypoints at "..n.."m added (or changed)!")return l,q end;local function x(y,z)if not DetectedYFS or not y then return false end;YFSDB:setData(y,z)return true end;local function A(y)if not DetectedYFS or not y then return false end;local z=YFSDB:getData(y)if z==nil or not IsTable(z.v)then return false end;return z end;local function B(z)x(YFS_NAMED_POINTS,z)end;local function C(z)x(YFS_ROUTES,z)end;function a.FindCenterCmd(D)if not WM or not WM:hasPoints()then return E("[E] No waypoints to export.")end;local F=a.GetYFSRoutes()if not F then return end;local G=SU.SplitQuoted(D)if#G<1 then return E("[E] Parameter(s) missing: routename\nExample: /findCenter 'Cryo' -onlySelectable")end;local H=GetIndex(G,"-onlySelectable")>0;local I=G[1]local J=F.v[I]if not J or not IsTable(J.points)or#J.points==0 then return E("[E] Route '"..I.."' not found or empty")end;local l=a.GetYFSNamedWaypoints()local K={}local L=1;for s,M in ipairs(J.points)do local N=""local O="WP "..c("%03d",L)if M.waypointRef and l then O=M.waypointRef;N=l.v[O].pos else N=M.pos end;if N and(not H or M.opt["selectable"]~=false)then P("Using "..O)K[L]=PM.MapPosToWorldVec3(N)end;L=L+1 end;local Q=GetCentralPoint(K)if Q then local R=PM.WorldToMapPos(Q)local S="[I] Center coords: "..PM.MapPos2String(R)P(S)else P("[E] Could not calculate center, sorry!")end end;function a.GetYFSNamedWaypoints(T)if not DetectedYFS then return E("[E] Linked YFS databank required!")end;local U=A(YFS_NAMED_POINTS)if not U and not T then P("[I] No named waypoints")end;return U end;function a.GetYFSRoutes()if not DetectedYFS then return E("[E] Linked YFS databank required!")end;local z=A(YFS_ROUTES)if not z then return E('[I] No YFS routes found.')end;return z end;function a.PlanetInfoCmd(D)PM.PlanetInfo(D)end;function a.PrintAltitudeCmd(D)P(Out.PrettyDistance(PM.Altitude()))end;function a.PrintPosCmd(D)P(PM.GetCurrentPosString())end;function a.PrintWorldPosCmd(D)P(PM.Vec3ToPosString(PM.WorldPosVec3()))end;function a.WarpCostCmd(D)CalcWarpCost(D)end;function a.WpSaveNamedCmd(D,V)if not WM or not WM:hasPoints()then return E("[E] No waypoints to export.")end;local S=""for s,u in ipairs(WM:getSorted())do local W=u:AsString()if V then W="pos-save-as '"..u:getName().."' -pos "..W else W="/addlocation "..u:getName().." "..W end;S=S..W.."\n"P(W)end;ScreenOutput(S)end;function a.ArchSaveNamedCmd(D)a.WpSaveNamedCmd(D,false)end;function a.WpExportCmd(D)if not WM or not WM:hasPoints()then return E("[E] No waypoints to export.")end;local S=""local X=WM:getSorted()for s,u in ipairs(X)do local Y=u:getName().."\n"..u:AsString().."\n"S=S..Y end;P(S)ScreenOutput(S)end;function a.WpAltitudeCeilingCmd(D)local m=a.GetYFSNamedWaypoints()if not m then return end;local G=SU.SplitQuoted(D)if#G~=2 then P("[E] Parameter(s) missing: 'name 1' 'name 2'")return E("Example: /wp-altitude-ceiling 'Base 1' 'Base 2'")end;local Z=G[1]local _=G[2]local a0,a1=true,true;if m.v[Z]==nil or m.v[Z]==""then P("[E] Waypoint '"..Z.."' not found.")a0=false end;if m.v[_]==nil or m.v[_]==""then P("[E] Waypoint '".._.."' not found.")a1=false end;if not a0 or not a1 then return end;if m.v[Z]==m.v[_]then return E("[E] Parameters invalid (same names).")end;local a2=PM.GetAltitudeFromPos(m.v[Z].pos)local a3=PM.GetAltitudeFromPos(m.v[_].pos)if a2==a3 then P("[I] Waypoints had same altitude, no changes applied.")return end;local a4,a5="",0;if a2>a3 then a4=_;a5=a2 else a4=Z;a5=a3 end;local w=PM.ReplaceAltitudeInPos(m.v[a4].pos,a5)m.v[a4].pos=w;P("[I] Waypoint '"..a4 .."' changed to:")P(w)B(m)return true end;function a.GetStoredLocations(a6)if not a6 or not IsTable(a6)then return end;for s,a7 in ipairs(a6)do if a7.name and a7.position and a7.position.x and a7.position.y and a7.position.z then P("[I] Location '"..a7.name.."' found.")local W='::pos{0,0,'..a7.position.x..','..a7.position.y..','..a7.position.z..'}'PM.CreateWaypoint(W,a7.name)end end end;function a.YfsAddAltitudeWpCmd(D)local l=a.GetYFSNamedWaypoints()if not l or not IsTable(l.v)or TableLen(l.v)==0 then return E("[E] No waypoints.")end;local a8="\nExample: /yfs-add-altitude-wp -altitude 450 -suffix 'F'"local a9=SU.SplitQuoted(D)local aa=GetParamValue(a9,"-wpStartsWith","s")if#a9<1 then return E("[E] Parameter missing: -altitude"..a8)end;local ab=GetParamValue(a9,"-altitude","n",true)local ac=GetParamValue(a9,"-suffix","s")if not ac or ac==""then ac="F"end;if ab<-100 or ab>20000 then return E("[E] -altitude value out of range (-100 .. 20000)"..a8)end;local X={}for t in PairsByKeys(l.v)do if not aa or t:find(aa)>0 then table.insert(X,t)end end;local ad,q=k(l,X,ab,ac)if ad~=nil and q~=nil then B(ad)end;return true end;function a.YfsBuildRouteFromWpCmd(D)local l=a.GetYFSNamedWaypoints()if not l or not IsTable(l.v)or TableLen(l.v)==0 then return E("[E] No waypoints.")end;local ae=a.GetYFSRoutes()if not ae or not IsTable(ae.v)or TableLen(ae.v)==0 then ae={v={},t="table"}else end;local a8="\nExample: /yfs-build-route-from-wp -name 'Route' -altitude 450 -wpStartsWith 'Chr' -suffix 'F'\n-suffix is optional, default F (Flight)"local a9=SU.SplitQuoted(D)if#a9<1 then return E("[E] Parameters missing!"..a8)end;local af=GetParamValue(a9,"-name","s",true)if not af then return end;local aa=GetParamValue(a9,"-wpStartsWith","s")local ab=GetParamValue(a9,"-altitude","n",true)if not ab then return end;local ac=GetParamValue(a9,"-prefix","s")local ag=GetParamValue(a9,"-marginL","n")local ah=GetParamValue(a9,"-marginF","n")local ai=GetParamValue(a9,"-maxSpeed","n")local aj=GetParamValue(a9,"-finalSpeedF","n")ag=f(ag or 0.1,0.1,100)ah=f(ah or 0.1,0.1,100)ai=f(ai or 0,0,1200)aj=f(aj or 0,0,1200)if ae.v[af]~=nil then return E("[E] Route "..af.."already exists, aborting!")end;if type(ac)~="string"or ac==""then ac="F"end;if d(ac)>3 then return E("[E] -suffix accepts max. 3 characters"..a8)end;if ab<-600 or ab>20000 then return E("[E] -altitude value out of range (-100 .. 20000)"..a8)end;local X={}for t in PairsByKeys(l.v)do if not aa or t:find(aa)>0 then table.insert(X,t)end end;local l,ak=k(l,X,ab,ac)if l==nil or ak==nil then return E("[I] No waypoints processed: no changes made.")end;ae.v[af]={points={}}local p=0;for s,t in ipairs(ak)do local u=l.v[t]if u~=nil then p=p+1;local al={margin=0.1,maxSpeed=0}local am={opt=al,pos=u.pos,waypointRef=t}if GetIndex(X,t)<1 then if aj and aj>0 and GetIndex(X,t)<1 then am.opt.finalSpeed=aj end;if ai and ai>0 then am.opt.maxSpeed=ai end;if ah and ah>0.1 then am.opt.margin=ah end;am.opt.selectable=false;am.opt.skippable=false else if ag and ag>0.1 then am.opt.margin=ag end;am.opt.selectable=true;am.opt.skippable=true end;table.insert(ae.v[af].points,am)end end;P("[I] "..p.." positions added to route '"..af.."'")B(l)C(ae)end;function a.YfsSaveRouteCmd(D)local F=a.GetYFSRoutes()if not F then return end;local G=SU.SplitQuoted(D)if#G<1 then return E("[E] Parameter(s) missing: routename\nExample: /yfs-save-route 'Cryo' -onlySelectable -withOptions -prefix 'Cryo'")end;local an=GetParamValue(G,"-prefix","s")if not an then an="WP"end;local H=GetIndex(G,"-onlySelectable")>0;local ao=GetIndex(G,"-withOptions")>0;local I=G[1]local J=F.v[I]if not J or not IsTable(J.points)or#J.points==0 then return E("[E] Route '"..I.."' not found or empty")end;local ap,aq="create-route '"..I.."'\r\n",""local l=a.GetYFSNamedWaypoints()local L=1;local ar={}for s,M in ipairs(J.points)do local N=""local O=an.." "..c("%03d",L)if M.waypointRef and l then O=M.waypointRef;N=l.v[O].pos else N=M.pos or"<unknown>"end;if GetIndex(ar,O)<0 then ar[#ar+1]=O;local as="pos-save-as '"..O.."' -pos "..N;ap=ap..as.."\n"end;if not H or M.opt["selectable"]~=false then local as="route-add-named-pos '"..O.."'"if ao then if M.opt["maxSpeed"]and M.opt["maxSpeed"]~=0 then as=as.." -maxspeed "..M.opt["maxSpeed"]end;if M.opt["margin"]and M.opt["margin"]~=0.1 then as=as.." -margin "..M.opt["margin"]end;local at=false;local au=""if M.opt["skippable"]==true then at=true;au=au.." -toggleSkippable"end;if M.opt["selectable"]==false then at=true;au=au.." -toggleSelectable"end;if M.opt["finalSpeed"]and M.opt["finalSpeed"]~=0 then at=true;au=au.." -finalSpeed "..M.opt["finalSpeed"]end;if at then as=as.."\nroute-set-pos-option -ix "..L..au end end;aq=aq..as.."\n"L=L+1 end end;aq=aq.."route-save\r\n"P(ap..aq)ScreenOutput(ap..aq)end;function a.YfsReplaceWpCmd(D)local m=a.GetYFSNamedWaypoints()if not m then return end;local av="\r\nExample: /yfs-replace-wp 'base 1'"local aw=SU.SplitQuoted(D)if#aw<1 then return E("[E] Parameter(s) missing: -name 'point'"..av)end;local O=GetParamValue(aw,"-name","s",true)if not O then return end;if not m.v[O]or m.v[O]==""then return E("[E] Waypoint '"..O.."' not found."..av)end;local w=PM.GetCurrentPosString()local ax=GetParamValue(aw,"-pos","s")if ax then local as=PM.SplitPos(ax)if not as then return E("[E] Invalid ::pos{} specified!")end;w=ax end;m.v[O].pos=w;P("[I] Waypoint '"..O.."' changed to:")P(w)B(m)return true end;function a.YfsOptionsResetCmd(D)local F=a.GetYFSRoutes()if not F then return end;local a8="\nExample:\n/yfs-options-reset -route 'name' -ix 2 -endIx 3\nWith -endIx being optional."local G=SU.SplitQuoted(D)local af=GetParamValue(G,"-route","s",true)if not af then return E(a8)end;if not F.v[af]then return E("[E] Route '"..af.."' not found."..a8)end;if not F.v[af].points or#F.v[af].points==0 then return E("[E] Route '"..af.."' empty.")end;local aa=GetParamValue(G,"-ix","i",true)local ay=GetParamValue(G,"-endIx","i")if not ay then ay=#F.v[af].points end;local az=not af or not aa or aa<1 or ay and ay<aa;if az then return E("[E] Wrong number of parameters / invalid values!"..a8)end;if not ay or ay<aa then ay=aa end;P("[I] Processing route '"..af.."'")local aA=0;local aB=30/3.6;for aC,M in ipairs(F.v[af].points)do if aC>=aa and aC<=ay then local O=M.waypointRef;if not O then O=aC end;aA=aA+1;F.v[af].points[aC].opt.finalSpeed=aB;F.v[af].points[aC].opt.maxSpeed=0;F.v[af].points[aC].opt.margin=0.1;F.v[af].points[aC].opt.lockDir=nil;P("[I] Options reset for route waypoint: "..O)end end;if aA==0 then return E("[I] No waypoints in route changed.\n[*] Make sure that start (and end-index) are valid.")end;C(F)P("[I] Routes saved.")end;function a.YfsRouteAltitudeCmd(D)local F=a.GetYFSRoutes()if not F then return end;local U=a.GetYFSNamedWaypoints()local a8="\nExample:\n/yfs-route-altitude -route 'name' -ix 2 -endIx 3 -alt 330\nThe -endIx is optional."local G=SU.SplitQuoted(D)local af=GetParamValue(G,"-route","s",true)if not af then return end;if not F.v[af]then return E("[E] Route '"..af.."' not found."..a8)end;if not F.v[af].points or#F.v[af].points==0 then return E("[E] Route '"..af.."' empty.")end;local aa=GetParamValue(G,"-ix","i",true)local ay=GetParamValue(G,"-endIx","i")local ab=GetParamValue(G,"-alt","n",true)if not ay then ay=#F.v[af].points end;local az=not af or not aa or not ab or aa<1 or ay and ay<aa or ab<-100 or ab>10000;if az then return E("[E] Wrong number of parameters / invalid values!"..a8)end;if not ay or ay<aa then ay=aa end;P("[I] Processing route '"..af.."'")local aA=0;local m={}for aC,M in ipairs(F.v[af].points)do if aC>=aa and aC<=ay then local w=""local O=M.waypointRef;if O and U and U.v and U.v[O]then local u=U.v[O]if GetIndex(m,O)<1 then table.insert(m,O)end;w=PM.ReplaceAltitudeInPos(u.pos,ab)else O=aC;w=PM.ReplaceAltitudeInPos(M.pos,ab)end;aA=aA+1;F.v[af].points[aC].pos=w;P("[I] Route Waypoint '"..O.."' changed to:\n"..w)end end;if aA==0 then return E("[I] No waypoints in route changed.\n[*] Make sure that start (and end-index) are valid.")end;C(F)P("[I] Routes saved.")aA=0;for s,aD in ipairs(m)do if U and U.v[aD]then aA=aA+1;local w=PM.ReplaceAltitudeInPos(U.v[aD].pos,ab)U.v[aD].pos=w;P("[I] Named Waypoint '"..aD.."' changed to:")P(w)else P("[E] '"..aD.."' not found!")end end;if aA>0 then B(U)P("[I] Named waypoints saved.")end end;function a.YfsWpAltitudeCmd(D)local m=a.GetYFSNamedWaypoints()if not m then return E("[E] No named waypoints.")end;local G=SU.SplitQuoted(D)if#G~=2 then return E("[E] Wrong number of parameters!\nExample: /yfs-wp-altitude 'Base 1' 324.12")end;local af=G[1]or""if not af or not G[2]or not m.v[af]or m.v[af]==""then return E("[E] Waypoint '"..af.."' not found")end;local ab=e(G[2]or 0)local w=PM.ReplaceAltitudeInPos(m.v[af].pos,ab)m.v[af].pos=w;P("[I] Waypoint '"..af.."' changed to:")P(w)P("[I] Note: routes' waypoints are updated on route activation, i.e. exporting route data before activation may still show old value!")B(m)return true end;function a.YfsRouteNearestCmd(D)local F=a.GetYFSRoutes()if not F then return end;local aw=SU.SplitQuoted(D)if#aw==0 or#aw>2 then P("[E] Wrong parameter count\n[I] Example: /yfs-route-nearest 'Route 1'")P("\nOptional parameter:\n")P("-onlySelectable -> only show closest, selectable waypoints in route")return false end;local aE=aw[1]local J=F.v[aE]if not J or not IsTable(J.points)then return E("[E] Route '"..aE.."' not found or empty")end;P("[I] Route '"..aE.."' found.")local H=GetIndex(aw,"-onlySelectable")>0;local X=a.GetYFSNamedWaypoints(true)local aF=0;local aG=999999999;local aH,aI="",""local aJ={}for t,M in ipairs(J.points)do aF=aF+1;if not H or M.opt and M.opt.selectable~=false then local aK=SU.Trim(c("%02d",aF)..": '"..(M.waypointRef or"").."'")local W=M.pos;if M.waypointRef and X then W=X.v[M.waypointRef].pos end;local aL=PM.GetDistance(W)if aL>0.1 then J.points[t].distance=aL;aH=aK.." = "..c("%.4f",aL)if aL<aG then aI=aH;aG=aL end;local aM=tostring(math.modf(aL*10000))local aN=('0'):rep(12-#aM)..aM;aJ[aN]=aF end end end;if not aF then return E("[I] No selectable waypoints found.")end;local S="Route-Idx / Name / Distance (m)\n"for s,aN in pairs(GetSortedAssocKeys(aJ))do local aO=aJ[aN]local O=J.points[aO].waypointRef or aO;local aP=J.points[aO].distance;S=S..c("%02d",aO).." / '"..O.."' / "S=S..Out.PrettyDistance(aP).."\n"end;S=S.."\n[I] Nearest waypoint: "..aI;Out.PrintLines(S)ScreenOutput(S)end;function a.YfsRouteToNamedCmd(D)local F=a.GetYFSRoutes()if not F then return end;local aw=SU.SplitQuoted(D)if#aw==0 or#aw>6 then P("[E] Wrong parameter count\n[I] Example: /yfs-route-to-named 'Route 1'\nOptional parameters:\n")P("-onlySelectable -> only write waypoints marked as selectable in route")P("-prefix Myprefix -> if unspecified, 'WP' is default")P("-toScreen -> output JSON of list to optional screen if linked")P("-toDB -> only if this is given, the changed list will be written to DB to avoid miscalls")P("Important: command aborts if ANY waypoint's name starts with given prefix to avoid errors!")return false end;local aE=aw[1]local J=F.v[aE]if not J or not IsTable(J.points)then return E("[E] Route '"..aE.."' not found or empty")end;P("[I] Route '"..aE.."' found.")local aQ=GetIndex(aw,"-toDB")>0;local aR=GetIndex(aw,"-toScreen")>0;local H=GetIndex(aw,"-onlySelectable")>0;local an=GetParamValue(aw,"-prefix","s")if not an then an="WP"end;local X=a.GetYFSNamedWaypoints(true)if not X or not X.v then X={v={}}else for t,s in pairs(X.v)do if string.find(t,an)==1 then return E("[!] Waypoints with same prefix already exist!\n[!] Command aborted.")end end end;local aF=0;for s,M in ipairs(J.points)do if not H or M.opt and M.opt.selectable~=false then aF=aF+1;local aK=an.." "..c("%02d",aF)local u={pos=M.pos,opt=M.opt}X.v[aK]=u;P(aK.." "..M.pos)end end;if not aF then return E("[I] No changes to waypoints done")end;if aQ then B(X)P("[I] Waypoint changes saved to databank!")else P("[I] -toDB not present, no changes saved to databank!")end;if aR then ScreenOutput(json.encode(X.v))end end;function a.YFSLoadNamedWaypoints()local m=a.GetYFSNamedWaypoints()if not m then return end;for t,M in pairs(m.v)do PM.CreateWaypoint(M.pos,t)end end;function a.YFSLoadRoutepoints(aS,aT)local F=a.GetYFSRoutes()if not F then return false end;P('[I] Processing routes...')for t,M in pairs(F.v)do if(aT==""or aT==t)and IsTable(M)then for aU,aV in ipairs(M.points)do if not aS or aV.opt["selectable"]~=false then local O=t.." "..aU;if aV.waypointRef then O=aV.waypointRef end;PM.CreateWaypoint(aV["pos"],O)end end;P("[I] Route '"..t.."' read.")end end;return true end;function a.YfsSaveNamedCmd(D)a.WpSaveNamedCmd(D,true)end;function a.PosDataCmd()P("getCameraHorizontalFov: "..system.getCameraHorizontalFov())P("getCameraVerticalFov: "..system.getCameraVerticalFov())P("getCameraPos: "..PM.Vec3String(system.getCameraPos()))P("getCameraForward: "..PM.Vec3String(system.getCameraForward()))P("getCameraRight: "..PM.Vec3String(system.getCameraRight()))P("getCameraUp: "..PM.Vec3String(system.getCameraUp()))P("getCameraWorldPos: "..PM.Vec3String(system.getCameraWorldPos()))P("getCameraWorldForward: "..PM.Vec3String(system.getCameraWorldForward()))P("getCameraWorldRight: "..PM.Vec3String(system.getCameraWorldRight()))P("getCameraWorldUp: "..PM.Vec3String(system.getCameraWorldUp()))P("construct.getWorldPosition: "..PM.Vec3String(construct.getWorldPosition(CNID)))P("construct.getOrientationForward: "..PM.Vec3String(construct.getOrientationForward()))P("construct.getOrientationRight: "..PM.Vec3String(construct.getOrientationRight()))P("construct.getOrientationUp: "..PM.Vec3String(construct.getOrientationUp()))end;function a.DumpPointsCmd()if true then P("~=~=~=~=~=~=~= DUMP START ~=~=~=~=~=~=")local as=Out.DumpVar(WM:getWaypointsInst())P(as)return ScreenOutput(as or"[I] No waypoints.","\n~=~=~=~=~=~=~= DUMP END ~=~=~=~=~=~=~=")end end;function a.DumpRoutesCmd()if not DetectedYFS then return E("[I] No YFS databank.")end;P("~=~=~=~=~=~=~= ROUTES DUMP START ~=~=~=~=~=~=")local as=YFSDB:getString(YFS_ROUTES)P(as)ScreenOutput(as or"[I] No routes.","\n~=~=~=~=~=~=~= ROUTES DUMP END ~=~=~=~=~=~=~=")end;function a.RoutesCmd()local F=a.GetYFSRoutes()if not F then return end;P("[I] Available routes:")for t,s in pairs(F.v)do P(t)end end;function a.YfsTestDataCmd(aW)if not(aW=="TESTING")then return end;P("[*] Creating YFS test data...")YFSDB:remove(YFS_NAMED_POINTS)local z={}z["Chr 01"]={pos="::pos{0,7,-20.7784,-153.7402,360.5184}",opt={}}z["Chr 02"]={pos="::pos{0,7,-21.3610,-152.3447,345.8787}",opt={}}z["Chr 03"]={pos="::pos{0,7,-23.0540,-152.8934,360.6677}",opt={}}z["Chr 04"]={pos="::pos{0,7,-22.4445,-154.3119,320.1029}",opt={}}z["Chr 05"]={pos="::pos{0,7,-20.5370,-154.7507,308.0151}",opt={}}z["Chr 06"]={pos="::pos{0,7,-21.6295,-155.1465,292.7660}",opt={}}z["Chr Hub"]={pos="::pos{0,7,-21.9903,-153.1008,391.4632}",opt={}}local as={v=z,t=type(z)}B(as)YFSDB:remove(YFS_ROUTES)local aX={}C({v=aX,t=type(aX)})P("[*] YFS test data saved!")a.DumpPointsCmd()a.DumpRoutesCmd()end;function a.ConversionTestCmd(aW)PM.ConversionTest()end;function a.XCmd()end;return a

      end)

      package.preload['YFS-Tools:help.lua']=(function()

      local a={}function a.PrintHelpCmd()local b="~~~~~~~~~~~~~~~~~~~~\nYFS-Tools Commands:\n~~~~~~~~~~~~~~~~~~~~\n".."/arch-save-named\n-> Builds list of chat commands for ArchHud to add locations for all named waypoints.\n".."/findCenter\n-> Calculates center between all points of a route, like for a central hub.\n".."/planetInfo (id or name)\n-> Info about current planet or for passed planet id or name, e.g. 2 for Alioth).\n".."/printAltitude /printPos /printWorldPos\n-> Prints info data.\n".."/warpCost -from name/::pos{}/planets -to name/::pos{}/planets -mass tons -moons\n-> Flexible warp cell calculator.\n".."/wp-altitude-ceiling\n-> Changes a waypoint to have the higher altitude of both.\n".."/wp-export\n-> Outputs list of plain waypoints to chat and an optional screen. Source can include ArchHud locations, too, if databank linked.\n".."/yfs-add-altitude-wp\n-> Adds waypoints for each existing WP at a specified altitude and name suffix.\n".."/yfs-build-route-from-wp\n-> Powerful route-building command based on existing named waypoints.\n".."/yfs-options-reset\n-> Reset options of route waypoints for a specific route.\n".."/yfs-replace-wp 'name'\n-> Replaces a named waypoint with the current location.\n".."/yfs-route-altitude\n-> Changes altitude for a range of waypoints of a specific YFS route.\n".."/yfs-route-nearest\n-> Show list of route waypoints by distance from current location.\n".."/yfs-route-to-named\n-> Converts a route's *unnamed* waypoints to named waypoints for YFS.\n".."/yfs-save-named\n-> Builds list of YFS commands to recreate all named waypoints.\n".."/yfs-save-route\n-> Builds list of YFS commands to recreate full route incl. named waypoints and their options.\n".."/yfs-wp-altitude\n-> Changes altitude of a named waypoint to specified altitude.\n".."=========================================\n".."Important: Enclose names (as parameters) in single quotes if they contain blanks!\n".."*** DO NOT USE COMMANDS THAT CHANGE POINTS ***\n*** OR ROUTES WHILE YFS IS RUNNING! ***\n"ScreenOutput(b)P(b)end;return a

      end)

      package.preload['YFS-Tools:warpcost.lua']=(function()

      local a,b,c=string.match,string.format,string.len;local d,e,f,g,h,i=tonumber,utils.clamp,math.abs,math.max,math.floor,math.ceil;function CalcWarpCost(j)local k="\nExample 1:\n/warpCost -from Madis -to Alioth -mass 534".."\nExample 2:\n/warpCost -from Alioth -to planets -moons".."\nOptional '-from x' with x being either 'here', a planet name, ::pos{} or 'planets' (multi-result).".."\nOptional '-to x' like -from, but for end location.".."\nOptional '-mass x' with x the total mass in tons. If not given, the current constructs' total mass is used.".."\nOptional '-cargo x' with x the cargo mass in tons. If specified, a cell count for a return trip is calculated, too.".."\nOptional '-moons' only together with 'planets' to also include moons in the list.".."\n- One of -from or -to can be left out, then the current construct's location (or planet) is used.".."\n- If construct is landed on a planet or moon, the Atlas specified warp altitude is the starting point.".."\n- Enclose names in single-quotes if they contain spaces!"local l=construct.getMass;local m,n={},false;local o,p="~~~ WARP CELL CALCULATOR ~~~",""local function q(r,s,t)local u,v,w={},false,0;local x=GetParamValue(r,s,"s")if not x or x==""or x=="here"then u=PM.WorldPosVec3()if n and m then w=2*m.radius;x=m.name[1]u=vec3(m.center)else w=12;x=PM.Vec3ToPosString(u)end elseif x=="planets"then v=true elseif x>""then if SU.StartsWith(x,"::pos{")then w=12;u=PM.MapPosToWorldVec3(x)else local y=PM.PlanetByName(x)if y then w=2*y.radius;u=vec3(y.center)end end end;return{parm=x,v=u,isP=v,offset=w}end;local r=SU.SplitQuoted(j)if#r<1 then return E("[E] Parameter(s) missing!"..k)end;local z=GetIndex(r,"-moons")>0;local A=0;m=PM.GetClosestPlanet(PM.WorldPosVec3())if m then A=2*m.radius;n=PM.Altitude()<A;if n then p="Current"else p="Nearest"end;o=o.."\n"..p.." planet: "..m.name[1]else o=o.."\n[I] No planet nearby!"end;local B=50000;local C=l(CNID)/1000;local D,F=0,false;if GetIndex(r,"-cargo")>0 then local G=GetParamValue(r,"-cargo","n")G=G or 0;if G>0 then D=e(G,0,B)F=D>0 else return E(o.."\n[E] Invalid -cargo value, must be in range of 1-50000 tons!")end end;local H=GetParamValue(r,"-mass","n")p="Mass: "if H then C=d(H)else p="Construct "..p end;o=o.."\n"..p..Out.PrettyMass(C*1000)if F then o=o.." ~*~ Cargo: "..Out.PrettyMass(D*1000)end;if C<100 then return E(o.."\n[E] Impossibly low mass for a warp ship! ;)")elseif C>B then return E(o.."\n[E] I don't accept you're warping that heavy! ;)")end;local I=q(r,"-from",true)if not I.isP and not I.v then return E(o.."\n[E] Invalid starting location!")end;local J=q(r,"-to",false)if not J.isP and not J.v then return E(o.."\n[E] Invalid end location!")end;if I.isP and J.isP then return E(o.."\n[E] Only one 'planets' option supported!")end;if I.parm==J.parm or I.v==J.v then return E(o.."\n[E] Start and end locations must be different!")end;local function K(L,M,N,O,Q)local R=""if L>""then R=R..L end;if L>""and M>""then R=R.." to "end;if M>""then R=R..M end;R=R.." ("..Out.PrettyDistance(N)..")"if N<200000 then return R.." -> too short!"elseif N>100000000 then return R.." -> too far!"end;local S=PM.ComputeCells(N,O)R=R.." = "..S.." cell"..SU.If(S>1,"s")if F then local T=PM.ComputeCells(N,O-Q)R=R.." / "..T.." cell"..SU.If(S>1,"s").." = "..S+T.." total"end;return R end;if not I.isP and not J.isP then local N=f(vec3(I.v-J.v):len())-I.offset-J.offset;local U=K(I.parm,J.parm,N,C,D)if type(U)=="string"then o=o.."\n"..U;P(o)ScreenOutput(o)else E("[E] Sorry, something went wrong :(")end;return end;local V,W=nil,nil;p=" (Distance) / Cells"..SU.If(F," / Return w/o cargo")if I.isP then o=o.."\nTo: "..J.parm.."\nFrom"..p else o=o.."\nFrom: "..I.parm.."\nTo"..p end;for X,u in pairs(WaypointInfo[0])do if not u.isAsteroid and(z or not u.isMoon)then A=2*u.radius;if I.isP then I.parm=u.name[1]I.v=u.centerV3;A=A+J.offset else J.parm=u.name[1]J.v=u.centerV3;A=A+I.offset end;local N=f(vec3(I.v-J.v):len())-A;if N>100000 then o=o.."\n"..K(SU.If(I.isP,I.parm),SU.If(J.isP,J.parm),N,C,D)end end end;P(o)ScreenOutput(o)end

      end)

      package.preload['YFS-Tools:../util/wpoint.lua']=(function()

      local a,b,c=tonumber,string.len,string.match;Waypoint={mapPos={},name="",parent=nil}Waypoint.new=function(d)local e=setmetatable({parent=d,name="",mapPos={systemId=0,id=0,latitude=0.0,longitude=0.0,altitude=0.0}},{__index=Waypoint})return e end;Waypoint.get=function(self)return self.mapPos end;Waypoint.getPosPattern=function()local f=' *([+-]?%d+%.?%d*e?[+-]?%d*)'return'::pos{'..f..','..f..','..f..','..f..','..f..'}'end;Waypoint.set=function(self,g)if type(g)=="string"and b(g)<16 then print("[E] Invalid position: "..g)return{}end;if type(g)=="string"then local h,i,j,k,l=c(g,self.getPosPattern())if h then self.mapPos.systemId=a(h)self.mapPos.id=a(i)self.mapPos.latitude=a(j)self.mapPos.longitude=a(k)self.mapPos.altitude=a(l)else print(g.." - Invalid string format. Use '::pos{s, p, x, y, z}'.")end elseif type(g)=="table"and#g==3 then self.mapPos.latitude=a(g[1])self.mapPos.longitude=a(g[2])self.mapPos.altitude=a(g[3])elseif type(g)=="table"and#g==5 then self.mapPos.systemId=a(g[1])self.mapPos.id=a(g[2])self.mapPos.latitude=a(g[3])self.mapPos.longitude=a(g[4])self.mapPos.altitude=a(g[5])elseif type(g)=="table"and g.x and g.y and g.z then self.mapPos.systemId=0;self.mapPos.id=0;self.mapPos.latitude=a(g.x)self.mapPos.longitude=a(g.y)self.mapPos.altitude=a(g.z)else print("Invalid input. Provide a ::pos{} string, vec3() or {s,p,x,y,z} table.")end;return self end;Waypoint.setName=function(self,m)if m==nil then self.name=""return end;if type(m)=="string"and m:gmatch("^%a[%w_- ]*$")then self.name=m else print(tostring(m).."\n[E] WP: Invalid name format. Should only contain printable characters.")end;return self end;Waypoint.getName=function(self)return self.name end;Waypoint.getAltitude=function(self)return self.mapPos.altitude end;Waypoint.AsString=function(self)return string.format("::pos{%d, %d, %.4f, %.4f, %.4f}",self.mapPos.systemId,self.mapPos.id,self.mapPos.latitude,self.mapPos.longitude,self.mapPos.altitude)end;Waypoint.__Waypoint=function(self)return true end

      end)

      package.preload['YFS-Tools:../util/wpointmgr.lua']=(function()

      local a,b,c=tonumber,string.len,string.match;WaypointMgr={name="",waypoints={}}WaypointMgr.add=function(self,d,e)if d.__Waypoint and d.__Waypoint()then if d.name and d.name~=""then for f,g in ipairs(self.waypoints)do if g.name==d.name then return nil end end end;local h=1+#self.waypoints;if e then if e<1 or e>h then print("[E] Invalid index. Must be in the range 1 to "..h)return nil end;d.parent=self;table.insert(self.waypoints,e,d)else d.parent=self;table.insert(self.waypoints,h,d)end;return d else print("[E] Invalid waypoint parameter!")return nil end end;WaypointMgr.getWaypointsData=function(self)local i={}for j,g in ipairs(self.waypoints)do table.insert(i,j,g:get())end;return i end;WaypointMgr.getWaypointsInst=function(self)return self.waypoints end;WaypointMgr.getCount=function(self)return#self.waypoints end;WaypointMgr.getSorted=function(self)local k={}for f,g in pairs(self.waypoints)do table.insert(k,g)end;table.sort(k,function(l,m)return l.name<m.name end)return k end;WaypointMgr.moveUp=function(self,e)local n=#self.waypoints;if e and e>1 and e<=n then self.waypoints[e],self.waypoints[e-1]=self.waypoints[e-1],self.waypoints[e]end end;WaypointMgr.moveDown=function(self,e)local n=#self.waypoints;if e and e>=1 and e<n then self.waypoints[e],self.waypoints[e+1]=self.waypoints[e+1],self.waypoints[e]end end;WaypointMgr.removeByName=function(self,o)for p,d in ipairs(self.waypoints)do if d.name==o then local q=table.remove(self.waypoints,p)return q end end;return nil end;WaypointMgr.hasPoints=function(self,r)return#self.waypoints>0 end;WaypointMgr.exists=function(self,r)for f,g in ipairs(self.waypoints)do if type(r)=="string"and g.name==r then return g elseif r and r.__Waypoint and Waypoint.__Waypoint()then if g==r then return g end elseif type(r)=="table"and#r==5 then if g.mapPos.systemId==a(r[1])and g.mapPos.id==a(r[2])and g.mapPos.latitude==a(r[3])and g.mapPos.longitude==a(r[4])and g.mapPos.altitude==a(r[5])then return g end end end;return nil end;WaypointMgr.getName=function(self)return self.name end;WaypointMgr.new=function(s)local t=setmetatable({waypoints={},name=s or""},{__index=WaypointMgr})return t end;return WaypointMgr

      end)

      package.preload['YFS-Tools:../util/stl.lua']=(function()

      local function a(b)return'print(\''..b:gsub('\'','\\\''):gsub('\n','\\n')..'\')'end;local function c(...)local d={...}local e={}for f,g in pairs(d)do for h,i in pairs(g)do e[h]=i end end;return e end;local function j(b,k)local f=0;for l in b:gmatch("([^\n]*)\n?")do f=f+1;if f==k then return l end end;return nil end;local function m(b)return b:gsub("^%s*(.-)%s*$","%1")end;local n={globals={math=math,table=table,string=string,ipairs=ipairs,pairs=pairs}}function n.__call(self,...)return n.render(self,({...})[1])end;function n:render(o)if type(o or{})~='table'then error('Template parameters must be a table, got '..type(o))end;local f={}local p=c(n.globals,self.globals or{},o or{},{print=function(b)table.insert(f,tostring(b or''))end})self.callable(p)local e=table.concat(f,''):gsub('%s+',' ')e=e:sub(e:find('[^%s]')or 1):gsub('%s*$','')return e end;function n.new(q,r,s)local self={source=q,globals=r}local t=coroutine and coroutine.isyieldable()and coroutine.yield or function()end;q=q:gsub('{{(.-)}}','{%% print(%1) %%}')q=q:gsub('\n%s*{%%','{%%')q=q:gsub('%%}\n','%%}')local u={}while#q>0 do local v=q:find('{%%')local w=q:find('%%}')if v then if not w then error('Template error, missing Lua closing tag near: '..q:sub(0,16))end;local x=q:sub(1,v-1)if#x then table.insert(u,a(x))end;local y=q:sub(v,w+1):match('{%%(.-)%%}')or''table.insert(u,y)q=q:sub(w+2)else table.insert(u,a(q))q=''end;t()end;self.code=table.concat(u,'\n')local z=string.format('return function (_) _ENV = _; _ = _ENV[_]\n%s\nend',self.code)local f,A=load(z,nil,'t',{})if f and not A then f=f()end;if A then local f,k,B=A:match('^(.-):(%d+):(.+)')local C=j(self.source,k-1)local D=j(self.code,k-1)local E={raw=A,line=k-1,near=m(C or'N/A'),nearLua=m(D or'N/A'),message=m(B)}if s then s(self,E)else error(('Failed compiling template!\nError: %s\nLine: %d\nNear: %s\nCode: %s'):format(E.message,E.line,E.near,E.nearLua))end;return nil else self.callable=f end;return setmetatable(self,n)end;return n.new

      end)

      package.preload['YFS-Tools:../util/wolfeCentralpoint.lua']=(function()

      local a=math.sqrt;function GetCentralPoint(b,c)if type(b)~="table"or#b==0 then return nil end;if#b==1 then return b[1]elseif#b==2 then return(vec3(b[1])+vec3(b[2]))/2 end;local d=1/#b;local e=vec3(0,0,0)for f,g in pairs(b)do e=e+vec3(g)*d end;local h=e;if not c then local i=0;for f,g in pairs(b)do i=i+d*(vec3(g)-h):len()^a(2)end;local j=vec3(0,0,0)for f,g in pairs(b)do local k=vec3(g)local l=(k-h):len()^a(2)local m=l/i;j=j+k*d*m end;h=j end;return h end

      end)

      package.preload['YFS-Tools:libmain.lua']=(function()

      SU=require('YFS-Tools:../util/SU.lua')Out=require('YFS-Tools:../util/out.lua')P=Out.PrintLines;E=Out.Error;require('YFS-Tools:../util/Dtbk.lua')require('YFS-Tools:libutils.lua')Cmd=require('YFS-Tools:commands.lua')Help=require('YFS-Tools:help.lua')require('YFS-Tools:warpcost.lua')require('YFS-Tools:../util/wpoint.lua')WM=require('YFS-Tools:../util/wpointmgr.lua').new("MAIN")WaypointInfo=require('atlas')STL=require('YFS-Tools:../util/stl.lua')require('YFS-Tools:../util/wolfeCentralpoint.lua')WolfAR=nil

      end)

      package.preload['YFS-Tools:../util/pos.lua']=(function()

      local a,b,c,d,e,f,g,h,i,j,k,l=math.max,math.min,math.cos,math.acos,math.deg,math.sin,math.abs,math.rad,math.atan,math.ceil,math.floor,math.pi;local m,n,o,p=tonumber,string.len,string.match,string.format;local q,vec3=utils.clamp,vec3;local r={}r.__index=r;function r.New(s,t,u)local v={core=s,construct=t,Alioth1G=9.891,waypointNames={},waypointCount=0,planetNames={},p={},pIdx=0,wm=u}local function w(x,y)if x==0 then return g(y)<1e-09 elseif y==0 then return g(x)<1e-09 else return g(x-y)<math.max(g(x),g(y))*epsilon end end;local function z()return v.construct~=nil end;local function A()return v.core~=nil end;function r.ComputeCells(B,C)return j(a(k(C*k(B/1000/200)*0.00024),1))end;function r.GetPosPattern()local D=' *([+-]?%d+%.?%d*e?[+-]?%d*)'return'::pos{'..D..','..D..','..D..','..D..','..D..'}'end;function r.GetWaypointCount()return v.wm:getCount()end;function r.SplitPos(posStr)if type(posStr)~="string"then P("[E] Invalid position: "..type(posStr))return nil end;if n(posStr)<16 or not o(posStr,"^::pos{")then P("[E] Invalid position: "..posStr)return nil end;local F,G,H,I,J=o(posStr,r.GetPosPattern())return{systemId=m(F),id=m(G),latitude=m(H),longitude=m(I),altitude=m(J)}end;function r.GetAltitudeFromPos(K)local L=r.SplitPos(posStr)if L and L.altitude then return L.altitude end;return 0 end;function r.GetPlanetFromPos(posStr)local L=r.SplitPos(posStr)if L and L.id and L.id>0 then return L.id end;return 0 end;function r.GetAtlasPlanet(M)if not M or not WaypointInfo[0]or not WaypointInfo[0][m(M)]then return nil end;return WaypointInfo[0][m(M)]end;function r.GetClosestPlanetId(N)local O,Q=0,0;local R=math.huge;for S,T in pairs(WaypointInfo[0])do Q=(N-vec3(T.center)):len()if Q<R then R=Q;O=S end end;return O end;function r.GetClosestPlanet(N)local M=r.GetClosestPlanetId(N)return r.GetAtlasPlanet(M)end;function r.GetCurrentPosString()local T=r.WorldPosVec3()return r.MapPos2String(r.WorldToMapPos(T))end;function r.MapPos2String(U)if type(U)~="table"then return""end;return'::pos{'..(U.systemId or 0)..','..(U.id or 0)..','..p("%.4f",U.latitude or 0)..','..p("%.4f",U.longitude or 0)..','..p("%.4f",U.altitude or 0)..'}'end;function r.Vec3ToPosString(V)if type(V)~="table"then return""end;return'::pos{0,0,'..p("%.4f",V.x or 0)..','..p("%.4f",V.y or 0)..','..p("%.4f",V.z or 0)..'}'end;function r.Vec3String(V)if type(V)~="table"then return""end;V=vec3(V)return p("%.4f",V.x or 0)..', '..p("%.4f",V.y or 0)..', '..p("%.4f",V.z or 0)end;function r.ReplaceAltitudeInPos(posStr,W)local L=r.SplitPos(posStr)if not L or not L.altitude or not W then return posStr end;L.altitude=m(W)return r.MapPos2String(L)end;function r.PlanetId()if not A()then return 0 end;if not INGAME then return 2 end;return v.core.getCurrentPlanetId()end;function r.WorldPosVec3()if not INGAME then return{x=-25140.37011013,y=100812.26194182,z=-52412.710373821}end;if z()then return vec3(construct.getWorldPosition())end;if A()then return vec3(core.getWorldPosition())end;return nil end;function r.Altitude()local L=r.GetAtlasPlanet(r.PlanetId())if not L or not L.center then return 0 end;return(r.WorldPosVec3()-vec3(L.center)):len()-(L.radius or 0)end;function r.GetDistance(posStr,X)local Y=r.WorldPosVec3()if type(X)=="string"then Y=r.MapPosToWorldVec3(X)elseif type(X)=="table"then Y=vec3(X)end;local Z=r.MapPosToWorldVec3(posStr)local Q=vec3(Z-Y):len()return Q end;function r.World2local(_,a0,a1)local a2=v.construct.getWorldOrientationUp()local a3=v.construct.getWorldOrientationForward()local a4=v.construct.getWorldOrientationRight()local a5,a6,a7=a2[1],a2[2],a2[3]local a8,a9,aa=a3[1],a3[2],a3[3]local ab,ac,ad=a4[1],a4[2],a4[3]local T=library.systemResolution3({ab,ac,ad},{a8,a9,aa},{a5,a6,a7},{_,a0,a1})return T[1],T[2],T[3]end;function r.WorldPosFromBody(ae,af,ag,ah)if type(ae)~="table"then return nil end;local ai=ah+(ae.radius or 0)local aj,ak=h(af),h(ag)local al=c(aj)local am=vec3(al*c(ak),al*f(ak),f(aj))return vec3(ae.center)+am*ai end;function r.BodyPosFromWorldPos(an,ao)local am=ao-vec3(an.center)local ap=am:normalize()return{systemId=an.systemId,id=an.id,latitude=90-d(ap.z)*180/l,longitude=i(ap.y,ap.x)/l*180,altitude=am:len()-an.radius}end;function r.WorldToMapPos(T)local an=r.GetClosestPlanet(T)if not an or not an.center or not an.radius then return{systemId=0,id=0,latitude=T.x,longitude=T.y,altitude=T.z}end;return r.BodyPosFromWorldPos(an,T)end;function r.PlanetByName(aq)if type(aq)~="string"or aq==""then return nil end;aq=aq:lower()if v.planetNames[aq]then local M=m(v.planetNames[aq])return WaypointInfo[0][M]end;return nil end;function r.MapPosToWorldVec3(posStr)local L=r.SplitPos(posStr)if not L or not L.systemId then return nil end;if L.systemId==0 and L.id==0 then return vec3(L.latitude,L.longitude,L.altitude)end;if not WaypointInfo[L.systemId]then return nil end;local ar=WaypointInfo[L.systemId][L.id]local H=0.0174532925199*a(b(L.latitude,90),-90)local as=0.0174532925199*(L.longitude%360)local at=c(H)local au=vec3(at*c(as),at*f(as),f(H))return vec3(ar.center)+(ar.radius+L.altitude)*au end;function r.PlanetInfo(av)local M=nil;if type(av)=="string"and av:len()==0 then av=r.GetClosestPlanetId(r.WorldPosVec3())end;if type(av)=="string"and v.planetNames[av:lower()]then M=m(v.planetNames[av:lower()])elseif type(av)=="string"and m(av)>0 then M=m(av)end;if M==nil then return E("[E] No valid planet name or id specified!")end;local L=r.GetAtlasPlanet(M)if not L or type(L.name)~="table"then return E("[E] No planet found!")end;P"~~~~~~~~ PLANET INFO ~~~~~~~~"if av==''then P("Hint: '/planetInfo 2' for Alioth")end;P("Name: "..L.name[1].." (Id: "..L.id..")")P("Center: "..L.center[1].." / "..L.center[2].." / "..L.center[3])P("Radius: "..(L.radius or 0).."m")local aw=""if L.gravity and L.gravity>0 then aw=" ("..p("%.1f",L.gravity/v.Alioth1G).." g)"end;P("Gravity: "..(L.gravity or 0)..aw)if L.satellites and#L.satellites>0 then P("Has Moons: "..#L.satellites)end;P("Surface Min Alt.: "..(L.surfaceMinAltitude or 0).."m")P("Surface Max Alt.: "..(L.surfaceMaxAltitude or 0).."m")P("Max Static Alt.: "..(L.maxStaticAltitude or"").."m")P("Has atmosphere: "..BoolStr(L.hasAtmosphere))if L.hasAtmosphere then P("Atmo Thickness: "..(L.atmosphereThickness or 0).."m")P("Atmo altitude: "..(L.atmoAltitude or 0).."m")P("Atmo 10%: "..(L.atmo10 or 0).."m")end;P("Is in Safe Zone: "..BoolStr(L.isInSafeZone))P"~~~~~~~~~~~~~~~~~~~~~~~~~~~"end;function r.CreateWaypoint(K,ax)if not v.wm or not ax or ax==''or v.waypointNames[ax]then return false end;local L=r.SplitPos(K)if not L or not L.systemId then return false end;if L.id==0 then local ay=r.WorldToMapPos(vec3{L.latitude,L.longitude,L.altitude})if ay and ay.id and ay.id>0 then L.latitude=ay.latitude;L.longitude=ay.longitude;L.altitude=ay.altitude;L.id=ay.id;L.systemId=ay.systemId;K=r.MapPos2String(L)end end;local az=Waypoint:new(v.wm):setName(ax):set(K)if not az or az=={}then return false end;if v.wm:exists(az)then return false end;return v.wm:add(az)end;function r.ConversionTest()local aA="::pos{0,2,35.5118,104.0375,285.3076}"local aB=r.MapPosToWorldVec3(aA)P("HQ local to world:\n"..aA.." =")P(r.Vec3ToPosString(aB))local aC=r.WorldToMapPos(aB)Out.DeepPrint(aC)P("World to local (should show same as above):")P(r.MapPos2String(aC))local az="::pos{0,0,-24955.2183,99771.5731,-52908.1353}"if r.CreateWaypoint(az,"WorldPos")then P("Added 'WorldPos' waypoint")else P("Failed to add test waypoint!")end end;local function aD()v.pIdx=0;v.p=r.GetAtlasPlanet(r.PlanetId())if v.p then v.pIdx=v.p.id end;if not WaypointInfo[0]then return end;v.planetNames={}for S,T in pairs(WaypointInfo[0])do v.planetNames[T.name[1]:lower()]=S;WaypointInfo[0][S].biosphere=nil;WaypointInfo[0][S].classification=nil;WaypointInfo[0][S].description=nil;WaypointInfo[0][S].habitability=nil;WaypointInfo[0][S].ores=nil;WaypointInfo[0][S].centerV3=vec3(WaypointInfo[0][S].center)if T.hasAtmosphere then local aE=T.atmosphereRadius-T.radius;WaypointInfo[0][S].atmoAltitude=aE;WaypointInfo[0][S].atmo10=aE*0.9 end;WaypointInfo[0][S].isAsteroid=WaypointInfo[0][S].type[1]=="Asteroid"WaypointInfo[0][S].isMoon=WaypointInfo[0][S].type[1]=="Moon"WaypointInfo[0][S].isPlanet=WaypointInfo[0][S].type[1]=="Planet"end;if v.wm then P("[I] WaypointMgr assigned: "..v.wm:getName())else P("[E] NO WaypointMgr assigned!")end end;aD()return setmetatable(v,r)end;return r

      end)

      package.preload['YFS-Tools:startup.lua']=(function()

      local a=utils.clamp;

      local onlyForRoute=""--export: Load waypoints only for this route (enclosed in double quotes!); default "".


      local onlySelectableWP=true--export: Check to only display custom route waypoints that are marked as selectable


      local loadWaypoints=true--export: Enable to load custom waypoints from databank


      local outputFont="FiraMono"--export: Name of font used for screen output. Default: "FiraMono"


      --local centerMaxDistance=5000--export: The furthest distance a point should be displayed on-screen in meters (1000..10000; default: 5000)


      --local centerHelperCirclesEvery=1000--export: Show grid circles every X meters (100..2000; default: 1000)

      onlyForRoute=onlyForRoute or""OutputFont=outputFont or"FiraMono"P("=========================================")P("YFS-Tools 1.7.6 (unofficial)")P("created by tobitege (c) 2023")P("Thanks to Yoarii (SVEA) for YFS and LUA help!")P("YFS 1.4+ databank link required (Routes).")P("=========================================")P("* WARNING: do not run commands that change")P("* waypoints/routes while YFS is running!")P("=========================================")P("LUA parameter(s):")P("Load waypoints from databank: "..BoolStr(loadWaypoints))P("Only waypoints for route: "..onlyForRoute)P("Only selectable waypoints: "..BoolStr(onlySelectableWP))P("Screen output font name: "..OutputFont)P("=========================================")local b,c=false,nil;if INGAME then b,c,_=xpcall(function()Config.core=library.getCoreUnit()Config.databanks=library.getLinksByClass('DataBank',true)Config.screens=library.getLinksByClass('Screen',true)end,Traceback)if not b then P("Error in Link Detection:\n"..c)unit.exit()return end else Config.core=unit.core;Config.databanks={unit.databank}Config.screens={unit.screen}end;if Config.core==nil then P("[E] No Core connected! Ending script.")unit.exit()return end;PM=require('YFS-Tools:../util/pos.lua').New(Config.core,construct,WM)if#Config.databanks>0 then local d=""if#Config.databanks>1 then d="s"else d=" '"..Config.databanks[1].getName().."'"end;P(#Config.databanks.." databank"..d.." connected.")else P("[E] DataBank not found.")end;if#Config.screens>0 then local d=""if#Config.screens>1 then d="s"end;P(#Config.screens.." screen"..d.." connected.")end;if loadWaypoints~=true or#Config.databanks==0 then P("[I] Waypoints loading is off.")return end;if not INGAME then onlyForRoute="Garni"end;local e=0;for f=1,#Config.databanks,1 do local g=Config.databanks[f]P("===== Checking db '"..g.getName().."' =====")if g.hasKey(ARCH_SAVED_LOCATIONS)then P('ArchHud databank detected.')DetectedArch=f;local h=g.getStringValue(ARCH_SAVED_LOCATIONS)if h~=""then P('Searching stored locations...')local i=json.decode(h)if IsTable(i)then Cmd.GetStoredLocations(i)end end end;if g.hasKey(YFS_ROUTES)or g.hasKey(YFS_NAMED_POINTS)then P('YFS databank detected.')YFSDB=Dtbk.new(g)DetectedYFS=true;if not onlySelectableWP then Cmd.YFSLoadNamedWaypoints()end;Cmd.YFSLoadRoutepoints(onlySelectableWP,onlyForRoute)end;local j=PM.GetWaypointCount()if j==e then P("[I] No waypoints loaded from db "..f)else P("[I] "..j-e.." waypoints loaded from db "..f)end;e=PM.GetWaypointCount()end;P("=======================")if PM.GetWaypointCount()>0 then P("[I] Total "..PM.GetWaypointCount().." waypoints loaded.")else P("[I] No waypoints loaded.")end;P("=======================")

      end)

      package.preload['YFS-Tools:sys_onInputText.lua']=(function()

      local a={}function a.Run(b)b=SU.Trim(b)if not SU.StartsWith(b,"/")then return end;if not Cmd then return E("[FATAL ERROR] Commands processor not assigned!")end;local c={}c['arch-save-named']=1;c['conversionTest']=1;c['findCenter']=1;c['posData']=1;c['help']='Help'c['planetInfo']=1;c['printAltitude']=1;c['printPos']=1;c['printWorldPos']=1;c['warpCost']=1;c['wp-altitude-ceiling']=1;c['wp-export']=1;c['yfs-add-altitude-wp']=1;c['yfs-build-route-from-wp']=1;c['yfs-save-named']=1;c['yfs-save-route']=1;c['yfs-replace-wp']=1;c['yfs-route-altitude']=1;c['yfs-route-nearest']=1;c['yfs-options-reset']=1;c['yfs-route-to-named']=1;c['yfs-wp-altitude']=1;c['DumpRoutes']=1;c['DumpPoints']=1;c['routes']=1;if DEBUG then c['YfsTestData']=1;c['x']=1 end;for d,e in pairs(c)do if SU.StartsWith(b,"/"..d)then local f=b:sub(d:len()+2)or""f=SU.Trim(f)if d=='help'then d="PrintHelp"end;local g=SU.SplitAndCapitalize(d,'-').."Cmd"local h=SU.If(type(e)=="string",e,"Cmd")P("Executing /"..d..SU.If(f~=""," with: "..f))if not _G[h]then return E("[FATAL ERROR] "..h.." not found!")end;if _G[h][g]then return _G[h][g](f)end end end;P("~~~~~~~~~~~~~~~~~~~~~")P("[E] Unknown command: "..b)P("[I] Supported commands:")for i,g in ipairs(GetSortedAssocKeys(c))do P("/"..g)end end;return a

      end)
  - key: 4
    filter:
      slotKey: -5
      signature: onStart()
      args: []
    code: |-
      library.addEventHandlers(library)
      library.addEventHandlers(system)
      library.addEventHandlers(player)
      library.addEventHandlers(construct)
      library.addEventHandlers(unit)
  - key: 5
    filter:
      slotKey: -4
      signature: onActionStart(action)
      args:
        - variable: "*"
    code: system:triggerEvent('onActionStart',action)
  - key: 6
    filter:
      slotKey: -4
      signature: onActionLoop(action)
      args:
        - variable: "*"
    code: system:triggerEvent('onActionLoop',action)
  - key: 7
    filter:
      slotKey: -4
      signature: onActionStop(action)
      args:
        - variable: "*"
    code: system:triggerEvent('onActionStop',action)
  - key: 8
    filter:
      slotKey: -4
      signature: onUpdate()
      args: []
    code: system:triggerEvent('onUpdate')
  - key: 9
    filter:
      slotKey: -4
      signature: onFlush()
      args: []
    code: system:triggerEvent('onFlush')
  - key: 10
    filter:
      slotKey: -4
      signature: onInputText(text)
      args:
        - variable: "*"
    code: system:triggerEvent('onInputText',text)
  - key: 11
    filter:
      slotKey: -4
      signature: onCameraChanged(mode)
      args:
        - variable: "*"
    code: system:triggerEvent('onCameraChanged',mode)
  - key: 12
    filter:
      slotKey: -3
      signature: onParentChanged(oldId,newId)
      args:
        - variable: "*"
        - variable: "*"
    code: player:triggerEvent('onParentChanged',oldId,newId)
  - key: 13
    filter:
      slotKey: -2
      signature: onDocked(id)
      args:
        - variable: "*"
    code: construct:triggerEvent('onDocked',id)
  - key: 14
    filter:
      slotKey: -2
      signature: onUndocked(id)
      args:
        - variable: "*"
    code: construct:triggerEvent('onUndocked',id)
  - key: 15
    filter:
      slotKey: -2
      signature: onPlayerBoarded(id)
      args:
        - variable: "*"
    code: construct:triggerEvent('onPlayerBoarded',id)
  - key: 16
    filter:
      slotKey: -2
      signature: onVRStationEntered(id)
      args:
        - variable: "*"
    code: construct:triggerEvent('onVRStationEntered',id)
  - key: 17
    filter:
      slotKey: -2
      signature: onConstructDocked(id)
      args:
        - variable: "*"
    code: construct:triggerEvent('onConstructDocked',id)
  - key: 18
    filter:
      slotKey: -2
      signature: onPvPTimer(active)
      args:
        - variable: "*"
    code: construct:triggerEvent('onPvPTimer',active)
  - key: 19
    filter:
      slotKey: -1
      signature: onStop()
      args: []
    code: unit:triggerEvent('onStop')
  - key: 20
    filter:
      slotKey: -1
      signature: onTimer(timerId)
      args:
        - variable: "*"
    code: unit:triggerEvent('onTimer',timerId)
  - key: 21
    filter:
      slotKey: -1
      signature: onStart()
      args: []
    code: package.path="lua/?.lua;util/wpointer/?.lua;"..package.path;require('YFS-Tools:globals.lua')WP_WOLF_ENABLED=true;DEBUG=false;require('YFS-Tools:libmain.lua')if
      INGAME then local Traceback=traceback else function Traceback(a)if a then
      P(tostring(a))end end;require'mockaround'end;local
      b,c,d=xpcall(function()require('YFS-Tools:startup.lua')end,Traceback)if
      not b then P("[E] Error in startup!")if c then P(c)end;unit.exit()return
      end;local e=require('YFS-Tools:sys_onInputText.lua')if e~=nil then
      system:onEvent('onInputText',function(self,f)e.Run(f)end)end;if not
      WP_EG_ENABLED and not WP_WOLF_ENABLED then P('[I] Waypointer module
      disabled.')else P('[I] Waypointer module
      enabled.')unit.setTimer("update",1/120)system.showScreen(1)end;if INGAME
      then if DEBUGx then
      b,c,d=xpcall(function()PM.ConversionTest()end,Traceback)if not b then if c
      then P("[E] Error in test call:\n"..c)end;unit.exit()return end else
      unit.hideWidget()end;P("Type /help for available commands.")end
events: []
methods: []
