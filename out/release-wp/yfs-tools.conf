name: YFS-Tools yfs-tools
slots: {}
handlers:
  library:
    onStart():
      lua: >-
        ;(function()

        local a={}local b=0;function library.addEventHandlers(c)if not c or c.onEvent and c.triggerEvent then return false end;b=b+1;a[b]=c;local d,e,f='table','function','thread'if d~=type(c)then error('You can only add event handlers to table objects!')end;local g={}local function h(c)local i=type(c)return e==i or d==i and h(getmetatable(c).__call)or f==i end;c.onEvent=function(self,j,k,l)if not h(k)then error('Event handler must be a function, a callable object or a thread!')end;l=l or self;if d~=type(l)then error('The value of self must be a table!')end;if not g[j]then g[j]={_=0}end;local m=f==type(k)and function(...)coroutine.resume(k,...)end or k;local k=g[j]local n=k._+1;k[n]={m,l}k._=n;return n end;c.clearEvent=function(self,j,o)if g[j]and g[j][o]then g[j][o]=nil end end;c.clearAllEvents=function(self)g={}end;c.triggerEvent=function(self,j,...)local p=g[j]if p then for q=1,p._ do local k=p[q]if k then k[1](k[2],...)end end end end;return true end;function library.clearAllEventHandlers()for q=1,b do local c=a[q]if c and c.clearAllEvents then c:clearAllEvents()end end end

        end)()

        ;(function()

        local a=DULibrary or{}function a.getLinks(b,c)local d={}if not b then b={}end;for e,f in pairs(unit.getOutPlugs())do local g=unit[f.name]if'table'==type(g)and'function'==type(g.getClass)then local h=true;for i,j in pairs(b)do if not('function'==type(g[i])and j==g[i]():sub(1,#j))then h=false;break end end;if h then if c then table.insert(d,g)else d[f.name]=g end end end end;return d end;function a.getLinksByClass(k,c)return a.getLinks({getClass=k},c)end;function a.getLinkByClass(k)return a.getLinksByClass(k,true)[1]end;function a.getCoreUnit()return a.getLinkByClass('CoreUnit')end;function a.getLinkByName(l)local m=a.getCoreUnit()if not m then error('getLinkByName requires a linked CoreUnit to work')end;local d=a.getLinks()for n,o in pairs(d)do if l==m.getElementNameById(o.getLocalId())then return o end end end

        end)()

        package.preload['YFS-Tools:globals.lua']=(function()

        Config={core=nil,databanks={},screens={}}DetectedArch=0;DetectedYFS=false;YFSDB=nil;YFS_NAMED_POINTS="NamedPoints"YFS_ROUTES="NamedRoutes"ARCH_SAVED_LOCATIONS="SavedLocations"DEBUG=false;WAYPOINTER_ENABLED=true;ScriptStartTime=0;INGAME=system~=nil;if not INGAME then else ScriptStartTime=system.getArkTime()print=system.print end;projector=nil;clicked=false;WaypointInfo=require('atlas')CNID=construct.getId()

        end)

        package.preload['YFS-Tools:../util/SU.lua']=(function()

        local a={}local b,c,d=string.match,string.len,tonumber;function a.Trim(e)if c(e)==0 then return""end;return a.Ltrim(a.Rtrim(e))end;function a.Ltrim(e)local f,g=string.gsub(e,"^%s+","")return f end;function a.Rtrim(e)local f,g=string.gsub(e,"%s+$","")return f end;function a.Pad(e,h,i)if not e or not i or not h or d(i)<1 then return e end;return string.rep(h,i-e:len())..e end;function a.StartsWith(e,j)if not e or not j then return false end;return string.sub(e,1,#j)==j end;function a.EndsWith(e,k)if not e or not k then return false end;return string.sub(e,-#k)==k end;function a.RtrimChar(e,l)if not e or not l then return e end;while#e>0 and a.EndsWith(e,l)do e=string.sub(e,1,#e-#l)end;return e end;function a.SplitQuoted(e)local function m(n)return n=='"'or n=="'"end;local function o(n)return n==" "end;local function p(q,r)r=a.Trim(r)if r:len()>0 then table.insert(q,#q+1,r)end end;local s=false;local t={}if type(e)~="string"or e==""then return t end;local u=""for n in string.gmatch(e,".")do if o(n)and not s then p(t,u)u=""elseif m(n)then if s then p(t,u)u=""s=false else p(t,u)u=""s=true end else u=u..n end end;p(t,u)return t end;function a.If(v,w,x)if v then return tostring(w or"")end;return tostring(x or"")end;function a.isPrintable(l)return b(l,"[%g%s]")~=nil end;function a.SplitAndCapitalize(y,z)if not y or not a.isPrintable(z)then return y end;local t={}for A in y:gmatch("[^"..z.."]+")do table.insert(t,A)end;for B=1,#t do t[B]=t[B]:sub(1,1):upper()..t[B]:sub(2)end;return table.concat(t)end;return a

        end)

        package.preload['YFS-Tools:../util/out.lua']=(function()

        local a={}function a.PrettyDistance(b)if b<10000 then return Round(b,2).." m"end;if b<200000 then return Round(b/1000,2).." km"end;return Round(b/200000,2).." SU"end;function a.PrettyMass(c)if c>1000000 then return Round(c/1000000,2).." KT"end;if c>1000 then return Round(c/1000,2).." tons"end;return Round(c,2).." kg"end;function a.PrintLines(d)if not d then return end;if type(d)~="string"then d=tostring(d)end;for e in d:gmatch("([^\n]+)")do print(e)end end;function a.Error(f)a.PrintLines(f)return false end;function a.DeepPrint(g,h)if IsTable(g)then local i=0;h=h or 0;for j,k in pairs(g)do if IsTable(k)then P("-> "..j)a.DeepPrint(k,h)elseif type(k)=="boolean"then P(j..": "..BoolStr(k))elseif type(k)=="function"then P(j.."()")elseif k==nil then P(j.." ("..type(k)..")")else P(j..": "..tostring(k))end;i=i+1;if h>0 and i>=h then P("^:^:^:^: cutoff reached :^:^:^:^")return end end elseif type(g)=="boolean"then P(BoolStr(g))else P(g)end end;function a.DumpVar(l)local m={}local n=""local o=" "local function p(q,r)local s=type(q)local e=tostring(q)if s=="table"then if m[e]then n=n.."<"..e..">\n"else m[e]=(m[e]or 0)+1;n=n.."("..e..") {\n"for j,k in pairs(q)do n=n..string.rep(o,r+1).."["..j.."] => "p(k,r+1)end;n=n..string.rep(o,r).."}\n"end elseif s=="boolean"then n=n.."("..BoolStr(s)..")\n"elseif s=="number"then n=n.."("..s..") "..e.."\n"else n=n.."("..s..") \""..e.."\"\n"end end;p(l,0)return n end;return a

        end)

        package.preload['YFS-Tools:../util/Dtbk.lua']=(function()

        Dtbk={}Dtbk.__index=Dtbk;function Dtbk.new(a)local self=setmetatable({},Dtbk)self.DB=a;self.concat=table.concat;return self end;function Dtbk.hasKey(self,b)return self.DB.hasKey(b)end;function Dtbk.getString(self,b)return self.DB.getStringValue(b)end;function Dtbk.setString(self,b,c)self.DB.setStringValue(b,c)end;function Dtbk.setData(self,b,c)local d=json.encode(c)self.DB.setStringValue(b,d)end;function Dtbk.getData(self,b)local e=self.DB.getStringValue(b)if e==nil then return nil end;local d=json.decode(e)return d end;function Dtbk.remove(self,f)self.DB.clearValue(f)end;function Dtbk.ResetAll(self)self.DB.clear()end

        end)

        package.preload['YFS-Tools:libutils.lua']=(function()

        local a,b=tonumber,string.match;function IsTable(c)return c~=nil and type(c)=="table"end;function GetSortedAssocKeys(d)local e={}if not IsTable(d)then E("[E] Invalid object for GetSortedKeys()!")return e end;for f,g in pairs(d)do table.insert(e,f)end;table.sort(e)return e end;function Round(h,i)local j=10^(i or 0)return(h*j+2^52+2^51-(2^52+2^51))/j end;function TableLen(d)if not IsTable(d)then return 0 end;local k=0;for g in pairs(d)do k=k+1 end;return k end;function GetIndex(d,l)if not IsTable(d)then return-1 end;for f,m in pairs(d)do if l==m then return f end end;return-1 end;function GetParamValue(n,o,p,q)local r="[E] Parameter value missing for "..o;if n==nil or not IsTable(n)then if q==true then P(r)end;return nil end;for f,m in ipairs(n)do if m==o then local s=f+1;if#n<s then if q==true then P(r)end;return nil end;local t=n[s]if not p or p=="string"or p=="s"then if t=='""'or t=="''"then return nil end;return t elseif(p=="int"or p=="i")and not b(t,"%D")then return a(t)elseif p=="number"or p=="n"then return a(t)elseif p=="bool"or p=="b"then if t then return true else return false end end;return nil end end;if q==true then E(r)end;return nil end;function PairsByKeys(u,v)local w={}for x in pairs(u)do table.insert(w,x)end;table.sort(w,v)local y=0;local z=function()y=y+1;if w[y]==nil then return nil else return w[y],u[w[y]]end end;return z end;function BoolState(A)if A then return"enabled"else return"disabled"end end;function BoolStr(B)if B==true then return"true"else return"false"end end;function ScreenOutput(C,D)local F="Point at screen, CTRL+L, then copy text!"if#Config.screens>0 then local G=OutputFont or"FiraMono"local H="local text = [[\n"..C.."\n]]\n"..[[

        local rslib = require('rslib')

        local layer = createLayer()

        local rx, ry = getResolution()

        local fontSize = 15

        local font = loadFont("]]..G..[[", fontSize)

        local line = 1

        for str in text:gmatch("([^\n]+)") do addText(layer, font, str, 20, line*(fontSize+4)) line = line + 1

        end ]]Config.screens[1].setRenderScript(H)if D and D:len()then F=D.."\n"..F end else F="Hint: link a screen to PB to easily copy text from it!"end;P(F)return true end

        end)

        package.preload['YFS-Tools:commands.lua']=(function()

        local a={}local b,c,d=string.match,string.format,string.len;local e,f,g,h,i,j=tonumber,utils.clamp,math.abs,math.max,math.floor,math.ceil;local function k(l,m,altitude,n)local o=0;local p={}local q=#m;for r,s in ipairs(m)do local t=l.v[s]if t~=nil then o=o+1;local u=s..n;if o>1 then table.insert(p,u)end;table.insert(p,s)if o<q then table.insert(p,u)end;local v=PM.ReplaceAltitudeInPos(t.pos,altitude)if l.v[u]~=nil then l.v[u].pos=v else l.v[u]={pos=v}P(u.." "..v)end end end;if o==0 then P("[E] No waypoints processed!")return nil,nil end;P("[I] "..o.." waypoints at "..altitude.."m added (or changed)!")return l,p end;local function w(x,y)if not DetectedYFS or not x then return false end;YFSDB:setData(x,y)return true end;local function z(x)if not DetectedYFS or not x then return false end;local y=YFSDB:getData(x)if y==nil or not IsTable(y.v)then return false end;return y end;local function A(y)w(YFS_NAMED_POINTS,y)end;local function B(y)w(YFS_ROUTES,y)end;function a.GetYFSNamedWaypoints(C)if not DetectedYFS then return E("[E] Linked YFS databank required!")end;local D=z(YFS_NAMED_POINTS)if not D and not C then P("[I] No named waypoints")end;return D end;function a.GetYFSRoutes()if not DetectedYFS then return E("[E] Linked YFS databank required!")end;local y=z(YFS_ROUTES)if not y then return E('[I] No YFS routes found.')end;return y end;function a.PlanetInfoCmd(F)PM.PlanetInfo(F)end;function a.PrintAltitudeCmd(F)P(Out.PrettyDistance(PM.Altitude()))end;function a.PrintPosCmd(F)P(PM.GetCurrentPosString())end;function a.PrintWorldPosCmd(F)P(PM.Vec3ToPosString(PM.WorldPosVec3()))end;function a.WarpCostCmd(F)CalcWarpCost(F)end;function a.WpSaveNamedCmd(F,G)if not WM or not WM:hasPoints()then return E("[E] No waypoints to export.")end;local H=""for r,t in ipairs(WM:getSorted())do local I=t:AsString()if G then I="pos-save-as '"..t:getName().."' -pos "..I else I="/addlocation "..t:getName().." "..I end;H=H..I.."\n"P(I)end;ScreenOutput(H)end;function a.ArchSaveNamedCmd(F)a.WpSaveNamedCmd(F,false)end;function a.WpExportCmd(F)if not WM or not WM:hasPoints()then return E("[E] No waypoints to export.")end;local H=""local J=WM:getSorted()for r,t in ipairs(J)do local K=t:getName().."\n"..t:AsString().."\n"H=H..K end;P(H)ScreenOutput(H)end;function a.WpAltitudeCeilingCmd(F)local m=a.GetYFSNamedWaypoints()if not m then return end;local L=SU.SplitQuoted(F)if#L~=2 then P("[E] Parameter(s) missing: 'name 1' 'name 2'")return E("Example: /wp-altitude-ceiling 'Base 1' 'Base 2'")end;local M=L[1]local N=L[2]local O,Q=true,true;if m.v[M]==nil or m.v[M]==""then P("[E] Waypoint '"..M.."' not found.")O=false end;if m.v[N]==nil or m.v[N]==""then P("[E] Waypoint '"..N.."' not found.")Q=false end;if not O or not Q then return end;if m.v[M]==m.v[N]then return E("[E] Parameters invalid (same names).")end;local R=PM.GetAltitudeFromPos(m.v[M].pos)local S=PM.GetAltitudeFromPos(m.v[N].pos)if R==S then P("[I] Waypoints had same altitude, no changes applied.")return end;local T,U="",0;if R>S then T=N;U=R else T=M;U=S end;local v=PM.ReplaceAltitudeInPos(m.v[T].pos,U)m.v[T].pos=v;P("[I] Waypoint '"..T.."' changed to:")P(v)A(m)return true end;function a.GetStoredLocations(V)if not V or not IsTable(V)then return end;for r,W in ipairs(V)do if W.name and W.position and W.position.x and W.position.y and W.position.z then P("[I] Location '"..W.name.."' found.")local I='::pos{0,0,'..W.position.x..','..W.position.y..','..W.position.z..'}'PM.CreateWaypoint(I,W.name)end end end;function a.YfsAddAltitudeWpCmd(F)local l=a.GetYFSNamedWaypoints()if not l or not IsTable(l.v)or TableLen(l.v)==0 then return E("[E] No waypoints.")end;local X="\nExample: /yfs-add-altitude-wp -altitude 450 -suffix 'F'"local Y=SU.SplitQuoted(F)local Z=GetParamValue(Y,"-wpStartsWith","s")if#Y<1 then return E("[E] Parameter missing: -altitude"..X)end;local _=GetParamValue(Y,"-altitude","n",true)local a0=GetParamValue(Y,"-suffix","s")if not a0 or a0==""then a0="F"end;if _<-100 or _>20000 then return E("[E] -altitude value out of range (-100 .. 20000)"..X)end;local J={}for s in PairsByKeys(l.v)do if not Z or s:find(Z)>0 then table.insert(J,s)end end;local a1,p=k(l,J,_,a0)if a1~=nil and p~=nil then A(a1)end;return true end;function a.YfsBuildRouteFromWpCmd(F)local l=a.GetYFSNamedWaypoints()if not l or not IsTable(l.v)or TableLen(l.v)==0 then return E("[E] No waypoints.")end;local a2=a.GetYFSRoutes()if not a2 or not IsTable(a2.v)or TableLen(a2.v)==0 then a2={v={},t="table"}else end;local X="\nExample: /yfs-build-route-from-wp -name 'Route' -altitude 450 -wpStartsWith 'Chr' -suffix 'F'\n-suffix is optional, default F (Flight)"local Y=SU.SplitQuoted(F)if#Y<1 then return E("[E] Parameters missing!"..X)end;local a3=GetParamValue(Y,"-name","s",true)if not a3 then return end;local Z=GetParamValue(Y,"-wpStartsWith","s")local _=GetParamValue(Y,"-altitude","n",true)if not _ then return end;local a0=GetParamValue(Y,"-prefix","s")local a4=GetParamValue(Y,"-marginL","n")local a5=GetParamValue(Y,"-marginF","n")local a6=GetParamValue(Y,"-maxSpeed","n")local a7=GetParamValue(Y,"-finalSpeedF","n")a4=f(a4 or 0.1,0.1,100)a5=f(a5 or 0.1,0.1,100)a6=f(a6 or 0,0,1200)a7=f(a7 or 0,0,1200)if a2.v[a3]~=nil then return E("[E] Route "..a3 .."already exists, aborting!")end;if not type(a0)=="string"or a0==""then a0="F"end;if d(a0)>3 then return E("[E] -suffix accepts max. 3 characters"..X)end;if _<-100 or _>20000 then return E("[E] -altitude value out of range (-100 .. 20000)"..X)end;local J={}for s in PairsByKeys(l.v)do if not Z or s:find(Z)>0 then table.insert(J,s)end end;local l,a8=k(l,J,_,a0)if l==nil or a8==nil then return E("[I] No waypoints processed: no changes made.")end;a2.v[a3]={points={}}local o=0;for r,s in ipairs(a8)do local t=l.v[s]if t~=nil then o=o+1;local a9={margin=0.1,maxSpeed=0}local aa={opt=a9,pos=t.pos,waypointRef=s}if GetIndex(J,s)<1 then if a7 and a7>0 and GetIndex(J,s)<1 then aa.opt.finalSpeed=a7 end;if a6 and a6>0 then aa.opt.maxSpeed=a6 end;if a5 and a5>0.1 then aa.opt.margin=a5 end;aa.opt.selectable=false;aa.opt.skippable=false else if a4 and a4>0.1 then aa.opt.margin=a4 end;aa.opt.selectable=true;aa.opt.skippable=true end;table.insert(a2.v[a3].points,aa)end end;P("[I] "..o.." positions added to route '"..a3 .."'")A(l)B(a2)end;function a.YfsSaveRouteCmd(F)local ab=a.GetYFSRoutes()if not ab then return end;local L=SU.SplitQuoted(F)if#L<1 then return E("[E] Parameter(s) missing: routename\nExample: /yfs-save-route 'Cryo' -onlySelectable -withOptions -prefix 'Cryo'")end;local ac=GetParamValue(L,"-prefix","s")if not ac then ac="WP"end;local ad=GetIndex(L,"-onlySelectable")>0;local ae=GetIndex(L,"-withOptions")>0;local af=L[1]local ag=ab.v[af]if not ag or not IsTable(ag.points)or#ag.points==0 then return E("[E] Route '"..af.."' not found or empty")end;local ah,ai="create-route '"..af.."'\r\n",""local l=a.GetYFSNamedWaypoints()local aj=1;local ak={}for r,al in ipairs(ag.points)do local am=""local an=ac.." "..c("%03d",aj)if al.waypointRef and l then an=al.waypointRef;am=l.v[an].pos else am=al.pos or"<unknown>"end;if GetIndex(ak,an)<0 then ak[#ak+1]=an;local ao="pos-save-as '"..an.."' -pos "..am;ah=ah..ao.."\n"end;if not ad or al.opt["selectable"]~=false then local ao="route-add-named-pos '"..an.."'"if ae then if al.opt["maxSpeed"]and al.opt["maxSpeed"]~=0 then ao=ao.." -maxspeed "..al.opt["maxSpeed"]end;if al.opt["margin"]and al.opt["margin"]~=0.1 then ao=ao.." -margin "..al.opt["margin"]end;local ap=false;local aq=""if al.opt["skippable"]==true then ap=true;aq=aq.." -toggleSkippable"end;if al.opt["selectable"]==false then ap=true;aq=aq.." -toggleSelectable"end;if al.opt["finalSpeed"]and al.opt["finalSpeed"]~=0 then ap=true;aq=aq.." -finalSpeed "..al.opt["finalSpeed"]end;if ap then ao=ao.."\nroute-set-pos-option -ix "..aj..aq end end;ai=ai..ao.."\n"aj=aj+1 end end;ai=ai.."route-save\r\n"P(ah..ai)ScreenOutput(ah..ai)end;function a.YfsReplaceWpCmd(F)local m=a.GetYFSNamedWaypoints()if not m then return end;local ar="\r\nExample: /yfs-replace-wp 'base 1'"local as=SU.SplitQuoted(F)if#as<1 then return E("[E] Parameter(s) missing: -name 'point'"..ar)end;local an=GetParamValue(as,"-name","s",true)if not an then return end;if not m.v[an]or m.v[an]==""then return E("[E] Waypoint '"..an.."' not found."..ar)end;local v=PM.GetCurrentPosString()local at=GetParamValue(as,"-pos","s")if at then local ao=PM.SplitPos(at)if not ao then return E("[E] Invalid ::pos{} specified!")end;v=at end;m.v[an].pos=v;P("[I] Waypoint '"..an.."' changed to:")P(v)A(m)return true end;function a.YfsRouteAltitudeCmd(F)local ab=a.GetYFSRoutes()if not ab then return end;local D=a.GetYFSNamedWaypoints()if not D then return end;local X="\nExample:\n/yfs-route-altitude -route 'name' -ix 2 -endIx 3 -alt 330\nThe -endIx is optional."local L=SU.SplitQuoted(F)local a3=GetParamValue(L,"-route","s",true)if not a3 then return end;if not ab.v[a3]then return E("[E] Route '"..a3 .."' not found."..X)end;if not ab.v[a3].points or#ab.v[a3].points==0 then return E("[E] Route '"..a3 .."' empty.")end;local Z=GetParamValue(L,"-ix","i",true)local au=GetParamValue(L,"-endIx","i")local _=GetParamValue(L,"-alt","n",true)local av=not a3 or not Z or not _ or Z<1 or au and au<Z or _<-100 or _>10000;if av then return E("[E] Wrong number of parameters / invalid values!"..X)end;if not au or au<Z then au=Z end;P("[I] Processing route '"..a3 .."'")local aw=0;local m={}for ax,al in ipairs(ab.v[a3].points)do if ax>=Z and ax<=au then local an=al.waypointRef;local t=D.v[an]if t~=nil then if GetIndex(m,an)<1 then table.insert(m,an)end;local v=PM.ReplaceAltitudeInPos(t.pos,_)ab.v[a3].points[ax].pos=v;P("[I] Route Waypoint '"..an.."' changed to:\n"..v)end end end;if#m==0 then return E("[I] No waypoints in route changed.\n[*] Make sure that start (and end-index) are valid.")end;B(ab)P("[I] Routes saved.")aw=0;for r,ay in ipairs(m)do if D.v[ay]then aw=aw+1;local v=PM.ReplaceAltitudeInPos(D.v[ay].pos,altitude)D.v[ay].pos=v;P("[I] Named Waypoint '"..ay.."' changed to:")P(v)else P("[E] '"..ay.."' not found!")end end;if aw>0 then A(D)P("[I] Named waypoints saved.")end end;function a.YfsWpAltitudeCmd(F)local m=a.GetYFSNamedWaypoints()if not m then return E("[E] No named waypoints.")end;local L=SU.SplitQuoted(F)if#L~=2 then return E("[E] Wrong number of parameters!\nExample: /yfs-wp-altitude 'Base 1' 324.12")end;local a3=L[1]or""if not a3 or not L[2]or not m.v[a3]or m.v[a3]==""then return E("[E] Waypoint '"..a3 .."' not found")end;local _=e(L[2]or 0)local v=PM.ReplaceAltitudeInPos(m.v[a3].pos,_)m.v[a3].pos=v;P("[I] Waypoint '"..a3 .."' changed to:")P(v)P("[I] Note: routes' waypoints are updated on route activation, i.e. exporting route data before activation may still show old value!")A(m)return true end;function a.YfsRouteNearestCmd(F)local ab=a.GetYFSRoutes()if not ab then return end;local as=SU.SplitQuoted(F)if#as==0 or#as>2 then P("[E] Wrong parameter count\n[I] Example: /yfs-route-nearest 'Route 1'")P("\nOptional parameter:\n")P("-onlySelectable -> only show closest, selectable waypoints in route")return false end;local az=as[1]local ag=ab.v[az]if not ag or not IsTable(ag.points)then return E("[E] Route '"..az.."' not found or empty")end;P("[I] Route '"..az.."' found.")local ad=GetIndex(as,"-onlySelectable")>0;local J=a.GetYFSNamedWaypoints(true)local aA=0;local aB=999999999;local aC,aD="",""local aE={}for s,al in ipairs(ag.points)do aA=aA+1;if not ad or al.opt and al.opt.selectable~=false then local aF=SU.Trim(c("%02d",aA)..": '"..(al.waypointRef or"").."'")local I=al.pos;if al.waypointRef and J then I=J.v[al.waypointRef].pos end;local aG=PM.GetDistance(I)if aG>0.1 then ag.points[s].distance=aG;aC=aF.." = "..c("%.4f",aG)if aG<aB then aD=aC;aB=aG end;local aH=tostring(math.modf(aG*10000))local aI=('0'):rep(12-#aH)..aH;aE[aI]=aA end end end;if not aA then return E("[I] No selectable waypoints found.")end;local H="Route-Idx / Name / Distance (m)\n"for r,aI in pairs(GetSortedAssocKeys(aE))do local aJ=aE[aI]local an=ag.points[aJ].waypointRef;local aK=ag.points[aJ].distance;H=H..c("%02d",aJ).." / '"..an.."' / "H=H..Out.PrettyDistance(aK).."\n"end;H=H.."\n[I] Nearest waypoint: "..aD;Out.PrintLines(H)ScreenOutput(H)end;function a.YfsRouteToNamedCmd(F)local ab=a.GetYFSRoutes()if not ab then return end;local as=SU.SplitQuoted(F)if#as==0 or#as>6 then P("[E] Wrong parameter count\n[I] Example: /yfs-route-to-named 'Route 1'\nOptional parameters:\n")P("-onlySelectable -> only write waypoints marked as selectable in route")P("-prefix Myprefix -> if unspecified, 'WP' is default")P("-toScreen -> output JSON of list to optional screen if linked")P("-toDB -> only if this is given, the changed list will be written to DB to avoid miscalls")P("Important: command aborts if ANY waypoint's name starts with given prefix to avoid errors!")return false end;local az=as[1]local ag=ab.v[az]if not ag or not IsTable(ag.points)then return E("[E] Route '"..az.."' not found or empty")end;P("[I] Route '"..az.."' found.")local aL=GetIndex(as,"-toDB")>0;local aM=GetIndex(as,"-toScreen")>0;local ad=GetIndex(as,"-onlySelectable")>0;local ac=GetParamValue(as,"-prefix","s")if not ac then ac="WP"end;local J=a.GetYFSNamedWaypoints(true)if not J or not J.v then J={v={}}else for s,r in pairs(J.v)do if string.find(s,ac)==1 then return E("[!] Waypoints with same prefix already exist!\n[!] Command aborted.")end end end;local aA=0;for r,al in ipairs(ag.points)do if not ad or al.opt and al.opt.selectable~=false then aA=aA+1;local aF=ac.." "..c("%02d",aA)local t={pos=al.pos,opt=al.opt}J.v[aF]=t;P(aF.." "..al.pos)end end;if not aA then return E("[I] No changes to waypoints done")end;if aL then A(J)P("[I] Waypoint changes saved to databank!")else P("[I] -toDB not present, no changes saved to databank!")end;if aM then ScreenOutput(json.encode(J.v))end end;function a.YFSLoadNamedWaypoints()local m=a.GetYFSNamedWaypoints()if not m then return end;for s,al in pairs(m.v)do PM.CreateWaypoint(al.pos,s)end end;function a.YFSLoadRoutepoints(aN,aO)local ab=a.GetYFSRoutes()if not ab then return false end;P('[I] Processing routes...')for s,al in pairs(ab.v)do if(aO==""or aO==s)and IsTable(al)then for aP,aQ in ipairs(al.points)do if not aN or aQ.opt["selectable"]~=false then local an=s.." "..aP;if aQ.waypointRef then an=aQ.waypointRef end;PM.CreateWaypoint(aQ["pos"],an)end end;P("[I] Route '"..s.."' read.")end end;return true end;function a.YfsSaveNamedCmd(F)a.WpSaveNamedCmd(F,true)end;function a.PosDataCmd()P("getCameraHorizontalFov: "..system.getCameraHorizontalFov())P("getCameraVerticalFov: "..system.getCameraVerticalFov())P("getCameraPos: "..PM.Vec3String(system.getCameraPos()))P("getCameraForward: "..PM.Vec3String(system.getCameraForward()))P("getCameraRight: "..PM.Vec3String(system.getCameraRight()))P("getCameraUp: "..PM.Vec3String(system.getCameraUp()))P("getCameraWorldPos: "..PM.Vec3String(system.getCameraWorldPos()))P("getCameraWorldForward: "..PM.Vec3String(system.getCameraWorldForward()))P("getCameraWorldRight: "..PM.Vec3String(system.getCameraWorldRight()))P("getCameraWorldUp: "..PM.Vec3String(system.getCameraWorldUp()))P("construct.getWorldPosition: "..PM.Vec3String(construct.getWorldPosition(CNID)))P("construct.getOrientationForward: "..PM.Vec3String(construct.getOrientationForward()))P("construct.getOrientationRight: "..PM.Vec3String(construct.getOrientationRight()))P("construct.getOrientationUp: "..PM.Vec3String(construct.getOrientationUp()))end;function a.DumpPointsCmd()if true then P("~=~=~=~=~=~=~= DUMP START ~=~=~=~=~=~=")local ao=Out.DumpVar(WM:getWaypointsInst())P(ao)return ScreenOutput(ao or"[I] No waypoints.","\n~=~=~=~=~=~=~= DUMP END ~=~=~=~=~=~=~=")end end;function a.DumpRoutesCmd()if not DetectedYFS then return E("[I] No YFS databank.")end;P("~=~=~=~=~=~=~= ROUTES DUMP START ~=~=~=~=~=~=")local ao=YFSDB:getString(YFS_ROUTES)P(ao)ScreenOutput(ao or"[I] No routes.","\n~=~=~=~=~=~=~= ROUTES DUMP END ~=~=~=~=~=~=~=")end;function a.RoutesCmd()local ab=a.GetYFSRoutes()if not ab then return end;P("[I] Available routes:")for s,r in pairs(ab.v)do P(s)end end;function a.YfsTestDataCmd(aR)if not(aR=="TESTING")then return end;P("[*] Creating YFS test data...")YFSDB:remove(YFS_NAMED_POINTS)local y={}y["Chr 01"]={pos="::pos{0,7,-20.7784,-153.7402,360.5184}",opt={}}y["Chr 02"]={pos="::pos{0,7,-21.3610,-152.3447,345.8787}",opt={}}y["Chr 03"]={pos="::pos{0,7,-23.0540,-152.8934,360.6677}",opt={}}y["Chr 04"]={pos="::pos{0,7,-22.4445,-154.3119,320.1029}",opt={}}y["Chr 05"]={pos="::pos{0,7,-20.5370,-154.7507,308.0151}",opt={}}y["Chr 06"]={pos="::pos{0,7,-21.6295,-155.1465,292.7660}",opt={}}y["Chr Hub"]={pos="::pos{0,7,-21.9903,-153.1008,391.4632}",opt={}}local ao={v=y,t=type(y)}A(ao)YFSDB:remove(YFS_ROUTES)local aS={}B({v=aS,t=type(aS)})P("[*] YFS test data saved!")a.DumpPointsCmd()a.DumpRoutesCmd()end;function a.ConversionTestCmd(aR)PM.ConversionTest()end;function a.XCmd()end;return a

        end)

        package.preload['YFS-Tools:help.lua']=(function()

        local a={}function a.PrintHelpCmd()local b="~~~~~~~~~~~~~~~~~~~~\nYFS-Tools Commands:\n~~~~~~~~~~~~~~~~~~~~\n".."/arch-save-named\n-> Builds list of chat commands for ArchHud to add locations for all named waypoints.\n".."/planetInfo (id or name)\n-> Info about current planet or for passed planet id or name, e.g. 2 for Alioth).\n".."/printAltitude /printPos /printWorldPos\n-> Prints info data.\n".."/warpCost -from name/::pos{}/planets -to name/::pos{}/planets -mass tons -moons\n-> Flexible warp cell calculator.\n".."/wp-altitude-ceiling\n-> Changes a waypoint to have the higher altitude of both.\n".."/wp-export\n-> Outputs list of plain waypoints to chat and an optional screen. Source can include ArchHud locations, too, if databank linked.\n".."/yfs-add-altitude-wp\n-> Adds waypoints for each existing WP at a specified altitude and name suffix.\n".."/yfs-build-route-from-wp\n-> Powerful route-building command based on existing named waypoints.\n".."/yfs-route-altitude\n-> Changes altitude for a range of waypoints of a specific YFS route.\n".."/yfs-route-nearest\n-> Show list of route waypoints by distance from current location.\n".."/yfs-route-to-named\n-> Converts a route's *unnamed* waypoints to named waypoints for YFS.\n".."/yfs-save-named\n-> Builds list of YFS commands to recreate all named waypoints.\n".."/yfs-save-route\n-> Builds list of YFS commands to recreate full route incl. named waypoints and their options.\n".."/yfs-wp-altitude\n-> Changes altitude of a named waypoint to specified altitude.\n".."----------------------------------\n".."Important: Enclose names (as parameters) in single quotes if they contain blanks!\n".."*** DO NOT USE COMMANDS THAT CHANGE POINTS ***\n*** OR ROUTES WHILE YFS IS RUNNING! ***\n"ScreenOutput(b)P(b)end;return a

        end)

        package.preload['YFS-Tools:warpcost.lua']=(function()

        local a,b,c=string.match,string.format,string.len;local d,e,f,g,h,i=tonumber,utils.clamp,math.abs,math.max,math.floor,math.ceil;function CalcWarpCost(j)local k="\nExample 1:\n/warpCost -from Madis -to Alioth -mass 534".."\nExample 2:\n/warpCost -from Alioth -to planets -moons".."\nOptional '-from x' with x being either 'here', a planet name, ::pos{} or 'planets' (multi-result).".."\nOptional '-to x' like -from, but for end location.".."\nOptional '-mass x' with x the total mass in tons. If not given, the current constructs' total mass is used.".."\nOptional '-cargo x' with x the cargo mass in tons. If specified, a cell count for a return trip is calculated, too.".."\nOptional '-moons' only together with 'planets' to also include moons in the list.".."\n- One of -from or -to can be left out, then the current construct's location (or planet) is used.".."\n- If construct is landed on a planet or moon, the Atlas specified warp altitude is the starting point.".."\n- Enclose names in single-quotes if they contain spaces!"local l=construct.getMass;local m,n={},false;local o,p="~~~ WARP CELL CALCULATOR ~~~",""local function q(r,s,t)local u,v,w={},false,0;local x=GetParamValue(r,s,"s")if not x or x==""or x=="here"then u=PM.WorldPosVec3()if n and m then w=2*m.radius;x=m.name[1]u=vec3(m.center)else w=12;x=PM.Vec3ToPosString(u)end elseif x=="planets"then v=true elseif x>""then if SU.StartsWith(x,"::pos{")then w=12;u=PM.MapPosToWorldVec3(x)else local y=PM.PlanetByName(x)if y then w=2*y.radius;u=vec3(y.center)end end end;return{parm=x,v=u,isP=v,offset=w}end;local r=SU.SplitQuoted(j)if#r<1 then return E("[E] Parameter(s) missing!"..k)end;local z=GetIndex(r,"-moons")>0;local A=0;m=PM.GetClosestPlanet(PM.WorldPosVec3())if m then A=2*m.radius;n=PM.Altitude()<A;if n then p="Current"else p="Nearest"end;o=o.."\n"..p.." planet: "..m.name[1]else o=o.."\n[I] No planet nearby!"end;local B=50000;local C=l(CNID)/1000;local D,F=0,false;if GetIndex(r,"-cargo")>0 then local G=GetParamValue(r,"-cargo","n")G=G or 0;if G>0 then D=e(G,0,B)F=D>0 else return E(o.."\n[E] Invalid -cargo value, must be in range of 1-50000 tons!")end end;local H=GetParamValue(r,"-mass","n")p="Mass: "if H then C=d(H)else p="Construct "..p end;o=o.."\n"..p..Out.PrettyMass(C*1000)if F then o=o.." ~*~ Cargo: "..Out.PrettyMass(D*1000)end;if C<100 then return E(o.."\n[E] Impossibly low mass for a warp ship! ;)")elseif C>B then return E(o.."\n[E] I don't accept you're warping that heavy! ;)")end;local I=q(r,"-from",true)if not I.isP and not I.v then return E(o.."\n[E] Invalid starting location!")end;local J=q(r,"-to",false)if not J.isP and not J.v then return E(o.."\n[E] Invalid end location!")end;if I.isP and J.isP then return E(o.."\n[E] Only one 'planets' option supported!")end;if I.parm==J.parm or I.v==J.v then return E(o.."\n[E] Start and end locations must be different!")end;local function K(L,M,N,O,Q)local R=""if L>""then R=R..L end;if L>""and M>""then R=R.." to "end;if M>""then R=R..M end;R=R.." ("..Out.PrettyDistance(N)..")"if N<200000 then return R.." -> too short!"elseif N>100000000 then return R.." -> too far!"end;local S=PM.ComputeCells(N,O)R=R.." = "..S.." cell"..SU.If(S>1,"s")if F then local T=PM.ComputeCells(N,O-Q)R=R.." / "..T.." cell"..SU.If(S>1,"s").." = "..S+T.." total"end;return R end;if not I.isP and not J.isP then local N=f(vec3(I.v-J.v):len())-I.offset-J.offset;local U=K(I.parm,J.parm,N,C,D)if type(U)=="string"then o=o.."\n"..U;P(o)ScreenOutput(o)else E("[E] Sorry, something went wrong :(")end;return end;local V,W=nil,nil;p=" (Distance) / Cells"..SU.If(F," / Return w/o cargo")if I.isP then o=o.."\nTo: "..J.parm.."\nFrom"..p else o=o.."\nFrom: "..I.parm.."\nTo"..p end;for X,u in pairs(WaypointInfo[0])do if not u.isAsteroid and(z or not u.isMoon)then A=2*u.radius;if I.isP then I.parm=u.name[1]I.v=vec3(u.center)A=A+J.offset else J.parm=u.name[1]J.v=vec3(u.center)A=A+I.offset end;local N=f(vec3(I.v-J.v):len())-A;if N>100000 then o=o.."\n"..K(SU.If(I.isP,I.parm),SU.If(J.isP,J.parm),N,C,D)end end end;P(o)ScreenOutput(o)end

        end)

        package.preload['YFS-Tools:../util/wpoint.lua']=(function()

        local a,b,c=tonumber,string.len,string.match;Waypoint={mapPos={},name="",parent=nil}Waypoint.new=function(d)local e=setmetatable({parent=d,name="",mapPos={systemId=0,id=0,latitude=0.0,longitude=0.0,altitude=0.0}},{__index=Waypoint})return e end;Waypoint.get=function(self)return self.mapPos end;Waypoint.getPosPattern=function()local f=' *([+-]?%d+%.?%d*e?[+-]?%d*)'return'::pos{'..f..','..f..','..f..','..f..','..f..'}'end;Waypoint.set=function(self,g)if type(g)=="string"and b(g)<16 then print("[E] Invalid position: "..g)return{}end;if type(g)=="string"then local h,i,j,k,l=c(g,self.getPosPattern())if h then self.mapPos.systemId=a(h)self.mapPos.id=a(i)self.mapPos.latitude=a(j)self.mapPos.longitude=a(k)self.mapPos.altitude=a(l)else print(g.." - Invalid string format. Use '::pos{s, p, x, y, z}'.")end elseif type(g)=="table"and#g==3 then self.mapPos.latitude=a(g[1])self.mapPos.longitude=a(g[2])self.mapPos.altitude=a(g[3])elseif type(g)=="table"and#g==5 then self.mapPos.systemId=a(g[1])self.mapPos.id=a(g[2])self.mapPos.latitude=a(g[3])self.mapPos.longitude=a(g[4])self.mapPos.altitude=a(g[5])elseif type(g)=="table"and g.x and g.y and g.z then self.mapPos.systemId=0;self.mapPos.id=0;self.mapPos.latitude=a(g.x)self.mapPos.longitude=a(g.y)self.mapPos.altitude=a(g.z)else print("Invalid input. Provide a ::pos{} string, vec3() or {s,p,x,y,z} table.")end;return self end;Waypoint.setName=function(self,m)if m==nil then self.name=""return end;if type(m)=="string"and m:gmatch("^%a[%w_- ]*$")then self.name=m else print(tostring(m).."\n[E] WP: Invalid name format. Should only contain printable characters.")end;return self end;Waypoint.getName=function(self)return self.name end;Waypoint.getAltitude=function(self)return self.mapPos.altitude end;Waypoint.AsString=function(self)return string.format("::pos{%d, %d, %.4f, %.4f, %.4f}",self.mapPos.systemId,self.mapPos.id,self.mapPos.latitude,self.mapPos.longitude,self.mapPos.altitude)end;Waypoint.__Waypoint=function(self)return true end

        end)

        package.preload['YFS-Tools:../util/wpointmgr.lua']=(function()

        local a,b,c=tonumber,string.len,string.match;WaypointMgr={name="",waypoints={}}WaypointMgr.add=function(self,d,e)if d.__Waypoint and d.__Waypoint()then if d.name and d.name~=""then for f,g in ipairs(self.waypoints)do if g.name==d.name then return nil end end end;local h=1+#self.waypoints;if e then if e<1 or e>h then print("[E] Invalid index. Must be in the range 1 to "..h)return nil end;d.parent=self;table.insert(self.waypoints,e,d)else d.parent=self;table.insert(self.waypoints,h,d)end;return d else print("[E] Invalid waypoint parameter!")return nil end end;WaypointMgr.getWaypointsData=function(self)local i={}for j,g in ipairs(self.waypoints)do table.insert(i,j,g:get())end;return i end;WaypointMgr.getWaypointsInst=function(self)return self.waypoints end;WaypointMgr.getCount=function(self)return#self.waypoints end;WaypointMgr.getSorted=function(self)local k={}for f,g in pairs(self.waypoints)do table.insert(k,g)end;table.sort(k,function(l,m)return l.name<m.name end)return k end;WaypointMgr.moveUp=function(self,e)local n=#self.waypoints;if e and e>1 and e<=n then self.waypoints[e],self.waypoints[e-1]=self.waypoints[e-1],self.waypoints[e]end end;WaypointMgr.moveDown=function(self,e)local n=#self.waypoints;if e and e>=1 and e<n then self.waypoints[e],self.waypoints[e+1]=self.waypoints[e+1],self.waypoints[e]end end;WaypointMgr.removeByName=function(self,o)for p,d in ipairs(self.waypoints)do if d.name==o then local q=table.remove(self.waypoints,p)return q end end;return nil end;WaypointMgr.hasPoints=function(self,r)return#self.waypoints>0 end;WaypointMgr.exists=function(self,r)for f,g in ipairs(self.waypoints)do if type(r)=="string"and g.name==r then return g elseif r and r.__Waypoint and Waypoint.__Waypoint()then if g==r then return g end elseif type(r)=="table"and#r==5 then if g.mapPos.systemId==a(r[1])and g.mapPos.id==a(r[2])and g.mapPos.latitude==a(r[3])and g.mapPos.longitude==a(r[4])and g.mapPos.altitude==a(r[5])then return g end end end;return nil end;WaypointMgr.getName=function(self)return self.name end;WaypointMgr.new=function(s)local t=setmetatable({waypoints={},name=s or""},{__index=WaypointMgr})return t end;return WaypointMgr

        end)

        package.preload['YFS-Tools:libmain.lua']=(function()

        SU=require('YFS-Tools:../util/SU.lua')Out=require('YFS-Tools:../util/out.lua')P=Out.PrintLines;E=Out.Error;require('YFS-Tools:../util/Dtbk.lua')require('YFS-Tools:libutils.lua')Cmd=require('YFS-Tools:commands.lua')Help=require('YFS-Tools:help.lua')require('YFS-Tools:warpcost.lua')require('YFS-Tools:../util/wpoint.lua')WM=require('YFS-Tools:../util/wpointmgr.lua').new("MAIN")

        end)

        package.preload['YFS-Tools:../util/pos.lua']=(function()

        local a,b,c,d,e,f,g,h,i,j=math.max,math.cos,math.acos,math.deg,math.sin,math.abs,math.atan,math.ceil,math.floor,math.pi;local k,l,m,n=tonumber,string.len,string.match,string.format;local o,vec3=utils.clamp,vec3;local p={}p.__index=p;function p.New(q,r,s)local t={core=q,construct=r,Alioth1G=9.891,waypointNames={},waypointCount=0,planetNames={},p={},pIdx=0,wm=s}local function u(v,w)if v==0 then return f(w)<1e-09 elseif w==0 then return f(v)<1e-09 else return f(v-w)<math.max(f(v),f(w))*epsilon end end;local function x()return t.construct~=nil end;local function y()return t.core~=nil end;function p.ComputeCells(z,A)return h(a(i(A*i(z/1000/200)*0.00024),1))end;function p.GetPosPattern()local B=' *([+-]?%d+%.?%d*e?[+-]?%d*)'return'::pos{'..B..','..B..','..B..','..B..','..B..'}'end;function p.GetWaypointCount()return t.wm:getCount()end;function p.SplitPos(posStr)if type(posStr)~="string"then P("[E] Invalid position: "..type(posStr))return nil end;if l(posStr)<16 or not m(posStr,"^::pos{")then P("[E] Invalid position: "..posStr)return nil end;local C,D,F,G,H=m(posStr,p.GetPosPattern())return{systemId=k(C),id=k(D),latitude=k(F),longitude=k(G),altitude=k(H)}end;function p.GetAltitudeFromPos(I)local J=p.SplitPos(posStr)if J and J.altitude then return J.altitude end;return 0 end;function p.GetPlanetFromPos(posStr)local J=p.SplitPos(posStr)if J and J.id and J.id>0 then return J.id end;return 0 end;function p.GetAtlasPlanet(K)if not K or not WaypointInfo[0]or not WaypointInfo[0][k(K)]then return nil end;return WaypointInfo[0][k(K)]end;function p.GetClosestPlanetId(L)local M,N=0,0;local O=math.huge;for Q,R in pairs(WaypointInfo[0])do N=(L-vec3(R.center)):len()if N<O then O=N;M=Q end end;return M end;function p.GetClosestPlanet(L)local K=p.GetClosestPlanetId(L)return p.GetAtlasPlanet(K)end;function p.GetCurrentPosString()local R=p.WorldPosVec3()return p.MapPos2String(p.WorldToMapPos(R))end;function p.MapPos2String(S)if type(S)~="table"then return""end;return'::pos{'..(S.systemId or 0)..','..(S.id or 0)..','..n("%.4f",S.latitude or 0)..','..n("%.4f",S.longitude or 0)..','..n("%.4f",S.altitude or 0)..'}'end;function p.Vec3ToPosString(T)if type(T)~="table"then return""end;return'::pos{0,0,'..n("%.4f",T.x or 0)..','..n("%.4f",T.y or 0)..','..n("%.4f",T.z or 0)..'}'end;function p.Vec3String(T)if type(T)~="table"then return""end;T=vec3(T)return n("%.4f",T.x or 0)..', '..n("%.4f",T.y or 0)..', '..n("%.4f",T.z or 0)end;function p.ReplaceAltitudeInPos(posStr,U)local J=p.SplitPos(posStr)if not J or not J.altitude or not U then return posStr end;J.altitude=k(U)return p.MapPos2String(J)end;function p.PlanetId()if not y()then return 0 end;if not INGAME then return 2 end;return t.core.getCurrentPlanetId()end;function p.WorldPosVec3()if not INGAME then return{x=-25140.37011013,y=100812.26194182,z=-52412.710373821}end;if x()then return vec3(construct.getWorldPosition())end;if y()then return vec3(core.getWorldPosition())end;return nil end;function p.Altitude()local J=p.GetAtlasPlanet(p.PlanetId())if not J or not J.center then return 0 end;return(p.WorldPosVec3()-vec3(J.center)):len()-(J.radius or 0)end;function p.GetDistance(posStr,V)local W=p.WorldPosVec3()if type(V)=="string"then W=p.MapPosToWorldVec3(V)elseif type(V)=="table"then W=vec3(V)end;local X=p.MapPosToWorldVec3(posStr)local N=vec3(X-W):len()return N end;function p.World2local(Y,Z,_)local a0=t.construct.getWorldOrientationUp()local a1=t.construct.getWorldOrientationForward()local a2=t.construct.getWorldOrientationRight()local a3,a4,a5=a0[1],a0[2],a0[3]local a6,a7,a8=a1[1],a1[2],a1[3]local a9,aa,ab=a2[1],a2[2],a2[3]local R=library.systemResolution3({a9,aa,ab},{a6,a7,a8},{a3,a4,a5},{Y,Z,_})return R[1],R[2],R[3]end;function p.WorldToMapPos(R)local ac=p.GetClosestPlanet(R)if not ac or not ac.center or not ac.radius then return{systemId=0,id=0,latitude=R.x,longitude=R.y,altitude=R.z}end;local ad=R-vec3(ac.center)local N=ad:len()local H=N-ac.radius;local ae=0;local af=0;if not u(N,0)then local ag=g(ad.y,ad.x)af=ag or 2*j+ag;ae=j/2-c(ad.z/N)end;return{latitude=d(ae),longitude=d(af),altitude=H,id=ac.systemId,systemId=ac.id}end;function p.PlanetByName(ah)if type(ah)~="string"or ah==""then return nil end;ah=ah:lower()if t.planetNames[ah]then local K=k(t.planetNames[ah])return WaypointInfo[0][K]end;return nil end;function p.MapPosToWorldVec3(posStr)local J=p.SplitPos(posStr)if not J or not J.systemId then return nil end;if J.systemId==0 and J.id==0 then return vec3(J.latitude,J.longitude,J.altitude)end;if not WaypointInfo[J.systemId]then return nil end;local ai=WaypointInfo[J.systemId][J.id]local F=constants.deg2rad*o(J.latitude,-90,90)local aj=constants.deg2rad*(J.longitude%360)local ak=b(F)local al=vec3(ak*b(aj),ak*e(aj),e(F))return vec3(ai.center)+(ai.radius+J.altitude)*al end;function p.PlanetInfo(am)local K=nil;if type(am)=="string"and am:len()==0 then am=p.GetClosestPlanetId(p.WorldPosVec3())end;if type(am)=="string"and t.planetNames[am:lower()]then K=k(t.planetNames[am:lower()])elseif type(am)=="number"and k(am)>0 then K=k(am)end;if K==nil then return E("[E] No valid planet name or id specified!")end;local J=p.GetAtlasPlanet(K)if not J or type(J.name)~="table"then return E("[E] No planet found!")end;P"~~~~~~~~ PLANET INFO ~~~~~~~~"if am==''then P("Hint: '/planetInfo 2' for Alioth")end;P("Name: "..J.name[1].." (Id: "..J.id..")")P("Center: "..J.center[1].." / "..J.center[2].." / "..J.center[3])P("Radius: "..(J.radius or 0).."m")local an=""if J.gravity and J.gravity>0 then an=" ("..n("%.1f",J.gravity/t.Alioth1G).." g)"end;P("Gravity: "..(J.gravity or 0)..an)if J.satellites and#J.satellites>0 then P("Has Moons: "..#J.satellites)end;P("Surface Min Alt.: "..(J.surfaceMinAltitude or 0).."m")P("Surface Max Alt.: "..(J.surfaceMaxAltitude or 0).."m")P("Max Static Alt.: "..(J.maxStaticAltitude or"").."m")P("Has atmosphere: "..BoolStr(J.hasAtmosphere))if J.hasAtmosphere then P("Atmo Thickness: "..(J.atmosphereThickness or 0).."m")P("Atmo altitude: "..(J.atmoAltitude or 0).."m")P("Atmo 10%: "..(J.atmo10 or 0).."m")end;P("Is in Safe Zone: "..BoolStr(J.isInSafeZone))P"~~~~~~~~~~~~~~~~~~~~~~~~~~~"end;function p.CreateWaypoint(I,ao)if not t.wm or not ao or ao==''or t.waypointNames[ao]then return false end;local J=p.SplitPos(I)if not J or not J.systemId then return false end;local ap={J.latitude,J.longitude,J.altitude}if J.id==0 then local aq=p.WorldToMapPos(vec3(ap))if aq and aq.id and aq.id>0 then J.latitude=aq.latitude;J.longitude=aq.longitude;J.altitude=aq.altitude;J.id=aq.id;J.systemId=aq.systemId;I=p.MapPos2String(J)end else local R=p.MapPosToWorldVec3(I)ap={R.x,R.y,R.z}end;local ar=Waypoint:new(t.wm):setName(ao):set(I)if not ar or ar=={}then return false end;if t.wm:exists(ar)then return false end;return t.wm:add(ar)end;function p.ConversionTest()local as="::pos{0,2,35.5118,104.0375,285.3076}"local at=p.MapPosToWorldVec3(as)P("HQ local to world:\n"..as.." =")P(p.Vec3ToPosString(at))local au=p.WorldToMapPos(at)Out.DeepPrint(au)P("World to local (should show same as above):")P(p.MapPos2String(au))local ar="::pos{0,0,-24955.2183,99771.5731,-52908.1353}"if p.CreateWaypoint(ar,"WorldPos")then P("Added 'WorldPos' waypoint")else P("Failed to add test waypoint!")end end;local function av()t.pIdx=0;t.p=p.GetAtlasPlanet(p.PlanetId())if t.p then t.pIdx=t.p.id end;if not WaypointInfo[0]then return end;t.planetNames={}for Q,R in pairs(WaypointInfo[0])do t.planetNames[R.name[1]:lower()]=Q;WaypointInfo[0][Q].biosphere=nil;WaypointInfo[0][Q].classification=nil;WaypointInfo[0][Q].description=nil;WaypointInfo[0][Q].habitability=nil;WaypointInfo[0][Q].ores=nil;if R.hasAtmosphere then local aw=R.atmosphereRadius-R.radius;WaypointInfo[0][Q].atmoAltitude=aw;WaypointInfo[0][Q].atmo10=aw*0.9 end;WaypointInfo[0][Q].isAsteroid=WaypointInfo[0][Q].type[1]=="Asteroid"WaypointInfo[0][Q].isMoon=WaypointInfo[0][Q].type[1]=="Moon"WaypointInfo[0][Q].isPlanet=WaypointInfo[0][Q].type[1]=="Planet"end;if t.wm then P("[I] WaypointMgr assigned: "..t.wm:getName())else P("[E] NO WaypointMgr assigned!")end end;av()return setmetatable(t,p)end;return p

        end)

        package.preload['YFS-Tools:startup.lua']=(function()


        local onlyForRoute=""--export: Load waypoints only for this route (enclosed in double quotes!)


        local onlySelectableWP=true--export: Check to only display custom route waypoints that are marked as selectable


        local loadWaypoints=true--export: Enable to load custom waypoints from databank


        local outputFont="FiraMono"--export: Name of font used for screen output. Default: "FiraMono"

        onlyForRoute=onlyForRoute or""OutputFont=outputFont or"FiraMono"P("=========================================")P("YFS-Tools 1.5.1 (unofficial)")P("created by tobitege (c) 2023")P("Thanks to Yoarii (SVEA) for YFS and LUA help!")P("YFS 1.4+ databank link required (Routes).")P("=========================================")P("* WARNING: do not run commands that change")P("* waypoints/routes while YFS runs!")P("=========================================")P("LUA parameter(s):")P("Load waypoints from databank: "..BoolStr(loadWaypoints))P("Only waypoints for route: "..onlyForRoute)P("Only selectable waypoints: "..BoolStr(onlySelectableWP))P("Screen output font name: "..OutputFont)P("=========================================")local a,b=false,nil;if INGAME then a,b,_=xpcall(function()Config.core=library.getCoreUnit()Config.databanks=library.getLinksByClass('DataBank',true)Config.screens=library.getLinksByClass('Screen',true)end,Traceback)if not a then P("Error in Link Detection:\n"..b)unit.exit()return end else Config.core=unit.core;Config.databanks={unit.databank}Config.screens={unit.screen}end;if Config.core==nil then P("[E] No Core connected! Ending script.")unit.exit()return end;PM=require('YFS-Tools:../util/pos.lua').New(Config.core,construct,WM)if#Config.databanks>0 then local c=""if#Config.databanks>1 then c="s"else c=" '"..Config.databanks[1].getName().."'"end;P(#Config.databanks.." databank"..c.." connected.")else P("[E] DataBank not found.")end;if#Config.screens>0 then local c=""if#Config.screens>1 then c="s"end;P(#Config.screens.." screen"..c.." connected.")end;if not INGAME then onlyForRoute="Hema"end;if loadWaypoints~=true then P("[I] Waypoints loading is off.")elseif#Config.databanks>0 then local d=0;for e=1,#Config.databanks,1 do local f=Config.databanks[e]P("===== Checking db '"..f.getName().."' =====")if f.hasKey(ARCH_SAVED_LOCATIONS)then P('ArchHud databank detected.')DetectedArch=e;local g=f.getStringValue(ARCH_SAVED_LOCATIONS)if g~=""then P('Searching stored locations...')local h=json.decode(g)if IsTable(h)then Cmd.GetStoredLocations(h)end end end;if f.hasKey(YFS_ROUTES)or f.hasKey(YFS_NAMED_POINTS)then P('YFS databank detected.')YFSDB=Dtbk.new(f)DetectedYFS=true;if not onlySelectableWP then Cmd.YFSLoadNamedWaypoints()end;Cmd.YFSLoadRoutepoints(onlySelectableWP,onlyForRoute)end;local i=PM.GetWaypointCount()if i==d then P("[I] No waypoints loaded from db "..e)else P("[I] "..i-d.." waypoints loaded from db "..e)end;d=PM.GetWaypointCount()end;P("=======================")if PM.GetWaypointCount()>0 then P("[I] Total "..PM.GetWaypointCount().." waypoints loaded.")else P("[I] No waypoints loaded.")end;P("=======================")end

        end)

        package.preload['YFS-Tools:sys_onInputText.lua']=(function()

        local a={}function a.Run(b)if not SU.StartsWith(b,"/")then return end;if not Cmd then return E("[FATAL ERROR] Commands processor not assigned!")end;local c={}c['arch-save-named']=1;c['conversionTest']=1;c['posData']=1;c['help']='Help'c['planetInfo']=1;c['printAltitude']=1;c['printPos']=1;c['printWorldPos']=1;c['warpCost']=1;c['wp-altitude-ceiling']=1;c['wp-export']=1;c['yfs-add-altitude-wp']=1;c['yfs-build-route-from-wp']=1;c['yfs-save-named']=1;c['yfs-save-route']=1;c['yfs-replace-wp']=1;c['yfs-route-altitude']=1;c['yfs-route-nearest']=1;c['yfs-route-to-named']=1;c['yfs-wp-altitude']=1;c['DumpRoutes']=1;c['DumpPoints']=1;c['routes']=1;if DEBUG then c['YfsTestData']=1;c['x']=1 end;for d,e in pairs(c)do if SU.StartsWith(b,"/"..d)then local f=b:sub(d:len()+2)or""f=SU.Trim(f)if d=='help'then d="PrintHelp"end;local g=SU.SplitAndCapitalize(d,'-').."Cmd"local h=SU.If(type(e)=="string",e,"Cmd")P("Executing /"..d..SU.If(f~=""," with: "..f))if not _G[h]then return E("[FATAL ERROR] "..h.." not found!")end;if _G[h][g]then return _G[h][g](f)end end end;P("~~~~~~~~~~~~~~~~~~~~~")P("[E] Unknown command: "..b)P("[I] Supported commands:")for i,g in ipairs(GetSortedAssocKeys(c))do P("/"..g)end end;return a

        end)

        package.preload['YFS-Tools:../util/wpointer/1-FunctionManager.lua']=(function()

        function LinkedList(a,b)local c={}local d={}local e=0;local f,g,h,i=b..'Remove',b..'Add',b..'index',b..'ref'c[f]=function(j)local k,d=e,d;if k>1 then if j[h]==-1 then return end;local l,m=d[k],j[h]d[m]=l;d[k]=nil;l[h]=m;e=k-1;j[h]=-1;j[i]=nil elseif k==1 then d[1]=nil;e=0;j[h]=-1;j[i]=nil end end;c[g]=function(j,n)local h,i=h,i;if j[h]and j[h]~=-1 then if not j[i]==c or n then j[i][f](j)else return end end;local k=e+1;d[k]=j;j[h]=k;j[i]=c;e=k end;c[b..'GetData']=function()return d,e end;return c end;local math=math;local o,p,q=math.sin,math.cos,math.rad;function RotMatrixToQuat(r,s,t)local u,v,w=r[1],s[2],t[3]local x=u+v+w;if x>0 then local y=0.5/(x+1)^0.5;return(s[3]-t[2])*y,(t[1]-r[3])*y,(r[2]-s[1])*y,0.25/y elseif u>v and u>w then local y=1/(2*(1+u-v-w)^0.5)return 0.25/y,(s[1]+r[2])*y,(t[1]+r[3])*y,(s[3]-t[2])*y elseif v>w then local y=1/(2*(1+v-u-w)^0.5)return(s[1]+r[2])*y,0.25/y,(t[2]+s[3])*y,(t[1]-r[3])*y else local y=1/(2*(1+w-u-v)^0.5)return(t[1]+r[3])*y,(t[2]+s[3])*y,0.25/y,(r[2]-s[1])*y end end;function GetQuaternion(z,A,B,C)if type(z)=='number'then if C==nil then if z==z and A==A and B==B then local q,o,p=q,o,p;z,A,B=-q(z*0.5),q(A*0.5),-q(B*0.5)local D,E,F=o(z),o(A),o(B)local G,H,I=p(z),p(A),p(B)return D*H*I-G*E*F,G*E*I+D*H*F,G*H*F-D*E*I,G*H*I+D*E*F else return 0,0,0,1 end else return z,A,B,C end elseif type(z)=='table'then if#z==3 then local z,A,B,C=RotMatrixToQuat(z,A,B)return z,A,B,-C elseif#z==4 then return z[1],z[2],z[3],z[4]else print('[E] Unsupported Rotation!')end end end;function QuaternionMultiply(J,K,L,M,N,O,P,Q)return J*Q+M*N+K*P-L*O,K*Q+M*O+L*N-J*P,L*Q+M*P+J*O-K*N,M*Q-J*N-K*O-L*P end;function RotatePoint(J,K,L,M,R,S,T,U,V,W)local X,Y,Z=2*(J*S-K*R),2*(J*T-L*R),2*(K*T-L*S)return R+K*X+L*Y+M*Z+U,S-J*X-M*Y+L*Z+V,T+M*X-J*Y-K*Z+W end;function getRotationManager(_,a0,a)local print,a1,a2,a3,a4=DUSystem.print,table.unpack,QuaternionMultiply,RotatePoint,GetQuaternion;local a5,a6,a7,a8=nil,false,true,false;local a9=nil;local aa,ab,ac=a0[1],a0[2],a0[3]local ad=false;local ae,af=true,true;local ag=math.random()*0.00001;local ah,ai,aj,ak=0,0,0,1;local al,am,an,ao=0,0,0,1;local ap,aq,ar=0,1,0;local as={}local at=LinkedList(a,'sub')local au={}local av={0,0,0,1,0,0,0,0,0,0}local function aw(ax,ay,az,aA,aB,aC,aD,aE,aF,aG)if not ax then ax,ay,az,aA,aB,aC,aD,aE,aF,aG=a1(av)else av={ax,ay,az,aA,aB,aC,aD,aE,aF,aG}end;local aH,aI,aJ=aa,ab,ac;if not ad then aH,aI,aJ=aH-aB,aI-aC,aJ-aD end;if af then a0[1],a0[2],a0[3]=a3(ax,ay,az,-aA,aH,aI,aJ,aE,aF,aG)else a0[1],a0[2],a0[3]=aH+aE,aI+aF,aJ+aG end;if ae then ax,ay,az,aA=a2(al,am,an,ao,ax,ay,az,aA)else ax,ay,az,aA=al,am,an,ao end;_[1],_[2],_[3],_[4]=ax,ay,az,aA;if a8 then ap,aq,ar=2*(ax*ay+az*aA),1-2*(ax*ax+az*az),2*(ay*az-ax*aA)end;local aK,aL=at.subGetData()for aM=1,aL do aK[aM].update(ax,ay,az,aA,aa,ab,ac,a0[1],a0[2],a0[3])end;a6=false;a7=true end;au.update=aw;local function aN()if not a5 then aw()else a5.bubble()end end;local function aO()local aP,aQ,aR,aS=a4(ah,ai,aj,ak)if aP~=al or aQ~=am or aR~=an or aS~=ao then al,am,an,ao=aP,aQ,aR,aS;aN()au.bubble()return true end;return false end;function au.enableNormal()a8=true end;function au.disableNormal()a8=false end;function au.setSuperManager(aT)a5=aT;if not aT then av={0,0,0,1,0,0,0,0,0,0}a6=true end end;function au.addToQueue(aU)if not a6 then as[#as+1]=aU end end;function au.addSubRotation(aT)aT.setSuperManager(au)at.subAdd(aT,true)au.bubble()end;function au.remove()if a5 then a5.removeSubRotation(au)au.setSuperManager(false)au.bubble()end end;function au.removeSubRotation(aV)aV.setSuperManager(false)at.subRemove(aV)end;function au.bubble()if a5 and not a6 then as={}a6=true;a7=false;a5.addToQueue(aw)else a6=true end end;function au.checkUpdate()local aW=a6;if aW and a7 then aw()as={}elseif a7 then for aM=1,#as do as[aM]()end;as={}else a5.checkUpdate()end;return aW end;local a9=au.bubble;local function aX(aY,aZ)aY.update=aw;function aY.getPosition()return aa,ab,ac end;function aY.getRotationManger()return au end;function aY.getSubRotationData()return at.subGetData()end;aY.checkUpdate=au.checkUpdate;function aY.setPosition(aP,aQ,aR)if type(aP)=='table'then aP,aQ,aR=aP[1],aP[2],aP[3]end;if not(aP~=aP or aQ~=aQ or aR~=aR)then local a_=aQ+ag;if aa~=aP or ab~=a_ or ac~=aR then aa,ab,ac=aP,a_,aR;a9()return true end end;return false end;function aY.getNormal()return ap,aq,ar end;function aY.rotateXYZ(b0,b1,b2,b3)if b0 and b1 and b2 then ah,ai,aj,ak=b0,b1,b2,b3;aO()if aZ then aZ()end else if type(b0)=='table'then if#b0==3 then ah,ai,aj,ak=b0[1],b0[2],b0[3],nil;local b4=aO()if aZ then aZ()end;goto b5 end end;print('Invalid format. Must be three angles, or right, forward and up vectors, or a quaternion. Use radians if angles.')::b5::return false end end;function aY.rotateX(b0)ah=b0;ak=nil;aO()if aZ then aZ()end end;function aY.rotateY(b1)ai=b1;ak=nil;aO()if aZ then aZ()end end;function aY.rotateZ(b2)aj=b2;ak=nil;aO()if aZ then aZ()end end;function aY.setDoRotateOri(b6)ae=b6;a9()end;function aY.setDoRotatePos(b6)af=b6;a9()end;function aY.setPositionIsRelative(b7)ad=b7;a9()end;function aY.getRotation()return al,am,an,ao end end;au.assignFunctions=aX;return au end

        end)

        package.preload['YFS-Tools:../util/wpointer/2-Object.lua']=(function()

        positionTypes={globalP=false,localP=true}orientationTypes={globalO=false,localO=true}local a=DUSystem.print;function ObjectGroup(b,c,d)local b=b or{}local self={style='',gStyle='',class='default',objects=b,transX=c,transY=d,enabled=true,glow=false,gRad=10,scale=false,isZSorting=true}function self.addObject(e,f)local f=f or#b+1;b[f]=e;return f end;function self.removeObject(f)b[f]={}end;function self.hide()self.enabled=false end;function self.show()self.enabled=true end;function self.isEnabled()return self.enabled end;function self.setZSort(g)self.isZSorting=g end;function self.setClass(h)self.class=h end;function self.setStyle(i)self.style=i end;function self.setGlowStyle(j)self.gStyle=j end;function self.setGlow(k,l,m)self.glow=k;self.gRad=l or self.gRad;self.scale=m or false end;return self end;ConstructReferential=getRotationManager({0,0,0,1},{0,0,0},'Construct')ConstructReferential.assignFunctions(ConstructReferential)ConstructOriReferential=getRotationManager({0,0,0,1},{0,0,0},'ConstructOri')ConstructOriReferential.assignFunctions(ConstructOriReferential)function Object(n,o)local p,q,r={},{},{}local positionType=positionType;local orientationType=orientationType;local s={0,0,0,1}local t={0,0,0}local u=getRotationManager(s,t,'Object Rotation Handler')local self={true,p,q,r,s,t,o,n}u.assignFunctions(self)self.setPositionIsRelative(true)self.setPositionIsRelative=nil;function self.hide()self[1]=false end;function self.show()self[1]=true end;local v=LoadUIModule;if v==nil then v=function()end end;local w=LoadPureModule;if w==nil then w=function()end end;w(self,p,q)v(self,r,u)local function x()u.remove()local o,n=self[7],self[8]if o and n then ConstructReferential.addSubRotation(u)elseif o then ConstructOriReferential.addSubRotation(u)end;self.setDoRotateOri(o)self.setDoRotatePos(n)end;x()function self.setOrientationType(orientationType)self[7]=orientationType;x()end;function self.setPositionType(positionType)self[8]=positionType;x()end;function self.getRotationManager()return u end;function self.addSubObject(e)return u.addSubRotation(e.getRotationManager())end;function self.removeSubObject(f)u.removeSubRotation(f)end;return self end;function ObjectBuilderLinear()local self={}function self.setPositionType(positionType)local self={}local positionType=positionType;function self.setOrientationType(orientationType)local self={}local orientationType=orientationType;function self.build()return Object(positionType,orientationType)end;return self end;return self end;return self end

        end)

        package.preload['YFS-Tools:../util/wpointer/3-PureModule.lua']=(function()

        function LoadPureModule(self,a,b)function self.getMultiPointBuilder(c)local d={}local e=LinkedList('','')b[#b+1]=e;function d.addMultiPointSVG()local f=false;local g,h,i={},{},{}local j={g,h,i,false,false}local self={}local k=1;function self.show()if not f then f=true;e.Add(j)end end;function self.hide()if f then f=false;e.Remove(j)end end;function self.addPoint(l)g[k]=l[1]h[k]=l[2]i[k]=l[3]k=k+1;return self end;function self.setPoints(m)for n=1,#m do local l=m[n]g[n]=l[1]h[n]=l[2]i[n]=l[3]end;k=#m+1;return self end;function self.setDrawFunction(o)j[4]=o;return self end;function self.setData(p)j[5]=p;return self end;function self.build()if k>1 then e.Add(j)f=true else print("WARNING! Malformed multi-point build operation, no points specified. Ignoring.")end end;return self end;return d end;function self.getSinglePointBuilder(c)local d={}local q=LinkedList('','')a[#a+1]=q;function d.addSinglePointSVG()local f=false;local r={false,false,false,false,false}function self.setPosition(s,t,u)if type(s)=='table'then r[1],r[2],r[3]=s[1],s[2],s[3]else r[1],r[2],r[3]=s,t,u end;return self end;function self.setDrawFunction(o)r[4]=o;return self end;function self.setData(p)r[5]=p;return self end;function self.show()if not f then f=true end end;function self.hide()if f then q.Remove(r)f=false end end;function self.build()q.Add(r)f=true;return self end;return self end;return d end end;function ProcessPureModule(v,a,b,w,x,y,z,A,B,C,D,E,F,G,H,I,J)for K=1,#a do local L=a[K]local M,N=L.GetData()for O=1,N do local a=M[O]local P,Q,R=a[1],a[2],a[3]local u=B*P+C*Q+D*R+I;if u<0 then goto S end;v=v+1;x[v]=-u;w[-u]=a[4]((y*P+z*Q+A*R+H)/u,(E*P+F*Q+G*R+J)/u,u,a[5])::S::end end;for K=1,#b do local L=b[K]local T,U=L.GetData()for V=1,U do local b=T[V]local W,X,Y={},{},{}local Z,_,a0=b[1],b[2],b[3]local a1=#Z;local a2=0;for k=1,a1 do local P,Q,R=Z[k],_[k],a0[k]local u=B*P+C*Q+D*R+I;if u<0 then goto S end;W[k],X[k]=(y*P+z*Q+A*R+H)/u,(E*P+F*Q+G*R+J)/u;a2=a2+u end;local a3=-a2/a1;v=v+1;x[v]=a3;w[a3]=b[4](W,X,a3,b[5])::S::end end;return v end

        end)

        package.preload['YFS-Tools:../util/wpointer/4-ProjectionManager.lua']=(function()

        function Projector()local a,b,math=DUConstruct,DUSystem,math;local c,d,e,f={'',''},true,true,true;local g,h,i,j=b.getScreenWidth,b.getScreenHeight,b.getArkTime,b.setScreen;local k,l,m,n=b.getCameraWorldRight,b.getCameraWorldForward,b.getCameraWorldUp,b.getCameraWorldPos;local o,p,q,r=a.getWorldRight,a.getWorldForward,a.getWorldUp,a.getWorldPosition;local s,t=RotMatrixToQuat,QuaternionMultiply;local u,v,w=math.tan,math.atan,math.rad;local x=b.getCameraHorizontalFov;local y=0;local z=LinkedList('Group','')local self={}function self.getSize(A,B,C,D)local E=v(A,B)*y;if C then if E>=C then return C else if D then if E<D then return D end end;return E end end;return E end;function self.refresh()d=not d end;function self.setLowLatency(F)f=F end;function self.setSmooth(G)e=G end;function self.addObjectGroup(H)z.Add(H)end;function self.removeObjectGroup(H)z.Remove(H)end;function self.getSVG()local i,v,I,J,K,L,t=i,v,table.sort,table.unpack,string.format,table.concat,t;local M=i()d=not d;local N=false;if clicked then clicked=false;N=true end;local O=holding;local Q={}local R,S=g(),h()local T=R/S;local U=u(w(x()*0.5))local V=R*0.5/U;y=V;local W=1/U;local X=W*T;local Y,Z=W*R*0.5,-X*S*0.5;local _,a0=z.GetData()local a1,a2,a3={},{},0;local a4=ProcessPureModule;local a5=ProcessUIModule;local a6=ProcessOrientations;local a7=ProcessActionEvents;if a4==nil then a4=function(a8)return a8 end end;if a5==nil then a5=function(a8)return a8 end;a6=function()end;a7=function()end end;local a9={}local aa,ab,ac,ad=k(),l(),m(),n()do local ae,af,ag=o(),p(),q()ConstructReferential.rotateXYZ(ae,af,ag)ConstructOriReferential.rotateXYZ(ae,af,ag)ConstructReferential.setPosition(r())ConstructReferential.checkUpdate()ConstructOriReferential.checkUpdate()end;local ah,ai,aj,ak=s(aa,ab,ac)local al,am,an,ao,ap,aq,ar,as,at=aa[1]*Y,aa[2]*Y,aa[3]*Y,ab[1],ab[2],ab[3],ac[1]*Z,ac[2]*Z,ac[3]*Z;local au,av,aw=ad[1],ad[2],ad[3]local ax=i()-M;local ay,az,aA,aB,aC=0,0,0,0,0;for aD=1,a0 do local H=_[aD]if H.enabled==false then goto aE end;local aF=H.objects;local aG,aH=0,0;local aI,aJ,a8={},{},0;local aK=true;for aL=1,#aF do local aM=aF[aL]if not aM[1]then goto aN end;aM.checkUpdate()local aO,aP,aQ,aR=aM[5],aM[6],aM[7],aM[8]local aS,aT,aU=aP[1]-au,aP[2]-av,aP[3]-aw;local aV,aW,aX,aY=aO[1],aO[2],aO[3],aO[4]local aZ,a_,b0,b1=t(aV,aW,aX,aY,ah,ai,aj,ak)local b2,b3,b4,b5,b6,b7,b8,b9,ba=2*aZ*aZ,2*aZ*a_,2*aZ*b0,2*aZ*b1,2*a_*a_,2*a_*b0,2*a_*b1,2*b0*b0,2*b0*b1;local bb,bc,bd,be,bf,bg,bh,bi,bj=(1-b6-b9)*Y,(b3+ba)*Y,(b4-b8)*Y,b3-ba,1-b2-b9,b7+b5,(b4+b8)*Z,(b7-b5)*Z,(1-b2-b6)*Z;local bk,bl,bm=al*aS+am*aT+an*aU,ao*aS+ap*aT+aq*aU,ar*aS+as*aT+at*aU;local bn=a6(a9,ah,ai,aj,ak,Y,Z)a9[aV..','..aW..','..aX..','..aY]={bb,bd,be,bg,bh,bj}aG=aG+bl;local bo=aM[4]local bp=i()aM.previousUI=a7(bo,aM.previousUI,N,O,ao,ap,aq,bn,au,av,aw,I)local bq=i()az=az+bq-bp;a8=a4(a8,aM[2],aM[3],aI,aJ,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm)a8=a5(a8,bo,aI,aJ,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,bn,V)ay=ay+i()-bq::aN::end;local br=i()if H.isZSorting then I(aJ)end;local bs=i()aA=aA+bs-br;local bt={}for bu=1,a8 do bt[bu]=aI[aJ[bu]]end;local bv=i()aB=aB+bv-bs;if a8>0 then local bw=aG/aH;local bx=L(bt)local by,bz='',''if e then bz='</div>'if d then by='<div class="second" style="visibility: hidden">'else by='<style>.first{animation: f1 0.008s infinite linear;} .second{animation: f2 0.008s infinite linear;} @keyframes f1 {from {visibility: hidden;} to {visibility: hidden;}} @keyframes f2 {from {visibility: visible;} to { visibility: visible;}}</style><div class="first">'end end;local bA=('<style>svg{background:none;width:%gpx;height:%gpx;position:absolute;top:0px;left:0px;}'):format(R,S)local bB=('<svg viewbox="-%g -%g %g %g"'):format(R*0.5,S*0.5,R,S)a3=a3+1;a2[a3]=bw;if H.glow then local A;if H.scale then A=v(H.gRad,bw)*V else A=H.gRad end;a1[bw]=L({by,'<div class="',H.class,'">',bA,H.style,'.blur {filter: blur(',A,'px) brightness(60%) saturate(3);',H.gStyle,'}</style>',bB,' class="blur">',bx,'</svg>',bB,'>',bx,'</svg></div>',bz})else a1[bw]=L({by,'<div class="',H.class,'">',bA,H.style,'</style>',bB,'>',bx,'</svg></div>',bz})P(a1[bw])end end;aC=aC+i()-bv::aE::end;I(a2)for aD=1,a3 do Q[aD]=a1[a2[aD]]end;if d then c[2]=L(Q)return L(c),ax,ay,az,aA,aB,aC else if e then c[1]=L(Q)if f then j('<div>Refresh Required (ALT+2)!</div>')end else c[1]=''end;return nil end end;return self end

        end)

        package.preload['YFS-Tools:../util/wpointer/wpointer_custom.lua']=(function()

        function WPointer(a,b,c,d,e,f,g,h)local i,j,k,l=math.sqrt,math.floor,math.max,Round;local m,n=construct.getWorldPosition,construct.getMass;local o=0;local self={radius=d,x=a,y=b,z=c,name=e,type=f,localeType=g,subId=h,keyframe=o}function self.getWaypointInfo()local p=CNID;local q=m(p)local r,s,t=self.x-q[1],self.y-q[2],self.z-q[3]local u=i(r*r+s*s+t*t)local v=0;if u>400000 and u<=100000000 then local w=n(p)/1000;v=k(j(w*j(u/1000/200)*0.00024),1)end;local x=l(u,2)return{self.name,l(u/1000/200,2),v,l(u/1000,2),x}end;return self end

        end)

        package.preload['YFS-Tools:waypointer_lib.lua']=(function()

        require('YFS-Tools:../util/wpointer/1-FunctionManager.lua')require('YFS-Tools:../util/wpointer/2-Object.lua')require('YFS-Tools:../util/wpointer/3-PureModule.lua')require('YFS-Tools:../util/wpointer/4-ProjectionManager.lua')require('YFS-Tools:../util/wpointer/wpointer_custom.lua')

        end)

        package.preload['YFS-Tools:waypointer_start.lua']=(function()


        local enableWaypointer=true--export: Enable waypoint AR display. Default: checked.


        local lowLatencyMode=true--export: Enables low latency for screen render, which can sometimes bug out if a frame gets skipped. A restart is required then.


        local highPerformanceMode=false--export: Disables glow effect which can in some cases improve FPS significantly


        local smooth=false--export: Caution: display can fault! Enables full FPS rendering, which increases the perceived performance for an actual performance impact


        local glowRadius=3--export: Sets the pixel size of the glow effect. Only in non-higPerformanceMode; 0=disabled.


        local displayWarpCells=false--export: Enable display of warp cells amount


        local displaySolarWP=false--export: Enable display of solar objects (planets, moons)


        local displayCustomWP=true--export: Enable display of custom waypoints (routes)


        local archHudWaypointSize=1--export: The size in meters of a custom waypoint (0.1 - 10)


        local archHudWPRender=3--export: The number of kilometers above which distance custom waypoints are not rendered


        local maxWaypointSize=200--export: The max size of a waypoint in pixels


        local minWaypointSize=20--export: The min size of a waypoint in pixels (max 300)


        local infoHighlight=300--export: The number of pixels within info is displayed


        local fontsize=30--export: Font size (default: 20)


        local colorWarp="#ADD8E6"--export: RGB color of warpable waypoints. Default: "#ADD8E6"


        local nonWarp="#FFA500"--export: RGB color of non-warpable waypoints. Default: "#FFA500"


        local colorWaypoint="#32CD32"--export: RGB color of custom waypoints. Default: "#32CD32"

        local a,b,c,d,e,f=string.format,math.sqrt,string.len,math.max,system.print,utils.clamp;local g,h=table.concat,table.unpack;local i={0,0,0}local j={0,0,0}local k={0,0,0}local l=system.getScreenWidth()/2;local m=system.getScreenHeight()/2;local n=ObjectBuilderLinear()fontsize=f(fontsize,10,40)glowRadius=f(glowRadius,0,10)minWaypointSize=f(minWaypointSize,5,200)maxWaypointSize=f(maxWaypointSize,minWaypointSize+1,400)archHudWaypointSize=f(archHudWaypointSize or 0.5,0.1,10)if not enableWaypointer then WAYPOINTER_ENABLED=false end;WaypointOpt=false;local o={['en-US']=1,['fr-FR']=2,['de-De']=3}projector=Projector()projector.setSmooth(smooth)local p=ObjectGroup()projector.addObjectGroup(p)local q=[[

        svg { stroke-width: 3; vertical-align:middle; text-anchor:start; fill: white; font-family: Refrigerator; font-size: ]]..fontsize..[[;

        }]]p.setStyle(q)if not highPerformanceMode and glowRadius>0 then p.setGlow(true,glowRadius,true)end;projector.setLowLatency(lowLatencyMode==true)local function r(s,t,u,v,w,x,y,z,A)x[y],x[y+1],x[y+2],x[y+3],x[y+4],x[y+5]=t,u,w,w,A,v;s[z]='<text x="%g" y="%g" fill-opacity="%g" stroke-opacity="%g" stroke="%s">%s</text>'return y+6,z+1 end;local function B(s,t,u,C,D,E,y,z,A)E[y],E[y+1],E[y+2],E[y+3],E[y+4]=D,A,t,u,C;s[z]='<path fill="none" stroke-width="%g" stroke="%s" d="M%g %gh%g"/>'return y+5,z+1 end;local F=b(l*l+m*m)local function G(s,H,I,J,E,y,K,A,L,M)local N=fontsize;local O,Q,R,S,T=h(M)local U=J.keyframe;y,K=B(s,H,I+3,c(O)*N*0.6,2,E,y,K,A)y,K=r(s,H,I,O,1,E,y,K,A)if L<=infoHighlight then if U<6 then J.keyframe=U+1 end else if U~=0 then J.keyframe=U-1 end end;local w=U/6;if WaypointOpt and L<15 then system.setWaypoint('::pos{0,0,'..J.x..','..J.y..','..J.z..'}')WaypointOpt=false end;if U>0 then T=T or 0;S=S or 0;Q=Q or 0;local V=''if T<=2000 then V=T..' m'elseif S<=200 then V=S..' km'else V=Q..' SU'end;local W=N+5;local X=U*10;local Y=H+80;y,K=r(s,Y-X,I+W,V,w,E,y,K,A)if displayWarpCells and Q>2 then y,K=r(s,Y-X,I+W*2,J.localeType,w,E,y,K,A)y,K=r(s,Y-X,I+W*3,R..' Warp Cells',w,E,y,K,A)elseif J.type=='WP'then y,K=r(s,Y-X,I+W*2,'Alt: '..J.subId,w,E,y,K,A)else y,K=r(s,Y-X,I+W*2,J.localeType,w,E,y,K,A)end end;return y end;local function Z(H,I,_,J)local E,y={},1;local s,K={},1;local L=b(H*H+I*I)local a0=J.radius;local a1=_/1000/200/100;local a2=Round(d(projector.getSize(a0,_,100000000,minWaypointSize)-a1,2),1)local M=J.getWaypointInfo()local Q,T=M[2],M[5]a2=f(a2,minWaypointSize,maxWaypointSize)if J.type=='Planet'or J.type=='WP'then if T<2 or L>F or J.type=='WP'and _>archHudWPRender*1000 then return''end elseif J.type=='Moon'then if Q>20 then return''end else if Q>10 then return''end end;local A=colorWarp;if J.type=='WP'then A=colorWaypoint elseif Q>500 then A=nonWarp end;s[K]='<circle cx="%g" cy="%g" r="%g" fill="%s" stroke="%s"/>'E[y],E[y+1]=H,I;y=y+2;if a0==archHudWaypointSize*1.25 then a2=a2/2;E[y+1]=colorWarp else E[y+1]='none'end;E[y]=a2;E[y+2]=A;y=y+3;y=G(s,H+a2+5,I-a2+5,J,E,y,K+1,A,L,M)return g(s):format(h(E))end;local a3=n.setPositionType(positionTypes.globalP).setOrientationType(orientationTypes.globalO).build()p.addObject(a3)local a4=a3.getSinglePointBuilder()if displaySolarWP then local a5=o[system.getLocale()]for a6,a7 in pairs(WaypointInfo[0])do local a8=a7.center;local a9=a7.name[a5]local aa=a7.radius;local ab=a7.type[1]if ab~="Asteroid"then local ac=a7.type[a5]local ad=WPointer(a8[1],a8[2],a8[3],aa*1.25,a9,ab,ac,nil)local ae=a4.addSinglePointSVG()ae.setPosition(a8[1],a8[2],a8[3]).setData(ad).setDrawFunction(Z).build()P("[WPointer] Added "..a9)end end end;if displayCustomWP and WM then for af,ag in ipairs(WM:getSorted())do local ah=a("%.2f",ag.mapPos.altitude)local ai=PM.MapPos2String(ag.mapPos)local aj=PM.MapPosToWorldVec3(ai)local ad=WPointer(aj.x,aj.y,aj.z,archHudWaypointSize*1.25,ag.name,'WP','WP',ah)local ae=a4.addSinglePointSVG()ae.setPosition(aj.x,aj.y,aj.z).setData(ad).setDrawFunction(Z).build()P("[WPointer] Added "..ag.name)end end

        end)

        package.preload['YFS-Tools:sys_onActionStartWp.lua']=(function()

        local a={}function a.Run(b)if b=='option1'then WaypointOpt=true;return end;if b=='option2'then projector.refresh()return end end;return a

        end)

        package.preload['YFS-Tools:unit_onTimer(update).lua']=(function()

        local a={}function a.Run(b)if b=='update'then if not INGAME then P("onTimer(update)")end;if not DEBUG then local c=projector.getSVG()if c then system.setScreen(c)end;return end;local d=system.getArkTime()local c,e,f,g,h,i,j=projector.getSVG()local k=system.getArkTime()-d;local l=math.floor;local function m(n,o,p)return'<div>'..n..':'..l(o*100000)/100 ..p..'</div>'end;collectgarbage('collect')if c then if not DEBUG then system.setScreen(c)else system.setScreen(table.concat({c,'<div>CPU Instructions: ',system.getInstructionCount()..'/'..system.getInstructionLimit()..'</div>',m('Memory',collectgarbage('count')/1000,'kb'),m('Total',k,'ms'),m('Pre-Processing',e,'ms'),m('Draw Processing',f,'ms'),m('Event',g,'ms'),m('Z-Sorting',h,'ms'),m('Z-Buffer Copy',i,'ms'),m('Post Processing',j,'ms')}))end end end end;return a

        end)

        library.addEventHandlers(library)

        library.addEventHandlers(system)

        library.addEventHandlers(player)

        library.addEventHandlers(construct)

        library.addEventHandlers(unit)
  system:
    onActionStart(action):
      lua: system:triggerEvent('onActionStart',action)
    onActionLoop(action):
      lua: system:triggerEvent('onActionLoop',action)
    onActionStop(action):
      lua: system:triggerEvent('onActionStop',action)
    onUpdate():
      lua: system:triggerEvent('onUpdate')
    onFlush():
      lua: system:triggerEvent('onFlush')
    onInputText(text):
      lua: system:triggerEvent('onInputText',text)
    onCameraChanged(mode):
      lua: system:triggerEvent('onCameraChanged',mode)
  player:
    "onParentChanged(oldId,newId)":
      lua: player:triggerEvent('onParentChanged',oldId,newId)
  construct:
    onDocked(id):
      lua: construct:triggerEvent('onDocked',id)
    onUndocked(id):
      lua: construct:triggerEvent('onUndocked',id)
    onPlayerBoarded(id):
      lua: construct:triggerEvent('onPlayerBoarded',id)
    onVRStationEntered(id):
      lua: construct:triggerEvent('onVRStationEntered',id)
    onConstructDocked(id):
      lua: construct:triggerEvent('onConstructDocked',id)
    onPvPTimer(active):
      lua: construct:triggerEvent('onPvPTimer',active)
  unit:
    onStop():
      lua: unit:triggerEvent('onStop')
    onTimer(timerId):
      lua: unit:triggerEvent('onTimer',timerId)
    onStart():
      lua: package.path="lua/?.lua;util/wpointer/?.lua;"..package.path;require('YFS-Tools:globals.lua')WAYPOINTER_ENABLED=true;DEBUG=false;require('YFS-Tools:libmain.lua')if
        INGAME then local Traceback=traceback else function Traceback(a)if a
        then P(tostring(a))end end;require'mockaround'end;local
        b,c,d=xpcall(function()require('YFS-Tools:startup.lua')end,Traceback)if
        not b then P("[E] Error in startup!")if c then P(c)end;unit.exit()return
        end;local e=require('YFS-Tools:sys_onInputText.lua')if e~=nil then
        system:onEvent('onInputText',function(self,f)e.Run(f)end)end;rot=0;local
        g;if WAYPOINTER_ENABLED then
        require('YFS-Tools:waypointer_lib.lua')require('YFS-Tools:waypointer_start.lua')if
        WAYPOINTER_ENABLED then local
        h=require('YFS-Tools:sys_onActionStartWp.lua')if h~=nil then
        system:onEvent('onActionStart',function(self,i)h.Run(i)end)end;g=require('YFS-Tools:unit_onTimer(update).lua')if
        g~=nil then
        unit:onEvent('onTimer',function(unit,j)g.Run("update")end)end;P('[I]
        Waypointer module
        enabled.')unit.setTimer("update",1/240)system.showScreen(1)end end;if
        not WAYPOINTER_ENABLED then P('[I] Waypointer module disabled.')end;if
        INGAME then if DEBUGx then
        b,c,d=xpcall(function()PM.ConversionTest()end,Traceback)if not b then if
        c then P("[E] Error in test call:\n"..c)end;unit.exit()return end else
        unit.hideWidget()end;P("Type /help for available commands.")end
